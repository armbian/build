# DO NOT EDIT THIS FILE
#
# Please edit /boot/armbianEnv.txt to set supported parameters
#

setenv overlay_error "false"
setenv console "both"
setenv verbosity "1"
setenv earlycon "off"
setenv bootlogo "false"
setenv displaymode "1080p60hz"
setenv force_16x9_display "false"

# Show what uboot default fdtfile is
echo "U-boot default fdtfile: ${fdtfile}"

if test -e ${devtype} ${devnum} ${prefix}armbianEnv.txt; then
	load ${devtype} ${devnum} ${loadaddr} ${prefix}armbianEnv.txt
	env import -t ${loadaddr} ${filesize}
fi

if test "${console}" = "both"; then setenv console_serial "true"; setenv console_display "true"; fi
if test "${console}" = "serial"; then setenv console_serial "true"; fi
if test "${console}" = "display"; then setenv console_display "true"; fi

if test "${console_display}" = "true"; then setenv consoleargs "console=tty0"; fi
if test "${console_serial}" = "true"; then setenv consoleargs "console=ttyS0,921600 ${consoleargs}"; fi

if test "${earlycon}" != "on"; then
	setexpr bootargs sub " earlycon=\\S* " " " "${bootargs}"
fi

if test "${bootlogo}" = "true"; then
	setenv plymouthargs "splash plymouth.ignore-serial-consoles"
else
	setenv plymouthargs "splash=verbose"
fi

setexpr bootargs sub "rootfstype=\\S*" "rootfstype=${rootfstype}" "${bootargs}"

setenv bootargs "root=${rootdev} ${bootargs} ${consoleargs} partition_type=generic loglevel=${verbosity} ${plymouthargs} ${extraargs} ${extraboardargs}"

load ${devtype} ${devnum} ${fdt_addr_r} ${prefix}dtb/${fdtfile}
fdt addr ${fdt_addr_r}
fdt resize 65536

if test "${mipi_lcd_exist}" = "0"; then
	fdt set /lcd status disabled
	fdt set /lcd1 status disabled
	fdt set /lcd2 status disabled
	fdt set /soc/apb4@fe000000/i2c@6c000/gt9xx@14 status disabled
	fdt set /soc/apb4@fe000000/i2c@6c000/ft5336@38 status disabled
else
	if test "${panel_type}" = "mipi_1"; then
		fdt set /drm-subsystem fbdev_sizes <1920 1200 1920 2400 32>
	else
		fdt set /drm-subsystem fbdev_sizes <1080 1920 1080 3840 32>
	fi
fi

for overlay_file in ${overlays}; do
	if load ${devtype} ${devnum} ${scriptaddr} ${prefix}dtb/amlogic/overlay/${overlay_prefix}-${overlay_file}.dtbo; then
		echo "Applying kernel provided DT overlay ${overlay_prefix}-${overlay_file}.dtbo"
		fdt apply ${scriptaddr} || setenv overlay_error "true"
	fi
done

for overlay_file in ${user_overlays}; do
	if load ${devtype} ${devnum} ${scriptaddr} ${prefix}overlay-user/${overlay_file}.dtbo; then
		echo "Applying user provided DT overlay ${overlay_file}.dtbo"
		fdt apply ${scriptaddr} || setenv overlay_error "true"
	fi
done

if test "${overlay_error}" = "true"; then
	echo "Error applying DT overlays, restoring original DT"
	load ${devtype} ${devnum} ${fdt_addr_r} ${prefix}dtb/${fdtfile}
else
	if load ${devtype} ${devnum} ${scriptaddr} ${prefix}dtb/amlogic/overlay/${overlay_prefix}-fixup.scr; then
		echo "Applying kernel provided DT fixup script (${overlay_prefix}-fixup.scr)"
		source ${scriptaddr}
	fi
	if test -e ${devtype} ${devnum} ${prefix}fixup.scr; then
		load ${devtype} ${devnum} ${scriptaddr} ${prefix}fixup.scr
		echo "Applying user provided fixup script (fixup.scr)"
		source ${scriptaddr}
	fi
fi

# The symlinks for kernel and initrd.img are at different locations in debian and ubuntu
# Check and load from a location that exists
if test -e ${devtype} ${devnum} /vmlinuz; then
	load ${devtype} ${devnum} ${kernel_addr_r} /vmlinuz
	load ${devtype} ${devnum} ${ramdisk_addr_r} /initrd.img
else
	load ${devtype} ${devnum} ${kernel_addr_r} ${prefix}vmlinuz
	load ${devtype} ${devnum} ${ramdisk_addr_r} ${prefix}initrd.img
fi
booti ${kernel_addr_r} ${ramdisk_addr_r}:${filesize} ${fdt_addr_r}

# Recompile with:
# mkimage -C none -A arm -T script -d /boot/boot.cmd /boot/boot.scr

source "${BASH_SOURCE%/*}/include/rockchip64_common.inc"

BOOTPATCHDIR="u-boot-rk3399"
BOOT_SOC="rk3399"

case $BRANCH in

	legacy)

		KERNELSOURCE='https://github.com/friendlyarm/kernel-rockchip'
		KERNELBRANCH='branch:nanopi4-linux-v4.4.y'
		KERNELDIR='linux-rockchip64'
		KERNELCONFIG='linux-rockchip64'

	;;

esac

RKBIN_DIR="$SRC/cache/sources/rkbin-tools"

if [[ $BOARD == roc-rk3399-pc ]]; then

	BOOT_USE_MAINLINE_ATF=yes

elif [[ $BOARD == rockpi-4* ]]; then

	BOOT_USE_TPL_SPL_BLOB=yes
	BL31_BLOB='rk33/rk3399_bl31_v1.30.elf'

elif [[ $BOARD == nanopim4v2 || $BOARD == orangepi4 ]]; then

	BOOT_USE_BLOBS=yes
	DDR_BLOB='rk33/rk3399_ddr_933MHz_v1.24.bin'
	MINILOADER_BLOB='rk33/rk3399_miniloader_v1.19.bin'
	BL31_BLOB='rk33/rk3399_bl31_v1.30.elf'

else

	BOOT_USE_BLOBS=yes
	DDR_BLOB='rk33/rk3399_ddr_800MHz_v1.24.bin'
	MINILOADER_BLOB='rk33/rk3399_miniloader_v1.19.bin'
	BL31_BLOB='rk33/rk3399_bl31_v1.30.elf'

fi

prepare_boot_configuration()

uboot_custom_postprocess()
{
	if [[ $BOOT_USE_MAINLINE_ATF == yes || $BOOT_USE_TPL_SPL_BLOB == yes ]]; then

		:

	elif [[ $BOOT_USE_BLOBS == yes ]]; then

		local tempfile=$(mktemp)
		tools/mkimage -n $BOOT_SOC -T rksd -d $RKBIN_DIR/$DDR_BLOB idbloader.bin
		cat $RKBIN_DIR/$MINILOADER_BLOB >> idbloader.bin
		loaderimage --pack --uboot ./u-boot-dtb.bin uboot.img 0x200000
		trust_merger --replace ./build/rk3399/debug/bl31/bl31.elf $RKBIN_DIR/$BL31_BLOB trust.ini

	else
		echo "Unsupported u-boot processing configuration!"
		exit 1
	fi
}

atf_custom_postprocess()
{
	:
}

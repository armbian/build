ARCH=arm64
KERNEL_IMAGE_TYPE=Image

BOOTSCRIPT="boot-espressobin.cmd:boot.cmd"
UBOOT_TARGET_MAP=";;u-boot.bin flash-image.bin"

BOOTSOURCE='https://github.com/MarvellEmbeddedProcessors/u-boot-marvell.git'
BOOTDIR=$MAINLINE_UBOOT_DIR
BOOTBRANCH='branch:u-boot-2017.03-armada-17.10'

UBOOT_USE_GCC='< 7.0'

BOOTENV_FILE='clearfog-default.txt'

ATFSOURCE='https://github.com/MarvellEmbeddedProcessors/atf-marvell'
ATFDIR='arm-trusted-firmware-espressobin'
ATFBRANCH='branch:atf-v1.3-armada-17.10'
ATF_USE_GCC='== 4.9'
ATF_COMPILER='arm-linux-gnueabi-'
ATF_TARGET_MAP='DEBUG=1 USE_COHERENT_MEM=0 LOG_LEVEL=20 SECURE=0 CLOCKSPRESET=CPU_800_DDR_800 DDR_TOPOLOGY=2 BOOTDEV=SPINOR PARTNUM=0 PLAT=a3700;;build/a3700/debug/bl31.bin'
case $BRANCH in
	default)
	KERNELSOURCE='https://github.com/MarvellEmbeddedProcessors/linux-marvell.git'
	KERNELBRANCH='branch:linux-4.4.52-armada-17.10'
	KERNELDIR='linux-marvell'

	KERNEL_USE_GCC='> 6.3'
	;;

	next)
	KERNELSOURCE=$MAINLINE_KERNEL_SOURCE
	KERNELBRANCH='branch:linux-4.17.y'
	KERNELDIR=$MAINLINE_KERNEL_DIR

	KERNEL_USE_GCC='> 7.0'
	;;

	dev)
	KERNELSOURCE=$MAINLINE_KERNEL_SOURCE
	KERNELBRANCH='branch:master'
	KERNELDIR=$MAINLINE_KERNEL_DIR

	KERNEL_USE_GCC='> 7.0'
	;;
esac

CPUMIN=250000
CPUMAX=1000000
GOVERNOR=ondemand

NM_IGNORE_DEVICES="interface-name:eth*,interface-name:wan*,interface-name:lan*,interface-name:br*"

write_uboot_platform()
{
#	dd if=$1/u-boot.mmc of=$2 bs=512 seek=1 status=noxfer > /dev/null 2>&1
        /bin/true
}

family_tweaks()
{
	chroot $SDCARD /bin/bash -c "apt-get -y -qq remove --auto-remove linux-sound-base alsa-base alsa-utils bluez>/dev/null 2>&1"
	[[ -f $SDCARD/etc/netplan/armbian-default.yaml ]] && sed -i "s/^  renderer.*/  renderer: networkd/" $SDCARD/etc/netplan/armbian-default.yaml
	cp $SRC/packages/bsp/mvebu64/10*  $SDCARD/etc/systemd/network/
	echo "#Marvell Espressobin Console" >> $SDCARD/etc/securetty
	echo "ttyMV0" >> $SDCARD/etc/securetty
}

uboot_custom_postprocess()
{
	local ATF_COMPILER='arm-linux-gnueabi-'
	local ATF_USE_GCC='< 6.0'
	local atfdir="$SRC/cache/sources/$ATFDIR/${ATFBRANCH##*:}"
	local ubootdir="$SRC/cache/sources/$BOOTDIR/${BOOTBRANCH##*:}"
	toolchain=$(find_toolchain "$ATF_COMPILER" "$ATF_USE_GCC")
	cd $atfdir
	display_alert "Building boot image" "" "info"
    make DEBUG=1 USE_COHERENT_MEM=0 LOG_LEVEL=20 SECURE=0 CLOCKSPRESET=CPU_800_DDR_800 DDR_TOPOLOGY=2 BOOTDEV=SPINOR PARTNUM=0 PLAT=a3700 all fip BL33=$SRC/cache/sources/$BOOTDIR/${BOOTBRANCH##*:}/u-boot.bin WTP=../../marvell-tools $CTHREADS CROSS_CM3=$toolchain/$ATF_COMPILER >> $DEST/debug/compilation.log
	cp build/a3700/debug/flash-image.bin $ubootdir
	cd $ubootdir
}

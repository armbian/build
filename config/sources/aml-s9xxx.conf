#BOOTSOURCE=$MAINLINE_UBOOT_SOURCE
#BOOTBRANCH='tag:v2018.09'
BOOTSOURCE='https://github.com/150balbes/u-boot.git'
BOOTBRANCH='tag:vim2.02'
BOOTDIR='u-boot-aml-s9xxx'

UBOOT_USE_GCC='> 7.0'
UBOOT_TARGET_MAP="u-boot-dtb.img;;u-boot.bin.sd.bin:u-boot.bin u-boot-dtb.img"

BOOTSIZE=128
BOOTFS_TYPE=fat

ARCH=arm64
KERNEL_IMAGE_TYPE=Image
KERNEL_USE_GCC='> 7.0'

SCR_ENV="uEnv.ini"
SCR_BOOT='boot-aml-s9xxx_ENV.cmd'
SCR_BOOT_EMMC='boot-aml-s9xxx_EMMC.cmd'

DISPLAY_MANAGER="lightdm"

case $BRANCH in
	default)
	KERNELDIR='LINUX_DEFAULT'
	KERNELSOURCE='https://github.com/150balbes/Amlogic_s905-kernel'
	KERNELBRANCH='tag:20181128'
#	KERNELBRANCH='branch:master'
	;;
	next)
	KERNELDIR='LINUX_NEXT'
	KERNELSOURCE='git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git'
	KERNELBRANCH='branch:master'
	;;
	dev)
	KERNELDIR='LINUX_DEV'
	KERNELSOURCE='https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git'
	KERNELBRANCH='branch:master'
#	KERNELSOURCE='git://git.kernel.org/pub/scm/linux/kernel/git/khilman/linux-amlogic.git'
#	KERNELBRANCH='branch:integ'
#	KERNELSOURCE='git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git'
#	KERNELBRANCH='branch:linux-4.17.y'
#	KERNELSOURCE='https://github.com/150balbes/Amlogic_s905-kernel'
#	KERNELBRANCH='branch:test'
	;;
esac

CPUMIN=500000
CPUMAX=2006000
GOVERNOR=ondemand

if [[ $ADD_UBOOT == yes ]]; then
    uboot_custom_postprocess()
    {
		local t=$SRC/cache/sources/$BOOTDIR/vim2.02/fip_vim2
		mv u-boot.bin bl33.bin

		$t/blx_fix.sh 	$t/gxl/bl30.bin \
				$t/gxl/zero_tmp \
				$t/gxl/bl30_zero.bin \
				$t/gxl/bl301.bin \
				$t/gxl/bl301_zero.bin \
				$t/gxl/bl30_new.bin bl30

		$t/acs_tool.pyc $t/gxl/bl2.bin \
				$t/gxl/bl2_acs.bin \
				$t/gxl/acs.bin 0

		$t/blx_fix.sh 	$t/gxl/bl2_acs.bin \
				$t/gxl/zero_tmp \
				$t/gxl/bl2_zero.bin \
				$t/gxl/bl21.bin \
				$t/gxl/bl21_zero.bin \
				$t/gxl/bl2_new.bin bl2

		$t/gxl/aml_encrypt_gxl 	--bl3enc --input $t/gxl/bl30_new.bin
		$t/gxl/aml_encrypt_gxl 	--bl3enc --input $t/gxl/bl31.img
		$t/gxl/aml_encrypt_gxl 	--bl3enc --input bl33.bin

		$t/gxl/aml_encrypt_gxl 	--bl2sig --input $t/gxl/bl2_new.bin \
					--output bl2.n.bin.sig

		$t/gxl/aml_encrypt_gxl 	--bootmk \
					--output u-boot.bin \
					--bl2 bl2.n.bin.sig \
					--bl30 $t/gxl/bl30_new.bin.enc \
					--bl31 $t/gxl/bl31.img.enc \
					--bl33 bl33.bin.enc

    }
fi

if [[ $ADD_UBOOT == yes ]]; then
    write_uboot_platform()
    {
    	dd if=$1/u-boot.bin of=$2 bs=1 count=442 conv=fsync > /dev/null 2>&1
    	dd if=$1/u-boot.bin of=$2 bs=512 skip=1 seek=1 conv=fsync > /dev/null 2>&1
    }
fi

family_tweaks()
{
	source $SRC/$BOARD_DIR/firmware-aml-full-20181114.sh

	echo 'ttyAML0' >> $SDCARD/etc/securetty

	cp $SRC/packages/bsp/mpv/mpv_mainline.conf $SDCARD/etc/mpv/mpv.conf
	install -m 755 $SRC/$BOARD_DIR/ddbr $SDCARD/usr/bin/
	install -m 755 $SRC/$BOARD_DIR/ddbr_backup_nand $SDCARD/usr/bin/
	install -m 755 $SRC/$BOARD_DIR/ddbr_backup_nand_full $SDCARD/usr/bin/
	install -m 755 $SRC/$BOARD_DIR/ddbr_restore_nand $SDCARD/usr/bin/
	install -m 755 $SRC/$BOARD_DIR/kvim-update $SDCARD/usr/bin/
	install -m 755 $SRC/$BOARD_DIR/kvim-full $SDCARD/usr/bin/
	install -m 755 $SRC/$BOARD_DIR/kvim2-update $SDCARD/usr/bin/
	install -m 755 $SRC/$BOARD_DIR/kvim2-full $SDCARD/usr/bin/

	cp $SRC/$BOARD_DIR/$SCR_ENV $SDCARD/boot/uEnv.ini

	install -m 755 $SRC/$BOARD_DIR/install.sh $SDCARD/root/install.sh
	ln -s /root/install.sh $SDCARD/usr/sbin/nand-sata-install
	cp $SRC/$BOARD_DIR/fstab $SDCARD/root/fstab

	install -m 755 $SRC/$BOARD_DIR/install-2018.sh $SDCARD/root/install-2018.sh
	cp $SRC/$BOARD_DIR/s905x-uboot.img $SDCARD/boot/s905x-uboot.img
	cp $SRC/$BOARD_DIR/s912-uboot.img $SDCARD/boot/s912-uboot.img

	cp $SRC/$BOARD_DIR/aml_autoscript.src $SDCARD/boot/aml_autoscript.cmd
	mkimage -C none -A arm -T script -d $SDCARD/boot/aml_autoscript.cmd $SDCARD/boot/aml_autoscript
	cp $SRC/$BOARD_DIR/aml_autoscript.zip $SDCARD/boot/aml_autoscript.zip

	cp $SRC/config/bootscripts/$SCR_BOOT $SDCARD/boot/s905_autoscript.cmd
	mkimage -C none -A arm -T script -d $SDCARD/boot/s905_autoscript.cmd $SDCARD/boot/s905_autoscript

	cp $SRC/config/bootscripts/$SCR_BOOT_EMMC $SDCARD/boot/emmc_autoscript.cmd
	mkimage -C none -A arm -T script -d $SDCARD/boot/emmc_autoscript.cmd $SDCARD/boot/emmc_autoscript

	mkdir -p $SDCARD/boot/extlinux
	cp $SRC/$BOARD_DIR/extlinux.conf $SDCARD/boot/extlinux

}

ARCH=arm64
KERNEL_IMAGE_TYPE=Image
OFFSET=16

BOOTSCRIPT='boot-rockchip64.cmd:boot.cmd'
BOOTENV_FILE='rockchip-default.txt'

if [[ $BOARD == roc-rk3399-pc ]]; then
	ATF_USE_MAINLINE=yes
fi

if [[ $ATF_USE_MAINLINE == yes ]]; then
	BL31=bl31.bin
else
	BL31=$SRC/cache/sources/rkbin-tools/rk33/rk3399_bl31_v1.30.elf
fi

UBOOT_TARGET_MAP="BL31=$BL31 idbloader.img u-boot.itb;;idbloader.img u-boot.itb"
UBOOT_USE_GCC='> 7.0'

BOOTSOURCE='https://github.com/u-boot/u-boot.git'
BOOTDIR='u-boot-rockchip64'
BOOTPATCHDIR="u-boot-rockchip64-dev"
BOOTBRANCH='tag:v2019.10'

BOOTDELAY=0

OVERLAY_PREFIX='rockchip'
SERIALCON='ttyFIQ0:1500000'

if [[ $ATF_USE_MAINLINE == yes ]]; then
	ATFSOURCE='https://github.com/ARM-software/arm-trusted-firmware'
	ATFDIR='arm-trusted-firmware'
	ATFBRANCH='branch:master'
	ATF_USE_GCC='> 6.3'
	ATF_TARGET_MAP='M0_CROSS_COMPILE=arm-linux-gnueabi- PLAT=rk3399 bl31;;build/rk3399/release/bl31/bl31.elf:bl31.bin'
	ATF_TOOLCHAIN2="arm-linux-gnueabi-:> 5.0"
fi

CPUMIN="600000"
CPUMAX="2016000"
GOVERNOR="ondemand"

case $BRANCH in
	default)
	KERNELSOURCE='https://github.com/friendlyarm/kernel-rockchip'
	KERNELBRANCH='branch:nanopi4-linux-v4.4.y'
	KERNELDIR='linux-rockchip64'
	KERNELCONFIG='linux-rockchip64'
	KERNEL_USE_GCC='> 7.0'
	;;

	dev)
	KERNELSOURCE='https://github.com/ayufan-rock64/linux-mainline-kernel'
	KERNELBRANCH='tag:5.3.0-rc4-1118-ayufan'
	KERNELDIR='linux-rockchip64'
	KERNELPATCHDIR='rockchip64-dev'
	LINUXCONFIG='linux-rockchip64-dev'
	KERNEL_USE_GCC='> 7.0'
	;;
esac

write_uboot_platform()
{
	dd if=$1/idbloader.img of=$2 seek=64 conv=notrunc status=none >/dev/null 2>&1
	dd if=$1/u-boot.itb of=$2 seek=16384 conv=notrunc status=none >/dev/null 2>&1
}

setup_write_uboot_platform()
{
	if grep -q "ubootpart" /proc/cmdline; then
		local tmp=$(cat /proc/cmdline)
		tmp="${tmp##*ubootpart=}"
		tmp="${tmp%% *}"
		[[ -n $tmp ]] && local part=$(findfs PARTUUID=$tmp 2>/dev/null)
		[[ -n $part ]] && local dev=$(lsblk -n -o PKNAME $part 2>/dev/null)
		[[ -n $dev ]] && DEVICE="/dev/$dev"
	fi
}

uboot_custom_postprocess()
{
	:
}

atf_custom_postprocess()
{
	:
}

family_tweaks()
{
	[[ $BOARD == nanopct4 ]] && echo "fdtfile=rockchip/rk3399-nanopi4-rev00.dtb" >> $SDCARD/boot/armbianEnv.txt
	[[ $BOARD == nanopim4 ]] && echo "fdtfile=rockchip/rk3399-nanopi4-rev01.dtb" >> $SDCARD/boot/armbianEnv.txt
	[[ $BOARD == nanopineo4 ]] && echo "fdtfile=rockchip/rk3399-nanopi4-rev04.dtb" >> $SDCARD/boot/armbianEnv.txt
	[[ $BOARD == orangepi-rk3399 ]] && echo "fdtfile=rockchip/rk3399-orangepi.dtb" >> $SDCARD/boot/armbianEnv.txt
	[[ $BOARD == firefly-rk3399 ]] && echo "fdtfile=rockchip/rk3399-firefly.dtb" >> $SDCARD/boot/armbianEnv.txt
	# install and enable Bluetooth
	chroot $SDCARD /bin/bash -c "apt-get -y -qq install rfkill bluetooth bluez bluez-tools"
	chroot $SDCARD /bin/bash -c "systemctl --no-reload enable rk3399-bluetooth.service >/dev/null 2>&1"
}

family_tweaks_bsp()
{
		# Graphics and media
		mkdir -p $destination/etc/udev/rules.d
		cp $SRC/packages/bsp/rk3399/50-mali.rules $destination/etc/udev/rules.d/
		cp $SRC/packages/bsp/rk3399/50-rk3399-vpu.rules $destination/etc/udev/rules.d/
		mkdir -p $destination/etc/sysfs.d
		cp $SRC/packages/bsp/rk3399/20-gpu-governor.conf $destination/etc/sysfs.d/
		# Bluetooth
                install -m 755 $SRC/packages/bsp/rk3399/brcm_patchram_plus_rk3399 $destination/usr/bin
		cp $SRC/packages/bsp/rk3399/rk3399-bluetooth.service $destination/lib/systemd/system/
}

From d62c24664878bd4ca198806580a7dc9aea41db1f Mon Sep 17 00:00:00 2001
From: Paolo Sabatino <paolo.sabatino@gmail.com>
Date: Mon, 29 Apr 2024 16:18:05 +0200
Subject: [PATCH 2/4] rockchip rk3228 VOP driver

---
 drivers/video/rockchip/rk3228_vop.c | 109 ++++++++++++++++++++++++++++
 1 file changed, 109 insertions(+)
 create mode 100644 drivers/video/rockchip/rk3228_vop.c

diff --git a/drivers/video/rockchip/rk3228_vop.c b/drivers/video/rockchip/rk3228_vop.c
new file mode 100644
index 0000000000..f09097709a
--- /dev/null
+++ b/drivers/video/rockchip/rk3228_vop.c
@@ -0,0 +1,109 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright (c) 2023 Edgeble AI Technologies Pvt. Ltd.
+ */
+
+#include <common.h>
+#include <dm.h>
+#include <video.h>
+#include <asm/io.h>
+#include <reset.h>
+#include <clk.h>
+#include <linux/delay.h>
+#include "rk_vop.h"
+
+DECLARE_GLOBAL_DATA_PTR;
+
+static void rk3228_set_pin_polarity(struct udevice *dev,
+				    enum vop_modes mode, u32 polarity)
+{
+	struct rk_vop_priv *priv = dev_get_priv(dev);
+	struct rk3288_vop *regs = priv->regs;
+
+	switch (mode) {
+		case VOP_MODE_HDMI:
+			clrsetbits_le32(&regs->dsp_ctrl1,
+					M_RK3399_DSP_HDMI_POL,
+		   V_RK3399_DSP_HDMI_POL(polarity));
+			break;
+		default:
+			debug("%s: unsupported output mode %x\n", __func__, mode);
+	}
+}
+
+static int rk3228_vop_probe(struct udevice *dev)
+{
+	/* Before relocation we don't need to do anything */
+	if (!(gd->flags & GD_FLG_RELOC))
+		return 0;
+
+	return rk_vop_probe(dev);
+}
+
+/**
+ * Remove the device deasserting the dclk, thus disabling the VOP.
+ * This is essential to avoid iommu complaining later during kernel boot
+ * @see https://lore.kernel.org/linux-arm-kernel/20230330131746.1475514-1-jagan@amarulasolutions.com/
+ */
+static int rk3228_vop_remove(struct udevice *dev)
+{
+	struct rk_vop_priv *priv = dev_get_priv(dev);
+	struct rk3288_vop *regs = priv->regs;
+	struct reset_ctl dclk_rst;
+
+	int ret;
+
+	debug("%s\n", __func__);
+
+	/* set to standby */
+	setbits_le32(&regs->sys_ctrl, V_STANDBY_EN(1));
+	clrsetbits_le32(&regs->sys_ctrl, M_ALL_OUT_EN, 0x0);
+
+	ret = reset_get_by_name(dev, "dclk", &dclk_rst);
+	if (ret)
+		printf("failed to get dclk reset (ret=%d)\n", ret);
+
+	/* assert and deassert reset */
+	ret = reset_assert(&dclk_rst);
+	if (ret)
+		printf("failed to assert dclk reset (ret=%d)\n", ret);
+
+	udelay(20);
+
+	ret = reset_deassert(&dclk_rst);
+	if (ret)
+		printf("failed to deassert dclk reset (ret=%d)\n", ret);
+
+	return 0;
+
+}
+
+struct rkvop_driverdata rk3228_driverdata = {
+	.dsp_offset = 0x0,
+	.win_offset = 0x0,
+	.features = VOP_FEATURE_OUTPUT_10BIT,
+	.set_pin_polarity = rk3228_set_pin_polarity,
+};
+
+static const struct udevice_id rk3228_vop_ids[] = {
+	{
+		.compatible = "rockchip,rk3228-vop",
+		.data = (ulong)&rk3228_driverdata
+	},
+	{ /* sentile */ }
+};
+
+static const struct video_ops rk3228_vop_ops = {
+};
+
+U_BOOT_DRIVER(rockchip_rk3228_vop) = {
+	.name	= "rockchip_rk3228_vop",
+	.id	= UCLASS_VIDEO,
+	.of_match = rk3228_vop_ids,
+	.ops	= &rk3228_vop_ops,
+	.bind	= rk_vop_bind,
+	.probe	= rk3228_vop_probe,
+	.remove = rk3228_vop_remove,
+	.priv_auto	= sizeof(struct rk_vop_priv),
+	.flags	= DM_FLAG_OS_PREPARE
+};

diff --git a/drivers/video/rockchip/Makefile b/drivers/video/rockchip/Makefile
index 8128289cc8..0e4cc65fdf 100644
--- a/drivers/video/rockchip/Makefile
+++ b/drivers/video/rockchip/Makefile
@@ -6,6 +6,7 @@
 ifdef CONFIG_VIDEO_ROCKCHIP
 obj-y += rk_vop.o
 obj-$(CONFIG_ROCKCHIP_RK3288) += rk3288_vop.o
+obj-$(CONFIG_ROCKCHIP_RK322X) += rk3228_vop.o
 obj-$(CONFIG_ROCKCHIP_RK3399) += rk3399_vop.o
 obj-$(CONFIG_DISPLAY_ROCKCHIP_EDP) += rk_edp.o
 obj-$(CONFIG_DISPLAY_ROCKCHIP_LVDS) += rk_lvds.o
-- 
2.34.1


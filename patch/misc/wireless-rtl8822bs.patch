From b735fc8e20aab426a32d47463638995841307eec Mon Sep 17 00:00:00 2001
From: qiurui <happyqiurui@163.com>
Date: Thu, 5 May 2022 00:10:47 +0800
Subject: [PATCH] =?UTF-8?q?[PATCH]=C2=A0os=5Fdep=20fix=20build=20in=20armb?=
 =?UTF-8?q?ian?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

when building armbian with local_rtl8822bs branch, without set_fs define, kernel building will be wrong.
Signed-off-by: qiurui <happyqiurui@163.com>
---
 os_dep/osdep_service.c | 42 ++++++++++++++++++++++++------------------
 1 file changed, 24 insertions(+), 18 deletions(-)

diff --git a/drivers/net/wireless/rtl8822bs/os_dep/osdep_service.c b/drivers/net/wireless/rtl8822bs/os_dep/osdep_service.c
index c32af34..1b817f8 100644
--- a/drivers/net/wireless/rtl8822bs/os_dep/osdep_service.c
+++ b/drivers/net/wireless/rtl8822bs/os_dep/osdep_service.c
@@ -2090,9 +2090,7 @@ static int isFileReadable(const char *path, u32 *sz)
 {
 	struct file *fp;
 	int ret = 0;
-#ifdef set_fs
 	mm_segment_t oldfs;
-#endif
 	char buf;
 
 	fp = filp_open(path, O_RDONLY, 0);
@@ -2100,12 +2098,10 @@ static int isFileReadable(const char *path, u32 *sz)
 		ret = PTR_ERR(fp);
 	else {
 		#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
-		oldfs = get_fs();
-		#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0))
-		set_fs(KERNEL_DS);
+			oldfs = get_fs();
+			set_fs(KERNEL_DS);
 		#else
-		set_fs(get_ds());
-		#endif
+			oldfs = force_uaccess_begin();;
 		#endif
 
 		if (1 != readFile(fp, &buf, 1))
@@ -2118,8 +2114,10 @@ static int isFileReadable(const char *path, u32 *sz)
 			*sz = i_size_read(fp->f_dentry->d_inode);
 			#endif
 		}
-#ifdef set_fs
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
 		set_fs(oldfs);
+#else
+        force_uaccess_end(oldfs);
 #endif
 		filp_close(fp, NULL);
 	}
@@ -2136,22 +2134,25 @@ static int isFileReadable(const char *path, u32 *sz)
 static int retriveFromFile(const char *path, u8 *buf, u32 sz)
 {
 	int ret = -1;
-#ifdef set_fs
 	mm_segment_t oldfs;
-#endif
 	struct file *fp;
 
 	if (path && buf) {
 		ret = openFile(&fp, path, O_RDONLY, 0);
 		if (0 == ret) {
 			RTW_INFO("%s openFile path:%s fp=%p\n", __FUNCTION__, path , fp);
-#ifdef set_fs
+		#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
 			oldfs = get_fs();
 			set_fs(KERNEL_DS);
-			set_fs(oldfs);
-#else
+		#else
+			oldfs = force_uaccess_begin();
+		#endif
 			ret = readFile(fp, buf, sz);
-#endif
+		#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
+			set_fs(oldfs);
+		#else
+      			force_uaccess_end(oldfs);
+		#endif
 			closeFile(fp);
 
 			RTW_INFO("%s readFile, ret:%d\n", __FUNCTION__, ret);
@@ -2182,13 +2183,18 @@ static int storeToFile(const char *path, u8 *buf, u32 sz)
 		ret = openFile(&fp, path, O_CREAT | O_WRONLY, 0666);
 		if (0 == ret) {
 			RTW_INFO("%s openFile path:%s fp=%p\n", __FUNCTION__, path , fp);
-#ifdef set_fs
+		#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
 			oldfs = get_fs();
+			set_fs(KERNEL_DS);
+		#else
+	   		oldfs = force_uaccess_begin();
+		#endif
 			ret = writeFile(fp, buf, sz);
+		#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
 			set_fs(oldfs);
-#else
-			ret = writeFile(fp, buf, sz);
-#endif
+		#else
+			force_uaccess_end(oldfs);
+		#endif
 			closeFile(fp);
 
 			RTW_INFO("%s writeFile, ret:%d\n", __FUNCTION__, ret);
-- 
2.25.1


From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: nikvoid <nikvoid@users.noreply.github.com>
Date: Wed, 11 Jun 2025 01:02:05 +0300
Subject: Enable in-tree AIC8800 driver and remove defines for platforms other than rockchip
---

diff --git a/drivers/net/wireless/Makefile b/drivers/net/wireless/Makefile
index 0ab794204a33..55665d041f01 100644
--- a/drivers/net/wireless/Makefile
+++ b/drivers/net/wireless/Makefile
@@ -41,5 +41,6 @@ obj-$(CONFIG_88XXAU) += rtl8812au/
 obj-$(CONFIG_RTL8821CU) += rtl8811cu/
 obj-$(CONFIG_RTL8822BU) += rtl88x2bu/
 obj-$(CONFIG_RTL8723DS) += rtl8723ds/
 obj-$(CONFIG_RTL8723DU) += rtl8723du/
 obj-$(CONFIG_SPARD_WLAN_SUPPORT) += uwe5622/
+obj-$(CONFIG_AIC_WLAN_SUPPORT) += aic8800_sdio/ 
diff --git a/drivers/net/wireless/aic8800_sdio/aic8800_bsp/Makefile b/drivers/net/wireless/aic8800_sdio/aic8800_bsp/Makefile
index 83d382700b59..7600cbe13da0 100644
--- a/drivers/net/wireless/aic8800_sdio/aic8800_bsp/Makefile
+++ b/drivers/net/wireless/aic8800_sdio/aic8800_bsp/Makefile
@@ -25,10 +25,11 @@ CONFIG_DPD = y
 CONFIG_FORCE_DPD_CALIB = y
 CONFIG_RESV_MEM_SUPPORT = y
 CONFIG_AMSDU_RX ?=n
 CONFIG_IRQ_FALL ?= n
 
+ccflags-$(CONFIG_PLATFORM_ROCKCHIP) += -DCONFIG_PLATFORM_ROCKCHIP
 ccflags-$(CONFIG_GPIO_WAKEUP) += -DCONFIG_GPIO_WAKEUP
 ccflags-$(CONFIG_M2D_OTA_AUTO_SUPPORT) += -DCONFIG_M2D_OTA_AUTO_SUPPORT
 ccflags-$(CONFIG_M2D_OTA_LZMA_SUPPORT) += -DCONFIG_M2D_OTA_LZMA_SUPPORT
 ccflags-$(CONFIG_LINK_DET_5G) += -DCONFIG_LINK_DET_5G
 ccflags-$(CONFIG_MCU_MESSAGE) += -DCONFIG_MCU_MESSAGE
diff --git a/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aic_bsp_main.c b/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aic_bsp_main.c
index 6177911a318c..29d53ec60fa0 100644
--- a/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aic_bsp_main.c
+++ b/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aic_bsp_main.c
@@ -345,26 +345,22 @@ static int __init aicbsp_init(void)
 		pr_err("register sysfs create group failed!\n");
 		return ret;
 	}
 
 	mutex_init(&aicbsp_power_lock);
-#ifdef CONFIG_PLATFORM_ROCKCHIP
 	aicbsp_set_subsys(AIC_BLUETOOTH, AIC_PWR_ON);
-#endif
 	return 0;
 }
 
 void aicbsp_sdio_exit(void);
 extern struct aic_sdio_dev *aicbsp_sdiodev;
 
 static void __exit aicbsp_exit(void)
 {
-#ifdef CONFIG_PLATFORM_ROCKCHIP
     if(aicbsp_sdiodev){
     	aicbsp_sdio_exit();
     }
-#endif
 	sysfs_remove_group(&(aicbsp_pdev->dev.kobj), &aicbsp_attribute_group);
 	platform_device_del(aicbsp_pdev);
 	platform_driver_unregister(&aicbsp_driver);
 	mutex_destroy(&aicbsp_power_lock);
 	aicbsp_resv_mem_deinit();
diff --git a/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aicsdio.c b/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aicsdio.c
index b95e754fe8db..d11bac7d0751 100644
--- a/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aicsdio.c
+++ b/drivers/net/wireless/aic8800_sdio/aic8800_bsp/aicsdio.c
@@ -18,32 +18,11 @@
 #include "aicsdio_txrxif.h"
 #include "aicsdio.h"
 #include "aic_bsp_driver.h"
 #include <linux/version.h>
 #include <linux/delay.h>
-#ifdef CONFIG_PLATFORM_ROCKCHIP
 #include <linux/rfkill-wlan.h>
-#endif /* CONFIG_PLATFORM_ROCKCHIP */
-#ifdef CONFIG_PLATFORM_ROCKCHIP2
-#include <linux/rfkill-wlan.h>
-#endif /* CONFIG_PLATFORM_ROCKCHIP */
-
-
-#ifdef CONFIG_PLATFORM_ALLWINNER
-extern void sunxi_mmc_rescan_card(unsigned ids);
-extern void sunxi_wlan_set_power(int on);
-extern int sunxi_wlan_get_bus_index(void);
-static int aicbsp_bus_index = -1;
-#endif
-
-#ifdef CONFIG_PLATFORM_AMLOGIC//for AML
-#include <linux/amlogic/aml_gpio_consumer.h>
-extern void sdio_reinit(void);
-extern void extern_wifi_set_enable(int is_on);
-extern void set_power_control_lock(int lock);
-#endif//for AML
-
 
 static int aicbsp_platform_power_on(void);
 static void aicbsp_platform_power_off(void);
 
 struct aic_sdio_dev *aicbsp_sdiodev = NULL;
@@ -51,15 +30,11 @@ static struct semaphore *aicbsp_notify_semaphore;
 static const struct sdio_device_id aicbsp_sdmmc_ids[];
 static bool aicbsp_load_fw_in_fdrv = false;
 
 #define FW_PATH_MAX 200
 
-//#ifdef CONFIG_PLATFORM_UBUNTU
-//static const char* aic_default_fw_path = "/lib/firmware/aic8800_sdio";
-//#else
 static const char* aic_default_fw_path = CONFIG_AIC_FW_PATH;
-//#endif
 char aic_fw_path[FW_PATH_MAX];
 module_param_string(aic_fw_path, aic_fw_path, FW_PATH_MAX, 0660);
 #ifdef CONFIG_M2D_OTA_AUTO_SUPPORT
 char saved_sdk_ver[64];
 module_param_string(saved_sdk_ver, saved_sdk_ver,64, 0660);
@@ -136,21 +111,13 @@ static const char *aicbsp_subsys_name(int subsys)
 	default:
 		return "unknown subsys";
 	}
 }
 
-#ifdef CONFIG_PLATFORM_ROCKCHIP
-#if 1//FOR RK SUSPEND
-void rfkill_rk_sleep_bt(bool sleep);
-#endif
-#endif
-
-#ifdef CONFIG_PLATFORM_ROCKCHIP2
 #if 1//FOR RK SUSPEND
 void rfkill_rk_sleep_bt(bool sleep);
 #endif
-#endif
 
 int aicbsp_set_subsys(int subsys, int state)
 {
 	static int pre_power_map;
 	int cur_power_map;
@@ -181,25 +148,16 @@ int aicbsp_set_subsys(int subsys, int state)
 				goto err2;
 #ifndef CONFIG_FDRV_NO_REG_SDIO
 			aicbsp_sdio_release(aicbsp_sdiodev);
 #endif
 
-#if defined CONFIG_PLATFORM_ROCKCHIP || defined CONFIG_PLATFORM_ROCKCHIP2
 #ifdef CONFIG_GPIO_WAKEUP
 			//BT_SLEEP:true,BT_WAKEUP:false
 			rfkill_rk_sleep_bt(true);
 			printk("%s BT wake default to SLEEP\r\n", __func__);
 #endif
-#endif
-
-//#ifndef CONFIG_PLATFORM_ROCKCHIP
-//			aicbsp_sdio_exit();
-//#endif
 		} else {
-		#ifndef CONFIG_PLATFORM_ROCKCHIP
-			aicbsp_sdio_exit();
-		#endif
 			aicbsp_platform_power_off();
 		}
 	} else {
 		sdio_dbg("%s, power state no need to change, current: %d\n", __func__, cur_power_state);
 	}
@@ -386,22 +344,13 @@ static int aicbsp_sdio_suspend(struct device *dev)
 {
 	struct sdio_func *func = dev_to_sdio_func(dev);
 	int err;
 	mmc_pm_flag_t sdio_flags;
 
-#ifdef CONFIG_PLATFORM_ROCKCHIP
 #ifdef CONFIG_GPIO_WAKEUP
     //BT_SLEEP:true,BT_WAKEUP:false
     rfkill_rk_sleep_bt(false);
-#endif
-#endif
-
-#ifdef CONFIG_PLATFORM_ROCKCHIP2
-#ifdef CONFIG_GPIO_WAKEUP
-        //BT_SLEEP:true,BT_WAKEUP:false
-        rfkill_rk_sleep_bt(false);
-#endif
 #endif
 
 	sdio_dbg("%s, func->num = %d\n", __func__, func->num);
 	if (func->num != 2)
 		return 0;
@@ -417,26 +366,15 @@ static int aicbsp_sdio_suspend(struct device *dev)
 	if (err) {
 		sdio_dbg("%s: error while trying to keep power\n", __func__);
 		return err;
 	}
 
-#ifdef CONFIG_PLATFORM_ROCKCHIP
 #ifdef CONFIG_GPIO_WAKEUP
 		//BT_SLEEP:true,BT_WAKEUP:false
 		rfkill_rk_sleep_bt(true);
 		printk("%s BT wake to SLEEP\r\n", __func__);
 #endif
-#endif
-
-#ifdef CONFIG_PLATFORM_ROCKCHIP2
-#ifdef CONFIG_GPIO_WAKEUP
-            //BT_SLEEP:true,BT_WAKEUP:false
-            rfkill_rk_sleep_bt(true);
-            printk("%s BT wake to SLEEP\r\n", __func__);
-#endif
-#endif
-
 
 	return 0;
 }
 
 static int aicbsp_sdio_resume(struct device *dev)
@@ -471,111 +409,60 @@ static int aicbsp_platform_power_on(void)
 {
 	int ret = 0;
 	struct semaphore aic_chipup_sem;
 	sdio_dbg("%s\n", __func__);
 
-#ifdef CONFIG_PLATFORM_ALLWINNER
-	if (aicbsp_bus_index < 0)
-		 aicbsp_bus_index = sunxi_wlan_get_bus_index();
-	if (aicbsp_bus_index < 0)
-		return aicbsp_bus_index;
-#endif //CONFIG_PLATFORM_ALLWINNER
-
-#ifdef CONFIG_PLATFORM_AMLOGIC
-		extern_wifi_set_enable(0);
-		mdelay(200);
-		extern_wifi_set_enable(1);
-		mdelay(200);
-		sdio_reinit();
-		set_power_control_lock(1);
-#endif
-
-#ifdef CONFIG_PLATFORM_ROCKCHIP2
-            rockchip_wifi_power(0);
-            mdelay(50);
-            rockchip_wifi_power(1);
-            mdelay(50);
-            rockchip_wifi_set_carddetect(1);
-#endif /*CONFIG_PLATFORM_ROCKCHIP2*/
+  rockchip_wifi_power(0);
+  mdelay(50);
+  rockchip_wifi_power(1);
+  mdelay(50);
+  rockchip_wifi_set_carddetect(1);
 
 	sema_init(&aic_chipup_sem, 0);
 	ret = aicbsp_reg_sdio_notify(&aic_chipup_sem);
 	if (ret) {
 		sdio_dbg("%s aicbsp_reg_sdio_notify fail(%d)\n", __func__, ret);
 			return ret;
 	}
 
-#ifdef CONFIG_PLATFORM_ALLWINNER
-	sunxi_wlan_set_power(0);
-	mdelay(50);
-	sunxi_wlan_set_power(1);
-	mdelay(50);
-	sunxi_mmc_rescan_card(aicbsp_bus_index);
-#endif //CONFIG_PLATFORM_ALLWINNER
-
 	if (down_timeout(&aic_chipup_sem, msecs_to_jiffies(2000)) == 0) {
 		aicbsp_unreg_sdio_notify();
 		if(aicbsp_load_fw_in_fdrv){
 			printk("%s load fw in fdrv\r\n", __func__);
 			return -1;
 		}
 		return 0;
 	}
 
 	aicbsp_unreg_sdio_notify();
-#ifdef CONFIG_PLATFORM_ALLWINNER
-	sunxi_wlan_set_power(0);
-#endif //CONFIG_PLATFORM_ALLWINNER
-
-#ifdef CONFIG_PLATFORM_AMLOGIC
-        extern_wifi_set_enable(0);
-#endif
 
-
-#ifdef CONFIG_PLATFORM_ROCKCHIP2
 	rockchip_wifi_power(0);
-#endif /*CONFIG_PLATFORM_ROCKCHIP2*/
 
 	return -1;
 }
 
 static void aicbsp_platform_power_off(void)
 {
 //TODO wifi disable and sdio card detection
-#ifdef CONFIG_PLATFORM_ALLWINNER
-	if (aicbsp_bus_index < 0)
-		 aicbsp_bus_index = sunxi_wlan_get_bus_index();
-	if (aicbsp_bus_index < 0) {
-		sdio_dbg("no aicbsp_bus_index\n");
-		return;
-	}
-	sunxi_wlan_set_power(0);
-	mdelay(100);
-	sunxi_mmc_rescan_card(aicbsp_bus_index);
-#endif //CONFIG_PLATFORM_ALLWINNER
 
-#ifdef CONFIG_PLATFORM_ROCKCHIP2
 	rockchip_wifi_set_carddetect(0);
 	mdelay(200);
 	rockchip_wifi_power(0);
 	mdelay(200);
-#endif /*CONFIG_PLATFORM_ROCKCHIP*/
-#ifdef CONFIG_PLATFORM_AMLOGIC
-	extern_wifi_set_enable(0);
-#endif
-
 
 	sdio_dbg("%s\n", __func__);
 }
 
-
 int aicbsp_sdio_init(void)
 {
 	if (sdio_register_driver(&aicbsp_sdio_driver)) {
 		return -1;
 	} else {
-		//may add mmc_rescan here
+		// // Force MMC rescan
+		// rockchip_wifi_power(1);
+		// mdelay(100);
+		// rockchip_wifi_set_carddetect(1);
 	}
 	return 0;
 }
 
 void aicbsp_sdio_exit(void)
@@ -1433,13 +1320,11 @@ void aicwf_sdio_hal_irqhandler(struct sdio_func *func)
     	            aicwf_sdio_intr_get_len_bytemode(sdiodev, &byte_len);//byte_len must<= 128
     	            sdio_info("byte mode len=%d\r\n", byte_len);
     	            pkt = aicwf_sdio_readframes(sdiodev, 0);
     	        }
     	    } else {
-    	#ifndef CONFIG_PLATFORM_ALLWINNER
     	        sdio_err("Interrupt but no data\n");
-    	#endif
     	    }
 
     	    if (pkt)
     	        aicwf_sdio_enq_rxpkt(sdiodev, pkt);
 
@@ -1488,13 +1373,11 @@ void aicwf_sdio_hal_irqhandler(struct sdio_func *func)
                     sdiodev->rx_priv->data_len = (intstatus & 0x7FU) * SDIOWIFI_FUNC_BLOCKSIZE;
                     pkt = aicwf_sdio_readframes(sdiodev, 0);
                 }
     		}
     } else {
-    	#ifndef CONFIG_PLATFORM_ALLWINNER
             sdio_err("Interrupt but no data\n");
-    	#endif
         }
 
         if (pkt)
             aicwf_sdio_enq_rxpkt(sdiodev, pkt);
     }
@@ -1539,13 +1422,11 @@ void aicwf_sdio_hal_irqhandler_func2(struct sdio_func *func)
 
 	            aicwf_sdio_intr_get_len_bytemode(sdiodev, &byte_len);//byte_len must<= 128
 	            pkt = aicwf_sdio_readframes(sdiodev,1);
 	        }
 	    } else {
-		#ifndef CONFIG_PLATFORM_ALLWINNER
 	        sdio_err("Interrupt but no data\n");
-		#endif
 	    }
 
 	    if (pkt){
 	        aicwf_sdio_enq_rxpkt(sdiodev, pkt);
 	    }
diff --git a/drivers/net/wireless/aic8800_sdio/aic8800_btlpm/Makefile b/drivers/net/wireless/aic8800_sdio/aic8800_btlpm/Makefile
index 4fe8fa91bf02..82b5c9c7009f 100644
--- a/drivers/net/wireless/aic8800_sdio/aic8800_btlpm/Makefile
+++ b/drivers/net/wireless/aic8800_sdio/aic8800_btlpm/Makefile
@@ -3,18 +3,18 @@ CONFIG_AIC8800_BTLPM_SUPPORT = m
 obj-$(CONFIG_AIC8800_BTLPM_SUPPORT) := aic8800_btlpm.o
 
 ccflags-y += -I$(srctree)/$(src)/../aic8800_bsp
 
 # Platform support list
-CONFIG_PLATFORM_ROCKCHIP ?= n
+CONFIG_PLATFORM_ROCKCHIP ?= y
 CONFIG_PLATFORM_ROCKCHIP2 ?= n
 CONFIG_PLATFORM_ALLWINNER ?= n
 CONFIG_PLATFORM_AMLOGIC ?= n
-CONFIG_PLATFORM_UBUNTU ?= y
+CONFIG_PLATFORM_UBUNTU ?= n
 
 
-CONFIG_SUPPORT_LPM = y
+CONFIG_SUPPORT_LPM = n
 CONFIG_AUTO_PM ?= n
 
 aic8800_btlpm-y := \
 	aic_bluetooth_main.o \
 	rfkill.o \
diff --git a/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/Makefile b/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/Makefile
index d9fb44b3b319..3c0f9b5a94a9 100644
--- a/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/Makefile
+++ b/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/Makefile
@@ -198,10 +198,11 @@ ccflags-$(CONFIG_RWNX_SDM) += -DCONFIG_RWNX_SDM
 ccflags-$(CONFIG_RWNX_TL4) += -DCONFIG_RWNX_TL4
 ccflags-$(CONFIG_RWNX_OLD_IPC) += -DCONFIG_RWNX_OLD_IPC
 ccflags-$(CONFIG_PLATFORM_NANOPI_M4) += -DCONFIG_NANOPI_M4
 ccflags-$(CONFIG_PLATFORM_INGENIC_T20) += -DCONFIG_INGENIC_T20
 ccflags-$(CONFIG_PLATFORM_ALLWINNER) += -DCONFIG_PLATFORM_ALLWINNER
+ccflags-$(CONFIG_PLATFORM_ROCKCHIP) += -DCONFIG_PLATFORM_ROCKCHIP
 ccflags-$(CONFIG_START_FROM_BOOTROM) += -DCONFIG_START_FROM_BOOTROM
 ccflags-$(CONFIG_PMIC_SETTING) += -DCONFIG_PMIC_SETTING
 ccflags-$(CONFIG_VRF_DCDC_MODE) += -DCONFIG_VRF_DCDC_MODE
 ccflags-$(CONFIG_ROM_PATCH_EN) += -DCONFIG_ROM_PATCH_EN
 ccflags-$(CONFIG_HE_FOR_OLD_KERNEL) += -DCONFIG_HE_FOR_OLD_KERNEL
diff --git a/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/aicwf_sdio.c b/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/aicwf_sdio.c
index 53c9710dd690..94fbc5acd787 100644
--- a/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/aicwf_sdio.c
+++ b/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/aicwf_sdio.c
@@ -26,19 +26,11 @@
 #else
 #include <linux/pm_wakeup.h>
 #endif
 #include "rwnx_wakelock.h"
 
-#ifdef CONFIG_INGENIC_T20
-#include "mach/jzmmc.h"
-#endif /* CONFIG_INGENIC_T20 */
-#ifdef CONFIG_PLATFORM_ROCKCHIP
 #include <linux/rfkill-wlan.h>
-#endif
-#ifdef CONFIG_PLATFORM_ROCKCHIP2
-#include <linux/rfkill-wlan.h>
-#endif
 
 #include "aic_bsp_export.h"
 extern uint8_t scanning;
 
 #ifdef CONFIG_GPIO_WAKEUP
@@ -236,19 +228,10 @@ static struct wake_lock irq_wakelock;
 //struct wake_lock irq_wakelock;
 #endif//CONFIG_GPIO_WAKEUP
 #endif//ANDROID_PLATFORM
 #endif
 
-#ifdef CONFIG_PLATFORM_ALLWINNER
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
-extern int sunxi_wlan_get_oob_irq(int *, int *);
-#else
-extern int sunxi_wlan_get_oob_irq(void);
-extern int sunxi_wlan_get_oob_irq_flags(void);
-#endif
-#endif// CONFIG_PLATFORM_ALLWINNER
-
 #if 0
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 14, 0)
 static struct wakeup_source *ws;
 #else
 #ifdef ANDROID_PLATFORM
@@ -360,38 +343,15 @@ static int rwnx_register_hostwake_irq(struct device *dev)
 		flag_edge = IRQF_TRIGGER_RISING | IRQF_NO_SUSPEND;
 	else
 		flag_edge = IRQF_TRIGGER_FALLING | IRQF_NO_SUSPEND;
 
 
-#ifdef CONFIG_PLATFORM_ALLWINNER
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
-	hostwake_irq_num = sunxi_wlan_get_oob_irq(&irq_flags, &wakeup_enable);
-#else
-	hostwake_irq_num = sunxi_wlan_get_oob_irq();
-	irq_flags = sunxi_wlan_get_oob_irq_flags();
+	hostwake_irq_num = rockchip_wifi_get_oob_irq();
+	printk("%s hostwake_irq_num:%d \r\n", __func__, hostwake_irq_num);
+	irq_flags = (IORESOURCE_IRQ | IORESOURCE_IRQ_HIGHLEVEL | IORESOURCE_IRQ_SHAREABLE) & IRQF_TRIGGER_MASK;
+	printk("%s irq_flags:%d \r\n", __func__, irq_flags);
 	wakeup_enable = 1;
-#endif
-#endif //CONFIG_PLATFORM_ALLWINNER
-
-//For Rockchip
-#ifdef CONFIG_PLATFORM_ROCKCHIP
-		hostwake_irq_num = rockchip_wifi_get_oob_irq();
-		printk("%s hostwake_irq_num:%d \r\n", __func__, hostwake_irq_num);
-		irq_flags = (IORESOURCE_IRQ | IORESOURCE_IRQ_HIGHLEVEL | IORESOURCE_IRQ_SHAREABLE) & IRQF_TRIGGER_MASK;
-		printk("%s irq_flags:%d \r\n", __func__, irq_flags);
-		wakeup_enable = 1;
-#endif //CONFIG_PLATFORM_ROCKCHIP
-    //For Rockchip
-#ifdef CONFIG_PLATFORM_ROCKCHIP2
-            hostwake_irq_num = rockchip_wifi_get_oob_irq();
-            printk("%s hostwake_irq_num:%d \r\n", __func__, hostwake_irq_num);
-            irq_flags = (IORESOURCE_IRQ | IORESOURCE_IRQ_HIGHLEVEL | IORESOURCE_IRQ_SHAREABLE) & IRQF_TRIGGER_MASK;
-            printk("%s irq_flags:%d \r\n", __func__, irq_flags);
-            wakeup_enable = 1;
-#endif //CONFIG_PLATFORM_ROCKCHIP
-
-
 
 	if (wakeup_enable) {
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 14, 0)
 		//ws = wakeup_source_register(dev, "wifisleep");
 		//ws_tx_sdio = wakeup_source_register(dev, "wifi_tx_sleep");
@@ -717,12 +677,10 @@ static int aicwf_sdio_suspend(struct device *dev)
 	}
 #ifdef CONFIG_GPIO_WAKEUP
 //	rwnx_enable_hostwake_irq();
 #endif
 
-
-#if defined(CONFIG_PLATFORM_ROCKCHIP) || defined(CONFIG_PLATFORM_ROCKCHIP2)
 	if(sdiodev->chipid == PRODUCT_ID_AIC8801){
 		sdio_dbg("%s SDIOWIFI_INTR_CONFIG_REG Disable\n", __func__);
 		sdio_claim_host(sdiodev->func);
 		//disable sdio interrupt
 		ret = aicwf_sdio_writeb(sdiodev, SDIOWIFI_INTR_CONFIG_REG, 0x0);
@@ -730,11 +688,10 @@ static int aicwf_sdio_suspend(struct device *dev)
 			sdio_err("reg:%d write failed!\n", SDIOWIFI_INTR_CONFIG_REG);
 		}
 		sdio_release_irq(sdiodev->func);
 		sdio_release_host(sdiodev->func);
 	}
-#endif
     atomic_set(&sdiodev->is_bus_suspend, 1);
 //    smp_mb();
 
 	sdio_dbg("%s exit\n", __func__);
 
@@ -744,13 +701,11 @@ static int aicwf_sdio_suspend(struct device *dev)
 static int aicwf_sdio_resume(struct device *dev)
 {
 	struct aicwf_bus *bus_if = dev_get_drvdata(dev);
 	struct aic_sdio_dev *sdiodev = bus_if->bus_priv.sdio;
 	struct rwnx_vif *rwnx_vif, *tmp;
-#if defined(CONFIG_PLATFORM_ROCKCHIP) || defined(CONFIG_PLATFORM_ROCKCHIP2)
 	int ret;
-#endif
 
 	sdio_dbg("%s enter \n", __func__);
 //#ifdef CONFIG_GPIO_WAKEUP
 //	rwnx_disable_hostwake_irq();
 //#endif
@@ -769,11 +724,10 @@ static int aicwf_sdio_resume(struct device *dev)
 	#endif//CONFIG_WIFI_SUSPEND_FOR_LINUX
 
 
 //	aicwf_sdio_hal_irqhandler(sdiodev->func);
 
-#if defined(CONFIG_PLATFORM_ROCKCHIP) || defined(CONFIG_PLATFORM_ROCKCHIP2)
 	if(sdiodev->chipid == PRODUCT_ID_AIC8801){
 		sdio_dbg("%s SDIOWIFI_INTR_CONFIG_REG Enable\n", __func__);
 		sdio_claim_host(sdiodev->func);
 		sdio_claim_irq(sdiodev->func, aicwf_sdio_hal_irqhandler);
 
@@ -781,11 +735,10 @@ static int aicwf_sdio_resume(struct device *dev)
 		ret = aicwf_sdio_writeb(sdiodev, SDIOWIFI_INTR_CONFIG_REG, 0x07);
 		if (ret != 0)
 			sdio_err("intr register failed:%d\n", ret);
 		sdio_release_host(sdiodev->func);
 	}
-#endif
     atomic_set(&sdiodev->is_bus_suspend, 0);
 //    smp_mb();
 
 	sdio_dbg("%s exit\n", __func__);
 	return 0;
@@ -814,61 +767,26 @@ static struct sdio_driver aicwf_sdio_driver = {
 		.pm = &aicwf_sdio_pm_ops,
 	},
 };
 #endif
 
-#if 0
-#ifdef CONFIG_NANOPI_M4
-extern int mmc_rescan_try_freq(struct mmc_host *host, unsigned freq);
-extern unsigned  aic_max_freqs;
-extern struct mmc_host *aic_host_drv;
-extern int __mmc_claim_host(struct mmc_host *host, atomic_t *abort);
-extern void mmc_release_host(struct mmc_host *host);
-#endif
-#endif
-
 #ifdef CONFIG_FDRV_NO_REG_SDIO
 extern struct sdio_func *get_sdio_func(void);
 void aicwf_sdio_probe_(struct sdio_func *func, const struct sdio_device_id *id);
 void aicwf_sdio_remove_(struct sdio_func *func);
 #endif
 
 void aicwf_sdio_register(void)
 {
 #if 0
-#ifdef CONFIG_PLATFORM_NANOPI
-	extern_wifi_set_enable(0);
-	mdelay(200);
-	extern_wifi_set_enable(1);
-	mdelay(200);
-	sdio_reinit();
-#endif /*CONFIG_PLATFORM_NANOPI*/
-
-#ifdef CONFIG_PLATFORM_ROCKCHIP
 	rockchip_wifi_power(0);
 	mdelay(200);
 	rockchip_wifi_power(1);
 	mdelay(200);
 	rockchip_wifi_set_carddetect(1);
-#endif /*CONFIG_PLATFORM_ROCKCHIP*/
-
-#ifdef CONFIG_INGENIC_T20
-	jzmmc_manual_detect(1, 1);
-#endif /* CONFIG_INGENIC_T20 */
-
-
-#ifdef CONFIG_NANOPI_M4
-	if (aic_host_drv->card == NULL) {
-		__mmc_claim_host(aic_host_drv, NULL);
-		printk("aic: >>>mmc_rescan_try_freq\n");
-		mmc_rescan_try_freq(aic_host_drv, aic_max_freqs);
-		mmc_release_host(aic_host_drv);
-	}
-#endif
 #endif
 
-
 #ifndef CONFIG_FDRV_NO_REG_SDIO
 	if (sdio_register_driver(&aicwf_sdio_driver)) {
 
 	} else {
 		//may add mmc_rescan here
@@ -893,22 +811,14 @@ void aicwf_sdio_exit(void)
 #else
     aicwf_sdio_remove_(get_sdio_func());
 #endif
 
 #if 0
-#ifdef CONFIG_PLATFORM_AMLOGIC
-	extern_wifi_set_enable(0);
-#endif /*CONFIG_PLATFORM_AMLOGIC*/
-#endif
-
-#if 0
-#ifdef CONFIG_PLATFORM_ROCKCHIP
 	rockchip_wifi_set_carddetect(0);
 	mdelay(200);
 	rockchip_wifi_power(0);
 	mdelay(200);
-#endif /*CONFIG_PLATFORM_ROCKCHIP*/
 #endif
 
 	if(g_rwnx_plat){
 		kfree(g_rwnx_plat);
 	}
@@ -1970,13 +1880,11 @@ void aicwf_sdio_hal_irqhandler(struct sdio_func *func)
     			aicwf_sdio_intr_get_len_bytemode(sdiodev, &byte_len);//byte_len must<= 128
     			sdio_info("byte mode len=%d\r\n", byte_len);
     			pkt = aicwf_sdio_readframes(sdiodev);
     		}
     	} else {
-    	#ifndef CONFIG_PLATFORM_ALLWINNER
-    	//	sdio_err("Interrupt but no data\n");
-    	#endif
+	    		// sdio_err("Interrupt but no data\n");
     	}
 
     	if (pkt)
     		aicwf_sdio_enq_rxpkt(sdiodev, pkt);
 
@@ -2031,13 +1939,11 @@ void aicwf_sdio_hal_irqhandler(struct sdio_func *func)
                     //pkt = aicwf_sdio_readframes(sdiodev, 0);
                     pkt = aicwf_sdio_readframes(sdiodev);
                 }
     		}
         } else {
-    #ifndef CONFIG_PLATFORM_ALLWINNER
             //sdio_err("Interrupt but no data\n");
-    #endif
         }
 
         if (pkt)
             aicwf_sdio_enq_rxpkt(sdiodev, pkt);
 
diff --git a/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_main.c b/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_main.c
index 29f86da75258..4e47dea0274c 100644
--- a/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_main.c
+++ b/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_main.c
@@ -6677,51 +6677,17 @@ int rwnx_ic_rf_init(struct rwnx_hw *rwnx_hw){
 	}
 	return 0;
 }
 
 
-#ifdef CONFIG_PLATFORM_ALLWINNER
-#ifdef CONFIG_USE_CUSTOMER_MAC
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
-extern int get_custom_mac_address(int fmt, char *name, char *addr);
-#else
-extern int get_wifi_custom_mac_address(char *addr_str);
-#endif
-#endif//CONFIG_USE_CUSTOMER_MAC
-#endif//CONFIG_PLATFORM_ALLWINNER
-
-#ifdef CONFIG_PLATFORM_ROCKCHIP
-#include <linux/rfkill-wlan.h>
-#endif
-#ifdef CONFIG_PLATFORM_ROCKCHIP2
 #include <linux/rfkill-wlan.h>
-#endif
 
 #ifdef CONFIG_USE_CUSTOMER_MAC
 int rwnx_get_custom_mac_addr(u8_l *mac_addr_efuse){
     int ret = 0;
 
-#ifdef CONFIG_PLATFORM_ALLWINNER
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
-        ret = get_custom_mac_address(1, "wifi", mac_addr_efuse);
-#else
-        ret = get_wifi_custom_mac_address(addr_str);
-        if (ret >= 0) {
-            sscanf(addr_str, "%02hhx:%02hhx:%02hhx:%02hhx:%02hhx:%02hhx",
-                    &mac_addr_efuse[0], &mac_addr_efuse[1], &mac_addr_efuse[2],
-                    &mac_addr_efuse[3], &mac_addr_efuse[4], &mac_addr_efuse[5]);
-        }
-#endif
-
-#endif//CONFIG_PLATFORM_ALLWINNER
-
-#ifdef CONFIG_PLATFORM_ROCKCHIP
         ret = rockchip_wifi_mac_addr(mac_addr_efuse);
-#endif//CONFIG_PLATFORM_ROCKCHIP
-#ifdef CONFIG_PLATFORM_ROCKCHIP2
-            ret = rockchip_wifi_mac_addr(mac_addr_efuse);
-#endif//CONFIG_PLATFORM_ROCKCHIP
 
     if(ret == 0){
         AICWFDBG(LOGINFO, "%s %02x:%02x:%02x:%02x:%02x:%02x", __func__,
             mac_addr_efuse[0], mac_addr_efuse[1], mac_addr_efuse[2],
             mac_addr_efuse[3], mac_addr_efuse[4], mac_addr_efuse[5]);
@@ -7229,18 +7195,16 @@ static int __init rwnx_mod_init(void)
 {
 	RWNX_DBG(RWNX_FN_ENTRY_STR);
 	rwnx_print_version();
     rwnx_init_cmd_array();
 
-//#ifndef CONFIG_PLATFORM_ROCKCHIP
 	if (aicbsp_set_subsys(AIC_WIFI, AIC_PWR_ON) < 0) {
 		AICWFDBG(LOGERROR, "%s, set power on fail!\n", __func__);
 		if(!aicbsp_get_load_fw_in_fdrv()){
 			return -ENODEV;
 		}
 	}
-//#endif
 
 	init_completion(&hostif_register_done);
 	aicsmac_driver_register();
 
 	if ((wait_for_completion_timeout(&hostif_register_done, msecs_to_jiffies(REGISTRATION_TIMEOUT)) == 0) || rwnx_driver_err) {
@@ -7278,13 +7242,11 @@ static void __exit rwnx_mod_exit(void)
 #endif
 
 #ifdef AICWF_USB_SUPPORT
 	aicwf_usb_exit();
 #endif
-//#ifndef CONFIG_PLATFORM_ROCKCHIP
 	aicbsp_set_subsys(AIC_WIFI, AIC_PWR_OFF);
-//#endif
     rwnx_free_cmd_array();
 
 }
 
 
diff --git a/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_wakelock.c b/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_wakelock.c
index 69bcf3f5d784..2b957f70c958 100644
--- a/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_wakelock.c
+++ b/drivers/net/wireless/aic8800_sdio/aic8800_fdrv/rwnx_wakelock.c
@@ -25,27 +25,11 @@ void rwnx_wakeup_deinit(struct wakeup_source *ws)
 	wakeup_source_destroy(ws);
 }
 
 struct wakeup_source *rwnx_wakeup_register(struct device *dev, const char *name)
 {
-
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
 	return wakeup_source_register(dev, name);
-#else
-
-#if defined(CONFIG_PLATFORM_ROCKCHIP2) || defined(CONFIG_PLATFORM_ROCKCHIP)
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 5, 0)
-    return wakeup_source_register(dev, name);
-#else
-    return wakeup_source_register(name);
-#endif
-
-#else
-	return wakeup_source_register(name);
-#endif//#if defined(CONFIG_PLATFORM_ROCKCHIP2) || defined(CONFIG_PLATFORM_ROCKCHIP)
-
-#endif//LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
 }
 
 void rwnx_wakeup_unregister(struct wakeup_source *ws)
 {
 	if (ws && ws->active)
-- 
Created with Armbian build tools https://github.com/armbian/build


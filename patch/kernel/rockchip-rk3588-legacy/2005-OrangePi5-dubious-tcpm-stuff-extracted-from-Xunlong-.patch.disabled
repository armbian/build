From 486523a71ed52556a9240b51d4ec9a1abb4711f8 Mon Sep 17 00:00:00 2001
From: Ricardo Pardini <ricardo@pardini.net>
Date: Sun, 18 Dec 2022 04:02:23 +0100
Subject: OrangePi5; dubious `tcpm` stuff extracted from Xunlong tree

---
 drivers/usb/typec/tcpm/tcpm.c | 15 ++++------
 1 file changed, 6 insertions(+), 9 deletions(-)

diff --git a/drivers/usb/typec/tcpm/tcpm.c b/drivers/usb/typec/tcpm/tcpm.c
index 4714f7cd59e7..bf84a1ef4a3d 100644
--- a/drivers/usb/typec/tcpm/tcpm.c
+++ b/drivers/usb/typec/tcpm/tcpm.c
@@ -2944,18 +2944,15 @@ static void tcpm_pd_rx_handler(struct kthread_work *work)
 		    (port->data_role == TYPEC_HOST)) {
 			tcpm_log(port,
 				 "Data role mismatch, initiating error recovery");
-				port->data_role = (port->data_role == TYPEC_DEVICE) ? TYPEC_HOST : TYPEC_DEVICE;
-				tcpm_set_attached_state(port, true);
-		}
-//			tcpm_set_state(port, ERROR_RECOVERY, 0);
-//		} else {
+			tcpm_set_state(port, ERROR_RECOVERY, 0);
+		} else {
 			if (le16_to_cpu(msg->header) & PD_HEADER_EXT_HDR)
 				tcpm_pd_ext_msg_request(port, msg);
 			else if (cnt)
 				tcpm_pd_data_request(port, msg);
 			else
 				tcpm_pd_ctrl_request(port, msg);
-//		}
+		}
 	}
 
 done:
@@ -4440,7 +4437,7 @@ static void run_state_machine(struct tcpm_port *port)
 		 * For now, this driver only supports SOP for DISCOVER_IDENTITY, thus using
 		 * port->explicit_contract.
 		 */
-		if (port->explicit_contract && port->data_role == TYPEC_HOST)
+		if (port->explicit_contract)
 			mod_send_discover_delayed_work(port, 0);
 		else
 			port->send_discover = false;
@@ -5967,7 +5964,7 @@ static void tcpm_init(struct tcpm_port *port)
 	 * Should possibly wait for VBUS to settle if it was enabled locally
 	 * since tcpm_reset_port() will disable VBUS.
 	 */
-	port->vbus_present = true;
+	port->vbus_present = port->tcpc->get_vbus(port->tcpc);
 	if (port->vbus_present)
 		port->vbus_never_low = true;
 
@@ -5998,7 +5995,7 @@ static void tcpm_init(struct tcpm_port *port)
 	 * Some adapters need a clean slate at startup, and won't recover
 	 * otherwise. So do not try to be fancy and force a clean disconnect.
 	 */
-	//tcpm_set_state(port, PORT_RESET, 0);
+	tcpm_set_state(port, PORT_RESET, 0);
 }
 
 static int tcpm_port_type_set(struct typec_port *p, enum typec_port_type type)
-- 
Armbian


From 7a935a2a61ac0b11b97943f2f8771089808b3cd0 Mon Sep 17 00:00:00 2001
From: caco <caco@126.com>
Date: Wed, 30 Jul 2025 09:17:29 +0800
Subject: [PATCH drm/rockchip] include/drm: Update Hdmi Color in VOP driver 
 	Fixed incorrect horizontal sync timing in vop_crtc_set_timing. 	
 Path: drivers/gpu/drm/rockchip/rockchip_drm_vop.c

Signed-off-by: caco <caco@126.com>
---
 include/drm/bridge/dw_hdmi.h    | 14 --------------
 include/uapi/drm/rockchip_drm.h |  2 +-
 2 files changed, 1 insertion(+), 15 deletions(-)

diff --git a/include/drm/bridge/dw_hdmi.h b/include/drm/bridge/dw_hdmi.h
index 9580f6e43d3c..557e5d4efbe9 100644
--- a/include/drm/bridge/dw_hdmi.h
+++ b/include/drm/bridge/dw_hdmi.h
@@ -80,7 +80,6 @@ struct platform_device;
  */
 
 #define SUPPORT_HDMI_ALLM	BIT(1)
-#define DOVI_VSIF_LEN		8
 
 enum {
 	DW_HDMI_RES_8,
@@ -143,11 +142,6 @@ struct dw_hdmi_link_config {
 	u8 pps_payload[128];
 };
 
-struct dovi_vsif_data {
-	u8 header[3];
-	u8 pb[28];
-};
-
 struct dw_hdmi_phy_ops {
 	int (*init)(struct dw_hdmi *hdmi, void *data,
 		    const struct drm_display_info *display,
@@ -260,9 +254,6 @@ struct dw_hdmi_plat_data {
 	int (*get_edid_dsc_info)(void *data, const struct edid *edid);
 	int (*get_next_hdr_data)(void *data, struct edid *edid,
 				 struct drm_connector *connector);
-	int (*get_dovi_data)(void *data, const struct edid *edid,
-			     struct drm_connector *connector);
-	void (*get_dovi_vsif)(void *data, u32 *buf);
 	struct dw_hdmi_link_config *(*get_link_cfg)(void *data);
 	void (*set_hdcp_status)(void *data, u8 status);
 	void (*set_hdcp2_enable)(void *data, bool enable);
@@ -282,10 +273,6 @@ struct dw_hdmi_plat_data {
 	struct drm_display_mode *(*get_force_timing)(void *data);
 	u32 (*get_refclk_rate)(void *data);
 	void (*force_frl_rate)(void *data, u8 rate);
-	void (*get_mode_color_caps)(struct drm_connector *connector, struct drm_display_info *info,
-				    void *data);
-	void (*crtc_pre_disable)(void *data, struct drm_crtc *crtc);
-	void (*crtc_post_enable)(void *data, struct drm_crtc *crtc);
 
 	/* Vendor Property support */
 	const struct dw_hdmi_property_ops *property_ops;
@@ -369,7 +356,6 @@ void dw_hdmi_qp_audio_enable(struct dw_hdmi_qp *hdmi);
 void dw_hdmi_qp_audio_disable(struct dw_hdmi_qp *hdmi);
 int dw_hdmi_qp_set_plugged_cb(struct dw_hdmi_qp *hdmi, hdmi_codec_plugged_cb fn,
 			      struct device *codec_dev);
-void dw_hdmi_qp_set_quant_range(struct dw_hdmi_qp *hdmi);
 void dw_hdmi_qp_set_output_type(struct dw_hdmi_qp *hdmi, u64 val);
 bool dw_hdmi_qp_get_output_whether_hdmi(struct dw_hdmi_qp *hdmi);
 int dw_hdmi_qp_get_output_type_cap(struct dw_hdmi_qp *hdmi);
diff --git a/include/uapi/drm/rockchip_drm.h b/include/uapi/drm/rockchip_drm.h
index 200584764a65..6d0422a9a126 100644
--- a/include/uapi/drm/rockchip_drm.h
+++ b/include/uapi/drm/rockchip_drm.h
@@ -90,7 +90,7 @@ enum drm_rockchip_gem_cpu_acquire_type {
 enum rockchip_crtc_feture {
 	ROCKCHIP_DRM_CRTC_FEATURE_ALPHA_SCALE,
 	ROCKCHIP_DRM_CRTC_FEATURE_HDR10,
-	ROCKCHIP_DRM_CRTC_FEATURE_DOVI,
+	ROCKCHIP_DRM_CRTC_FEATURE_NEXT_HDR,
 	ROCKCHIP_DRM_CRTC_FEATURE_VIVID_HDR,
 };
 
-- 
2.34.1


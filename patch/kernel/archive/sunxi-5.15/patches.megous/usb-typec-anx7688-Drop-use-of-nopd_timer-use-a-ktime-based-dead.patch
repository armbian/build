From ec7e06bd6a677ae0a32fc8e18cae1751a256b705 Mon Sep 17 00:00:00 2001
From: Ondrej Jirman <megous@megous.com>
Date: Fri, 7 May 2021 02:31:49 +0200
Subject: [PATCH 354/478] usb: typec: anx7688: Drop use of nopd_timer, use a
 ktime based deadline

We already have one periodic timer that re-checks status of the anx7688
and can be used to finish the update of the current allowance after
PD/BC1.2 negotiation settles.

Simplify the code by just setting a deadline when the PD should have
already happened, and check that deadline whenever we call our work
function. This makes it easier to do the right thing across suspend/resume
cycle.

Signed-off-by: Ondrej Jirman <megous@megous.com>
---
 drivers/usb/typec/anx7688.c | 29 ++++++++++-------------------
 1 file changed, 10 insertions(+), 19 deletions(-)

diff --git a/drivers/usb/typec/anx7688.c b/drivers/usb/typec/anx7688.c
index cacf4225dc76..1da84735171f 100644
--- a/drivers/usb/typec/anx7688.c
+++ b/drivers/usb/typec/anx7688.c
@@ -205,7 +205,7 @@ struct anx7688 {
         bool vbus_on, vconn_on;
 	bool pd_capable;
 	int pd_current_limit; // mA
-	struct timer_list nopd_timer;
+	ktime_t current_update_deadline;
 
         struct typec_port *port;
         struct typec_partner *partner;
@@ -540,10 +540,9 @@ static int anx7688_connect(struct anx7688 *anx7688)
 		goto err_vconoff;
 	}
 
-	// after this timer fires we'll check if device is pd_capable and
+	// after this deadline passes we'll check if device is pd_capable and
 	// set up the current limit accordingly
-	mod_timer(&anx7688->nopd_timer, jiffies + msecs_to_jiffies(3000));
-	clear_bit(ANX7688_F_CURRENT_UPDATE, anx7688->flags);
+	anx7688->current_update_deadline = ktime_add_ms(ktime_get(), 3000);
 
 	set_bit(ANX7688_F_CONNECTED, anx7688->flags);
         return 0;
@@ -566,7 +565,7 @@ static void anx7688_disconnect(struct anx7688 *anx7688)
 
         dev_dbg(dev, "cable removed\n");
 
-	del_timer_sync(&anx7688->nopd_timer);
+	anx7688->current_update_deadline = 0;
 
 	if (anx7688->vconn_on) {
 		regulator_disable(anx7688->supplies[ANX7688_VCONN_INDEX].consumer);
@@ -653,14 +652,6 @@ static irqreturn_t anx7688_irq_plug_handler(int irq, void *data)
         return IRQ_HANDLED;
 }
 
-static void anx7688_nopd_timer_fn(struct timer_list *t)
-{
-	struct anx7688 *anx7688 = from_timer(anx7688, t, nopd_timer);
-
-	set_bit(ANX7688_F_CURRENT_UPDATE, anx7688->flags);
-	schedule_delayed_work(&anx7688->work, 0);
-}
-
 enum {
 	CMD_SUCCESS,
 	CMD_REJECT,
@@ -785,7 +776,7 @@ static int anx7688_handle_pd_message(struct anx7688* anx7688,
 			rdo_max_v * 100, rdo_max_p * 500, anx7688->pd_current_limit);
 
 		// update current limit sooner, now that we have PD negotiation result
-		mod_timer(&anx7688->nopd_timer, jiffies + msecs_to_jiffies(500));
+		anx7688->current_update_deadline = ktime_add_ms(ktime_get(), 500);
 
 		//TODO: we should go through PDOs and decide which one
 		//to request, build a RDO with a proper index of the
@@ -909,7 +900,7 @@ static int anx7688_handle_pd_message(struct anx7688* anx7688,
 				dev_err(anx7688->dev, "failed to offline vbus_in\n");
 
 			// wait till the dust settles
-			mod_timer(&anx7688->nopd_timer, jiffies + msecs_to_jiffies(3000));
+			anx7688->current_update_deadline = ktime_add_ms(ktime_get(), 3000);
 		} else {
 			dev_dbg(anx7688->dev, "received HARD_RST, idiot firmware is bored\n");
 		}
@@ -1892,8 +1883,11 @@ static void anx7688_work(struct work_struct *work)
 		 */
 		anx7688_update_status(anx7688);
 
-		if (test_and_clear_bit(ANX7688_F_CURRENT_UPDATE, anx7688->flags))
+		if (anx7688->current_update_deadline &&
+			ktime_after(ktime_get(), anx7688->current_update_deadline)) {
+			anx7688->current_update_deadline = 0;
 			anx7688_handle_current_update(anx7688);
+		}
 	}
 
 	mutex_unlock(&anx7688->lock);
@@ -2089,8 +2083,6 @@ static int anx7688_i2c_probe(struct i2c_client *client,
 
         schedule_delayed_work(&anx7688->work, msecs_to_jiffies(10));
 
-	timer_setup(&anx7688->nopd_timer, anx7688_nopd_timer_fn, 0);
-
 	timer_setup(&anx7688->work_timer, anx7688_cabledet_timer_fn, 0);
 	mod_timer(&anx7688->work_timer, jiffies + msecs_to_jiffies(1000));
 
@@ -2116,7 +2108,6 @@ static int anx7688_i2c_remove(struct i2c_client *client)
 	power_supply_unreg_notifier(&anx7688->vbus_in_nb);
 
 	del_timer_sync(&anx7688->work_timer);
-	del_timer_sync(&anx7688->nopd_timer);
 
         cancel_delayed_work_sync(&anx7688->work);
 
-- 
2.35.3


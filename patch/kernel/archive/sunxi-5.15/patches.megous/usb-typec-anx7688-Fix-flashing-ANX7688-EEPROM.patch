From 244e5e1ba65a1685d527d66f81e6d795cbc23017 Mon Sep 17 00:00:00 2001
From: Ondrej Jirman <megous@megous.com>
Date: Mon, 15 Feb 2021 12:54:44 +0100
Subject: [PATCH 351/478] usb: typec: anx7688: Fix flashing ANX7688 EEPROM

Some timings needed to be tuned up. Apparently it's not enough to
wait for write done register flag, but we need to wait for another
2.5-5ms after that.

Also there may need to be some delay after setting up undocumented
magic flags in various registers prior to programming.

Signed-off-by: Ondrej Jirman <megous@megous.com>
---
 drivers/usb/typec/anx7688.c | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/typec/anx7688.c b/drivers/usb/typec/anx7688.c
index b5b519de0ca7..49ecbf641ab8 100644
--- a/drivers/usb/typec/anx7688.c
+++ b/drivers/usb/typec/anx7688.c
@@ -1264,7 +1264,7 @@ static int anx7688_eeprom_wait_done(struct anx7688 *anx7688)
         int ret;
 
         // wait for read to be done
-        timeout = ktime_add_us(ktime_get(), 10000);
+        timeout = ktime_add_us(ktime_get(), 50000);
         while (true) {
                 ret = anx7688_reg_read(anx7688, 0xe2);
                 if (ret < 0)
@@ -1361,6 +1361,8 @@ static int anx7688_eeprom_write(struct anx7688 *anx7688, unsigned addr,
         if (ret)
                 return ret;
 
+	udelay(2500);
+
         return 0;
 }
 
@@ -1412,6 +1414,9 @@ static int anx7688_flash_firmware(struct anx7688 *anx7688)
 
         msleep(10);
 
+	/*
+	 * Write to some magic registers to unlock flashing the EEPROM.
+	 */
         ret = anx7688_reg_update_bits(anx7688, 0x3f, BIT(5), BIT(5));
         if (ret < 0)
                 goto err_unlock;
@@ -1426,6 +1431,12 @@ static int anx7688_flash_firmware(struct anx7688 *anx7688)
         if (ret < 0)
                 goto err_unlock;
 
+        msleep(50);
+
+        ret = anx7688_eeprom_wait_done(anx7688);
+        if (ret)
+                goto err_unlock;
+
         for (addr = 0; addr < fw->size; addr += sizeof buf) {
                 memset(buf, 0, sizeof buf);
                 memcpy(buf, fw->data + addr, min_t(unsigned, fw->size - addr, sizeof buf));
-- 
2.35.3


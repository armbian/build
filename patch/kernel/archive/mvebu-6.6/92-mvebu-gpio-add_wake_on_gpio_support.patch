From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aditya Prayoga <aditya@kobol.io>
Date: Tue, 12 Feb 2019 10:34:30 +0800
Subject: [ARCHEOLOGY] kernel: mvebu-next: Add Wake on GPIO support

> X-Git-Archeology: > recovered message: > The SoC provides several waking options sourced by different peripherals
> X-Git-Archeology: > recovered message: > to take the system out of power save modes. One of the options is Wake
> X-Git-Archeology: > recovered message: > on GPIO.
> X-Git-Archeology: > recovered message: > This patch implements missing function to support gpio as wakeup source
> X-Git-Archeology: > recovered message: > and properly route it to upper interrupt controller (Arm GIC).
> X-Git-Archeology: > recovered message: > Signed-off-by: Aditya Prayoga <aditya@kobol.io>
> X-Git-Archeology: - Revision 8cac6dba946b5cf50f82e6e0f6d144e1b6f88606: https://github.com/armbian/build/commit/8cac6dba946b5cf50f82e6e0f6d144e1b6f88606
> X-Git-Archeology:   Date: Tue, 12 Feb 2019 10:34:30 +0800
> X-Git-Archeology:   From: Aditya Prayoga <aditya@kobol.io>
> X-Git-Archeology:   Subject: kernel: mvebu-next: Add Wake on GPIO support
> X-Git-Archeology:
> X-Git-Archeology: - Revision e261c6f82835bd9b12e07ba837b55fbf1aaa4327: https://github.com/armbian/build/commit/e261c6f82835bd9b12e07ba837b55fbf1aaa4327
> X-Git-Archeology:   Date: Wed, 31 Jul 2019 12:51:00 +0200
> X-Git-Archeology:   From: Aditya Prayoga <aprayoga@users.noreply.github.com>
> X-Git-Archeology:   Subject: Move mvebu DEFAULT, NEXT and DEV branch to next kernel (LTS) and U-boot #1426 (#1487)
> X-Git-Archeology:
> X-Git-Archeology: - Revision 150ac0c2afa147d9e3b036c8ecd8238fe5648cf3: https://github.com/armbian/build/commit/150ac0c2afa147d9e3b036c8ecd8238fe5648cf3
> X-Git-Archeology:   Date: Tue, 19 Nov 2019 23:25:39 +0100
> X-Git-Archeology:   From: Igor Pecovnik <igorpecovnik@users.noreply.github.com>
> X-Git-Archeology:   Subject: Remove K<4, change branches, new features (#1586)
> X-Git-Archeology:
> X-Git-Archeology: - Revision 2fe5e6f7553174c2b2be69d70398145e11af00b6: https://github.com/armbian/build/commit/2fe5e6f7553174c2b2be69d70398145e11af00b6
> X-Git-Archeology:   Date: Thu, 03 Dec 2020 10:24:27 +0100
> X-Git-Archeology:   From: Jannis <52237708+heisath@users.noreply.github.com>
> X-Git-Archeology:   Subject: [AR-558] Switch mvebu current to LK5.9 (based on previous mvebu-dev) (#2405)
> X-Git-Archeology:
> X-Git-Archeology: - Revision aa3d60f57e84d02887c63cae176bdec96b560e38: https://github.com/armbian/build/commit/aa3d60f57e84d02887c63cae176bdec96b560e38
> X-Git-Archeology:   Date: Thu, 10 Dec 2020 11:47:33 +0100
> X-Git-Archeology:   From: Rosen Penev <rosenp@gmail.com>
> X-Git-Archeology:   Subject: refreshed mvebu with quilt (#2419)
> X-Git-Archeology:
> X-Git-Archeology: - Revision bd4c2c67f07ec0bcd823332da00cc8d3a7d733d7: https://github.com/armbian/build/commit/bd4c2c67f07ec0bcd823332da00cc8d3a7d733d7
> X-Git-Archeology:   Date: Fri, 22 Jan 2021 13:20:44 +0100
> X-Git-Archeology:   From: Jannis <52237708+heisath@users.noreply.github.com>
> X-Git-Archeology:   Subject: [AR-609] Switch mvebu-current to 5.10.y (reusing config and patches from -dev) (#2547)
> X-Git-Archeology:
> X-Git-Archeology: - Revision 0cdffb29b07305209efb12cf3b5ac6032d3a1153: https://github.com/armbian/build/commit/0cdffb29b07305209efb12cf3b5ac6032d3a1153
> X-Git-Archeology:   Date: Wed, 24 Mar 2021 19:01:53 +0100
> X-Git-Archeology:   From: Igor Pecovnik <igorpecovnik@users.noreply.github.com>
> X-Git-Archeology:   Subject: Renaming DEV branch to EDGE (#2704)
> X-Git-Archeology:
> X-Git-Archeology: - Revision 5b1c1c2897a570c173c40204e98257b2dd7a74c9: https://github.com/armbian/build/commit/5b1c1c2897a570c173c40204e98257b2dd7a74c9
> X-Git-Archeology:   Date: Thu, 04 Jan 2024 00:06:37 +0530
> X-Git-Archeology:   From: Lane Jennison <lane@lane-fu.com>
> X-Git-Archeology:   Subject: mvebu-edge: move to 6.6.y
> X-Git-Archeology:
---
 drivers/gpio/gpio-mvebu.c | 37 +++++++++-
 1 file changed, 35 insertions(+), 2 deletions(-)

diff --git a/drivers/gpio/gpio-mvebu.c b/drivers/gpio/gpio-mvebu.c
index 111111111111..222222222222 100644
--- a/drivers/gpio/gpio-mvebu.c
+++ b/drivers/gpio/gpio-mvebu.c
@@ -37,6 +37,7 @@
 #include <linux/gpio/consumer.h>
 #include <linux/gpio/machine.h>
 #include <linux/init.h>
+#include <linux/interrupt.h>
 #include <linux/io.h>
 #include <linux/irq.h>
 #include <linux/irqchip/chained_irq.h>
@@ -113,7 +114,7 @@ struct mvebu_gpio_chip {
 	struct regmap     *regs;
 	u32		   offset;
 	struct regmap     *percpu_regs;
-	int		   irqbase;
+	int		   bank_irq[4];
 	struct irq_domain *domain;
 	int		   soc_variant;
 
@@ -609,6 +610,33 @@ static const struct regmap_config mvebu_gpio_regmap_config = {
 	.fast_io = true,
 };
 
+/*
+ * Set interrupt number "irq" in the GPIO as a wake-up source.
+ * While system is running, all registered GPIO interrupts need to have
+ * wake-up enabled. When system is suspended, only selected GPIO interrupts
+ * need to have wake-up enabled.
+ * @param  irq          interrupt source number
+ * @param  enable       enable as wake-up if equal to non-zero
+ * @return       This function returns 0 on success.
+ */
+static int mvebu_gpio_set_wake_irq(struct irq_data *d, unsigned int enable)
+{
+	struct irq_chip_generic *gc = irq_data_get_irq_chip_data(d);
+	struct mvebu_gpio_chip *mvchip = gc->private;
+	int irq;
+	int bank;
+
+	bank = d->hwirq % 8;
+	irq = mvchip->bank_irq[bank];
+
+	if (enable)
+		enable_irq_wake(irq);
+	else
+		disable_irq_wake(irq);
+
+	return 0;
+}
+
 /*
  * Functions implementing the pwm_chip methods
  */
@@ -1260,7 +1288,7 @@ static int mvebu_gpio_probe(struct platform_device *pdev)
 
 	err = irq_alloc_domain_generic_chips(
 	    mvchip->domain, ngpios, 2, np->name, handle_level_irq,
-	    IRQ_NOREQUEST | IRQ_NOPROBE | IRQ_LEVEL, 0, 0);
+	    IRQ_NOREQUEST | IRQ_NOPROBE | IRQ_LEVEL, 0, IRQ_GC_INIT_NESTED_LOCK);
 	if (err) {
 		dev_err(&pdev->dev, "couldn't allocate irq chips %s (DT).\n",
 			mvchip->chip.label);
@@ -1278,6 +1306,8 @@ static int mvebu_gpio_probe(struct platform_device *pdev)
 	ct->chip.irq_mask = mvebu_gpio_level_irq_mask;
 	ct->chip.irq_unmask = mvebu_gpio_level_irq_unmask;
 	ct->chip.irq_set_type = mvebu_gpio_irq_set_type;
+	ct->chip.irq_set_wake = mvebu_gpio_set_wake_irq;
+	ct->chip.flags = IRQCHIP_SET_TYPE_MASKED | IRQCHIP_MASK_ON_SUSPEND;
 	ct->chip.name = mvchip->chip.label;
 
 	ct = &gc->chip_types[1];
@@ -1286,6 +1316,8 @@ static int mvebu_gpio_probe(struct platform_device *pdev)
 	ct->chip.irq_mask = mvebu_gpio_edge_irq_mask;
 	ct->chip.irq_unmask = mvebu_gpio_edge_irq_unmask;
 	ct->chip.irq_set_type = mvebu_gpio_irq_set_type;
+	ct->chip.irq_set_wake = mvebu_gpio_set_wake_irq;
+	ct->chip.flags = IRQCHIP_SET_TYPE_MASKED | IRQCHIP_MASK_ON_SUSPEND;
 	ct->handler = handle_edge_irq;
 	ct->chip.name = mvchip->chip.label;
 
@@ -1301,6 +1333,7 @@ static int mvebu_gpio_probe(struct platform_device *pdev)
 			continue;
 		irq_set_chained_handler_and_data(irq, mvebu_gpio_irq_handler,
 						 mvchip);
+		mvchip->bank_irq[i] = irq;
 	}
 
 	return 0;
-- 
Armbian


From a31600ef78e54ce46e3ed74fb9d5323b6486f45c Mon Sep 17 00:00:00 2001
From: Ondrej Jirman <megous@megous.com>
Date: Sun, 29 Nov 2020 06:04:02 +0100
Subject: [PATCH 248/351] usb: typec: anx7688: Store current role setting in
 the device struct

It's not accessible from the typec_port object, wtf?

Signed-off-by: Ondrej Jirman <megous@megous.com>
---
 drivers/usb/typec/anx7688.c | 19 +++++++++++++------
 1 file changed, 13 insertions(+), 6 deletions(-)

diff --git a/drivers/usb/typec/anx7688.c b/drivers/usb/typec/anx7688.c
index 3a7b2d25e286..149c2fe3e8e5 100644
--- a/drivers/usb/typec/anx7688.c
+++ b/drivers/usb/typec/anx7688.c
@@ -190,6 +190,7 @@ struct anx7688 {
         struct typec_partner *partner;
         struct usb_pd_identity partner_identity;
 	struct usb_role_switch *role_sw;
+	int pwr_role, data_role;
 
         struct dentry *debug_root;
 
@@ -556,10 +557,12 @@ static void anx7688_disconnect(struct anx7688 *anx7688)
 	typec_unregister_partner(anx7688->partner);
         anx7688->partner = NULL;
 
+	anx7688->pwr_role = TYPEC_SINK;
+	anx7688->data_role = TYPEC_DEVICE;
+        typec_set_pwr_role(anx7688->port, anx7688->pwr_role);
+        typec_set_data_role(anx7688->port, anx7688->data_role);
         typec_set_pwr_opmode(anx7688->port, TYPEC_PWR_MODE_USB);
-        typec_set_pwr_role(anx7688->port, TYPEC_SINK);
         typec_set_vconn_role(anx7688->port, TYPEC_SINK);
-        typec_set_data_role(anx7688->port, TYPEC_DEVICE);
 
 	usb_role_switch_set_role(anx7688->role_sw, USB_ROLE_NONE);
 
@@ -861,7 +864,8 @@ static int anx7688_update_status(struct anx7688 *anx7688)
 			}
 		}
 
-		typec_set_pwr_role(anx7688->port, vbus_on ? TYPEC_SOURCE : TYPEC_SINK);
+		anx7688->pwr_role = vbus_on ? TYPEC_SOURCE : TYPEC_SINK;
+		typec_set_pwr_role(anx7688->port, anx7688->pwr_role);
 		anx7688->vbus_on = vbus_on;
 	}
 
@@ -884,7 +888,8 @@ static int anx7688_update_status(struct anx7688 *anx7688)
 		anx7688->vconn_on = vconn_on;
 	}
 
-	typec_set_data_role(anx7688->port, dr_dfp ? TYPEC_HOST : TYPEC_DEVICE);
+	anx7688->data_role = dr_dfp ? TYPEC_HOST : TYPEC_DEVICE;
+	typec_set_data_role(anx7688->port, anx7688->data_role);
 
 	if (usb_role_switch_get_role(anx7688->role_sw) !=
 	    (dr_dfp ? USB_ROLE_HOST : USB_ROLE_DEVICE)) {
@@ -1647,10 +1652,12 @@ static int anx7688_i2c_probe(struct i2c_client *client,
                 goto err_role_sw;
         }
 
+	anx7688->pwr_role = TYPEC_SINK;
+	anx7688->data_role = TYPEC_DEVICE;
+        typec_set_pwr_role(anx7688->port, anx7688->pwr_role);
+        typec_set_data_role(anx7688->port, anx7688->data_role);
         typec_set_pwr_opmode(anx7688->port, TYPEC_PWR_MODE_USB);
-        typec_set_pwr_role(anx7688->port, TYPEC_SINK);
         typec_set_vconn_role(anx7688->port, TYPEC_SINK);
-        typec_set_data_role(anx7688->port, TYPEC_DEVICE);
 
         ret = devm_request_irq(dev, irq_cabledet, anx7688_irq_plug_handler,
                                IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING,
-- 
2.34.0


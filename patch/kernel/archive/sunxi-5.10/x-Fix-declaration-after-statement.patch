From 79df7b65a963d0fd414f90ce873e1a2f10f49b95 Mon Sep 17 00:00:00 2001
From: The-going <48602507+The-going@users.noreply.github.com>
Date: Mon, 22 Feb 2021 17:19:43 +0300
Subject: [PATCH] Fix declaration after statement

ISO C90 forbids mixed declarations and code
[-Wdeclaration-after-statement]
---
 drivers/spi/spi.c                                 | 2 +-
 drivers/gpu/drm/sun4i/sun8i_ui_layer.c            | 4 ++--
 drivers/gpu/drm/sun4i/sun8i_vi_layer.c            | 4 ++--
 drivers/media/i2c/gc2145.c                        | 9 +++++----
 drivers/media/i2c/ov5640.c                        | 2 +-
 drivers/net/ethernet/stmicro/stmmac/dwmac-sun8i.c | 2 +-
 drivers/video/backlight/pwm_bl.c                  | 3 ++-
 7 files changed, 15 insertions(+), 13 deletions(-)

diff --git a/drivers/spi/spi.c b/drivers/spi/spi.c
index 0c65b6565..a61e891a7 100644
--- a/drivers/spi/spi.c
+++ b/drivers/spi/spi.c
@@ -3339,7 +3339,7 @@ static int __spi_validate_bits_per_word(struct spi_controller *ctlr,
 int spi_setup(struct spi_device *spi)
 {
 	unsigned	bad_bits, ugly_bits;
-	int		status;
+	int		status, ret;
 
 	/* check mode to prevent that DUAL and QUAD set at the same time
 	 */
@@ -3400,7 +3400,7 @@ int spi_setup(struct spi_device *spi)
 
 	if (gpio_is_valid(spi->cs_gpio)) {
 		dev_info(&spi->dev, "spi_setup / gpio_is_valid(%d) ... doing gpio_request ...\n", spi->cs_gpio);
-		int ret = gpio_request(spi->cs_gpio, dev_name(&spi->dev));
+		ret = gpio_request(spi->cs_gpio, dev_name(&spi->dev));
 		if (ret) {
 			dev_err(&spi->dev, "failed to request gpio\n");
 		}
diff --git a/drivers/gpu/drm/sun4i/sun8i_ui_layer.c b/drivers/gpu/drm/sun4i/sun8i_ui_layer.c
index 5ef1f7513..2fbdbb28b 100644
--- a/drivers/gpu/drm/sun4i/sun8i_ui_layer.c
+++ b/drivers/gpu/drm/sun4i/sun8i_ui_layer.c
@@ -29,6 +29,7 @@ static void sun8i_ui_layer_enable(struct sun8i_mixer *mixer, int channel,
 {
 	u32 val, bld_base, ch_base;
 	unsigned int old_pipe_ch;
+	unsigned  tmp;
 
 	bld_base = sun8i_blender_base(mixer);
 	ch_base = sun8i_channel_base(mixer, channel);
@@ -102,7 +103,6 @@ static void sun8i_ui_layer_enable(struct sun8i_mixer *mixer, int channel,
 		DRM_DEBUG_DRIVER("  enable pipe %d <- ch %d\n", zpos, channel);
 	}
 
-	unsigned  tmp;
 	regmap_read(mixer->engine.regs,
 			   SUN8I_MIXER_CHAN_UI_LAYER_ATTR(ch_base, overlay), &tmp);
 	DRM_DEBUG_DRIVER("  post-en-dis %08x\n", tmp);
@@ -213,6 +213,7 @@ static int sun8i_ui_layer_update_formats(struct sun8i_mixer *mixer, int channel,
 	const struct drm_format_info *fmt;
 	u32 val, ch_base, hw_fmt;
 	int ret;
+	unsigned tmp;
 
 	ch_base = sun8i_channel_base(mixer, channel);
 
@@ -223,7 +224,6 @@ static int sun8i_ui_layer_update_formats(struct sun8i_mixer *mixer, int channel,
 		return -EINVAL;
 	}
 
-	unsigned tmp;
 	regmap_read(mixer->engine.regs,
 			   SUN8I_MIXER_CHAN_UI_LAYER_ATTR(ch_base, overlay), &tmp);
 	DRM_DEBUG_DRIVER("  pre-format %08x\n", tmp);
diff --git a/drivers/gpu/drm/sun4i/sun8i_vi_layer.c b/drivers/gpu/drm/sun4i/sun8i_vi_layer.c
index c393c388e..07528e5ef 100644
--- a/drivers/gpu/drm/sun4i/sun8i_vi_layer.c
+++ b/drivers/gpu/drm/sun4i/sun8i_vi_layer.c
@@ -23,6 +23,7 @@ static void sun8i_vi_layer_enable(struct sun8i_mixer *mixer, int channel,
 {
 	u32 val, bld_base, ch_base;
 	unsigned int old_pipe_ch;
+	unsigned  tmp;
 
 	bld_base = sun8i_blender_base(mixer);
 	ch_base = sun8i_channel_base(mixer, channel);
@@ -96,7 +97,6 @@ static void sun8i_vi_layer_enable(struct sun8i_mixer *mixer, int channel,
 		DRM_DEBUG_DRIVER("  enable pipe %d <- ch %d\n", zpos, channel);
 	}
 
-	unsigned  tmp;
 	regmap_read(mixer->engine.regs,
 			   SUN8I_MIXER_CHAN_VI_LAYER_ATTR(ch_base, overlay), &tmp);
 	DRM_DEBUG_DRIVER("  post-en-dis %08x\n", tmp);
@@ -270,6 +270,7 @@ static int sun8i_vi_layer_update_formats(struct sun8i_mixer *mixer, int channel,
 	u32 val, ch_base, csc_mode, hw_fmt;
 	const struct drm_format_info *fmt;
 	int ret;
+	unsigned  tmp;
 
 	ch_base = sun8i_channel_base(mixer, channel);
 
@@ -280,7 +281,6 @@ static int sun8i_vi_layer_update_formats(struct sun8i_mixer *mixer, int channel,
 		return ret;
 	}
 
-	unsigned  tmp;
 	regmap_read(mixer->engine.regs,
 			   SUN8I_MIXER_CHAN_VI_LAYER_ATTR(ch_base, overlay), &tmp);
 	DRM_DEBUG_DRIVER("  pre-format %08x\n", tmp);
diff --git a/drivers/media/i2c/gc2145.c b/drivers/media/i2c/gc2145.c
index bed611045..d3e2a0d21 100644
--- a/drivers/media/i2c/gc2145.c
+++ b/drivers/media/i2c/gc2145.c
@@ -1562,6 +1562,8 @@ static int gc2145_setup_mode(struct gc2145_dev *sensor)
 	unsigned long height = sensor->fmt.height;
 	unsigned long framerate = sensor->frame_interval.denominator;
 	const struct gc2145_pixfmt *pix_fmt;
+	unsigned long rt, ft, ft_rt;
+	int i;
 
 	pix_fmt = gc2145_find_format(sensor->fmt.code);
 	if (!pix_fmt) {
@@ -1691,10 +1693,9 @@ static int gc2145_setup_mode(struct gc2145_dev *sensor)
 	//XXX: calculate auto exposure settings, there are 4 slots that the HW
 	//uses and exposure settings are set in row_time units
 
-	unsigned long rt = gc2145_sensor_params_get_row_period(&params);
-	unsigned long ft = gc2145_sensor_params_get_frame_period(&params);
-	unsigned long ft_rt = ft / rt / 4;
-	int i;
+	rt = gc2145_sensor_params_get_row_period(&params);
+	ft = gc2145_sensor_params_get_frame_period(&params);
+	ft_rt = ft / rt / 4;
 
 	for (i = 0; i < 7; i++) {
 		// exposure settings for exposure levels
diff --git a/drivers/media/i2c/ov5640.c b/drivers/media/i2c/ov5640.c
index 13ffb2541..129e62649 100644
--- a/drivers/media/i2c/ov5640.c
+++ b/drivers/media/i2c/ov5640.c
@@ -1746,6 +1746,7 @@ static int ov5640_set_mode(struct ov5640_dev *sensor)
 	bool auto_exp =  sensor->ctrls.auto_exp->val == V4L2_EXPOSURE_AUTO;
 	unsigned long rate;
 	int ret;
+	u8 tmp;
 
 	dn_mode = mode->dn_mode;
 	orig_dn_mode = orig_mode->dn_mode;
@@ -1818,7 +1819,6 @@ static int ov5640_set_mode(struct ov5640_dev *sensor)
 	if (ret < 0)
 		return ret;
 
-	u8 tmp;
 	ret = ov5640_read_reg(sensor, 0x5308, &tmp);
 	if (ret)
 		return ret;
diff --git a/drivers/net/ethernet/stmicro/stmmac/dwmac-sun8i.c b/drivers/net/ethernet/stmicro/stmmac/dwmac-sun8i.c
index c94e1bbcf..28d4fe350 100644
--- a/drivers/net/ethernet/stmicro/stmmac/dwmac-sun8i.c
+++ b/drivers/net/ethernet/stmicro/stmmac/dwmac-sun8i.c
@@ -1307,7 +1307,7 @@ static int sun8i_dwmac_remove(struct platform_device *pdev)
 
 static void sun8i_dwmac_shutdown(struct platform_device *pdev)
 {
-	struct net_device *ndev = dev_get_drvdata(&pdev->dev);;
+	struct net_device *ndev = dev_get_drvdata(&pdev->dev);
 	struct stmmac_priv *priv = netdev_priv(ndev);
 	struct sunxi_priv_data *gmac = priv->plat->bsp_priv;
 
diff --git a/drivers/video/backlight/pwm_bl.c b/drivers/video/backlight/pwm_bl.c
index c16ab5c34..b73a1ec67 100644
--- a/drivers/video/backlight/pwm_bl.c
+++ b/drivers/video/backlight/pwm_bl.c
@@ -453,6 +453,7 @@ static int pwm_backlight_probe(struct platform_device *pdev)
 	struct device_node *node = pdev->dev.of_node;
 	struct pwm_bl_data *pb;
 	struct pwm_state state, state_real;
+	u64 level;
 	unsigned int i;
 	int ret;
 
@@ -636,7 +637,7 @@ static int pwm_backlight_probe(struct platform_device *pdev)
 		 * the brightness determined by the driver 
 		 */
 		pwm_get_state(pb->pwm, &state);
-		u64 level = (u64)state.duty_cycle * pb->scale;
+		level = (u64)state.duty_cycle * pb->scale;
 		do_div(level, (u64)state.period);
 
 		for (i = 0; i <= data->max_brightness; i++) {
-- 
2.26.2


From f3a5dd7a1a00473e9fff98ab8176c2b96b5b0d38 Mon Sep 17 00:00:00 2001
From: stephen <stephen@vamrs.com>
Date: Tue, 26 Feb 2019 20:32:24 +0800
Subject: [PATCH 37/97] overlays: add README

Signed-off-by: stephen <stephen@vamrs.com>
---
 arch/arm64/boot/dts/rockchip/overlays/README | 121 +++++++++++++++++++
 1 file changed, 121 insertions(+)
 create mode 100644 arch/arm64/boot/dts/rockchip/overlays/README

diff --git a/arch/arm64/boot/dts/rockchip/overlays/README b/arch/arm64/boot/dts/rockchip/overlays/README
new file mode 100644
index 000000000000..93c4c42029a8
--- /dev/null
+++ b/arch/arm64/boot/dts/rockchip/overlays/README
@@ -0,0 +1,121 @@
+Introduction
+=============
+
+This directory contains Device Tree overlays. Device Tree makes it possible
+to support many hardware configurations with a single kernel and without the
+need to explicitly load or blacklisr kernel modules.
+
+On Rock Pi, you will find a .dtb for each base platform in /boot. This
+describes the hardware that is part of the Rock Pi board. The loader selects
+the .dtb file appropriate for the platform by name and pass it to the kernel.
+
+Device Tree Overlays usage is controlled from /boot/hw_intfc.conf. You can do
+the settings for Rock Pi in your hw_intfc.conf, which should cause your
+Rock Pi to do your wanted things after a reboot.
+
+In /boot/overlays you will find many .dtbo files. The loader will merge the
+selected .dtbo files by reading file /boot/hw_intfc.conf.
+
+
+Using Overlays
+===============
+
+Overlays are loaded using "intfc:" directive. As an example, consider the
+at24c02 module. Add one line in hw_intfc.conf:
+
+	intfc:dtoverlay=at24c02
+
+This causes the file /boot/overlays/at24c02.dtbo to be loaded.
+
+
+The Overlay and Parameter Reference
+=====================================
+
+N.B. When editing this file, please preserve the indentation levels to make it
+simple to parse programmatically. NO HARD TABS.
+
+Name:	pwm0
+Info:	Overlay for BUS PWM0
+Load:	intfc:pwm0=<value>
+Value:
+		on		Set to "on" to enable the pwm0 interface (default "off")
+		off		Set to "off" to disable the pwm0 interface
+
+
+Name:	pwm1
+Info:	Overlay for BUS PWM1
+Load:	intfc:pwm1=<value>
+Value:
+		on		Set to "on" to enable the pwm1 interface (default "off")
+		off		Set to "off" to disable the pwm2 interface
+
+
+Name:	uart2
+Info:	Overlay for BUS UART2
+Load:	intfc:uart2=<value>
+Value:
+		on		Set to "on" to enable the uart2 interface (default "off")
+		off		Set to "off" to disable the uart2 interface
+
+
+Name:	uart4
+Info:	Overlay for BUS UART4
+Load:	intfc:uart4=<value>
+Value:
+		on		Set to "on" to enable the uart4 interface (default "off")
+		off		Set to "off" to disable the uart4 interface
+
+
+Name:	spi1
+Info:	Overlay for BUS SPI1
+Load:	intfc:spi1=<value>
+Value:
+		on		Set to "on" to enable the spi1 interface (default "off")
+		off		Set to "off" to disable the spi1 interface
+
+
+Name:	spi2
+Info:	Overlay for BUS SPI2
+Load:	intfc:spi2=<value>
+Value:
+		on		Set to "on" to enable the spi2 interface (default "off")
+		off		Set to "off" to disable the spi2 interface
+
+
+Name:	i2c2
+Info:	Overlay for BUS I2C2
+Load:	intfc:i2c2=<value>
+Value:
+		on		Set to "on" to enable the i2c2 interface (default "off")
+		off		Set to "off" to disable the i2c2 interface
+
+
+Name:	i2c6
+Info:	Overlay for BUS I2C6
+Load:	intfc:i2c6=<value>
+Value:
+		on		Set to "on" to enable the i2c6 interface (default "off")
+		off		Set to "off" to disable the i2c6 interface
+
+
+Name:	i2c7
+Info:	Overlay for BUS I2C7
+Load:	intfc:i2c7=<value>
+Value:
+		on		Set to "on" to enable the i2c7 interface (default "off")
+		off		Set to "off" to disable the i2c7 interface
+
+
+N.B. It is recommended to only ebable those bus interfaces that are needed.
+Leaving all interfaces enabled can lead to unwanted behaviour.
+
+
+Name:	at24c02
+Info:	Overlay for activation of Atmel AT24C02 over I2C
+Load:	intfc:dtoverlay=at24c02
+
+
+Name:	two-color-led
+Info:	Overlay for activation of two color led module.
+Load:	intfc:dtoverlay=two-color-led
+
-- 
2.25.1


From 58d4b8d2fd3bf3edbc5f42dc1d6c5a80dfeb4c20 Mon Sep 17 00:00:00 2001
From: Stephen <stephen@vamrs.com>
Date: Fri, 6 Sep 2019 17:39:02 +0800
Subject: [PATCH 71/97] fbtft driver: delete debug comments

Signed-off-by: Stephen <stephen@vamrs.com>
---
 drivers/staging/fbtft/fbtft-core.c | 26 --------------------------
 1 file changed, 26 deletions(-)

diff --git a/drivers/staging/fbtft/fbtft-core.c b/drivers/staging/fbtft/fbtft-core.c
index 41351d48bda4..8541ea1ac529 100644
--- a/drivers/staging/fbtft/fbtft-core.c
+++ b/drivers/staging/fbtft/fbtft-core.c
@@ -666,8 +666,6 @@ struct fb_info *fbtft_framebuffer_alloc(struct fbtft_display *display,
 	char *gamma = display->gamma;
 	unsigned long *gamma_curves = NULL;
 
-	printk("#fbtft# start fbtft_framebuffer_alloc...\n");
-
 	/* sanity check */
 	if (display->gamma_num * display->gamma_len > FBTFT_GAMMA_MAX_VALUES_TOTAL) {
 		dev_err(dev, "FBTFT_GAMMA_MAX_VALUES_TOTAL=%d is exceeded\n",
@@ -675,8 +673,6 @@ struct fb_info *fbtft_framebuffer_alloc(struct fbtft_display *display,
 		return NULL;
 	}
 
-	printk("#fbtft# set fps or bpp...\n");
-
 	/* defaults */
 	if (!fps)
 		fps = 20;
@@ -688,8 +684,6 @@ struct fb_info *fbtft_framebuffer_alloc(struct fbtft_display *display,
 		return NULL;
 	}
 
-	printk("#fbtft# override driver values...\n");
-
 	/* override driver values? */
 	if (pdata->fps)
 		fps = pdata->fps;
@@ -726,33 +720,23 @@ struct fb_info *fbtft_framebuffer_alloc(struct fbtft_display *display,
 		height = display->height;
 	}
 
-	printk("#fbtft# alloc 1...\n");
-
 	vmem_size = display->width * display->height * bpp / 8;
 	vmem = vzalloc(vmem_size);
 	if (!vmem)
 		goto alloc_fail;
 
-	printk("#fbtft# alloc 2...\n");
-
 	fbops = devm_kzalloc(dev, sizeof(struct fb_ops), GFP_KERNEL);
 	if (!fbops)
 		goto alloc_fail;
 
-	printk("#fbtft# alloc 3...\n");
-
 	fbdefio = devm_kzalloc(dev, sizeof(struct fb_deferred_io), GFP_KERNEL);
 	if (!fbdefio)
 		goto alloc_fail;
 
-	printk("#fbtft# alloc 4...\n");
-
 	buf = devm_kzalloc(dev, 128, GFP_KERNEL);
 	if (!buf)
 		goto alloc_fail;
 
-	printk("#fbtft# alloc 5...\n");
-
 	if (display->gamma_num && display->gamma_len) {
 		gamma_curves = devm_kzalloc(dev, display->gamma_num * display->gamma_len * sizeof(gamma_curves[0]),
 						GFP_KERNEL);
@@ -760,8 +744,6 @@ struct fb_info *fbtft_framebuffer_alloc(struct fbtft_display *display,
 			goto alloc_fail;
 	}
 
-	printk("#fbtft# alloc 6...\n");
-
 	info = framebuffer_alloc(sizeof(struct fbtft_par), dev);
 	if (!info)
 		goto alloc_fail;
@@ -828,8 +810,6 @@ struct fb_info *fbtft_framebuffer_alloc(struct fbtft_display *display,
 	mutex_init(&par->gamma.lock);
 	info->pseudo_palette = par->pseudo_palette;
 
-	printk("#fbtft# alloc 6...\n");
-
 	if (par->gamma.curves && gamma) {
 		if (fbtft_gamma_parse_str(par,
 			par->gamma.curves, gamma, strlen(gamma)))
@@ -845,18 +825,14 @@ struct fb_info *fbtft_framebuffer_alloc(struct fbtft_display *display,
 		txbuflen = PAGE_SIZE; /* need buffer for byteswapping */
 #endif
 
-	printk("#fbtft# alloc 7...\n");
-
 	if (txbuflen > 0) {
 #ifdef CONFIG_HAS_DMA
 		if (dma) {
-			printk("#fbtft# alloc 8...\n");
 			dev->coherent_dma_mask = ~0;
 			txbuf = dmam_alloc_coherent(dev, txbuflen, &par->txbuf.dma, GFP_DMA);
 		} else
 #endif
 		{
-			printk("#fbtft# alloc 9...\n");
 			txbuf = devm_kzalloc(par->info->device, txbuflen, GFP_KERNEL);
 		}
 		if (!txbuf)
@@ -865,8 +841,6 @@ struct fb_info *fbtft_framebuffer_alloc(struct fbtft_display *display,
 		par->txbuf.len = txbuflen;
 	}
 
-	printk("#fbtft# alloc 10...\n");
-
 	/* Initialize gpios to disabled */
 	par->gpio.reset = -1;
 	par->gpio.dc = -1;
-- 
2.25.1


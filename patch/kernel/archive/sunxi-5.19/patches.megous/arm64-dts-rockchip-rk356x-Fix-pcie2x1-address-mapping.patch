From 2c8dbaf2c71d5bb124a0928b762188548afc5811 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ond=C5=99ej=20Jirman?= <megi@xff.cz>
Date: Sat, 29 Jan 2022 02:22:02 +0100
Subject: [PATCH 268/417] arm64: dts: rockchip: rk356x: Fix pcie2x1 address
 mapping

Arcane magic, but it fixes large storage corruption issues.

This mapping is designed to be more straightforward, inspired by
dt-bindings docs for sample pcie3x2 node:

  reg = <0x3 0xc0800000 0x0 0x390000>,
        <0x0 0xfe280000 0x0 0x10000>,
        <0x3 0x80000000 0x0 0x100000>;
  ranges = <0x81000000 0x0 0x80800000 0x3 0x80800000 0x0 0x100000>,
           <0x83000000 0x0 0x80900000 0x3 0x80900000 0x0 0x3f700000>;

I noticed that this is crafted so that there doesn't need to be
any translation other than dropping the high dword bits, and I
modified the ranges for pcie2x1 to follow the same principle.

Tested with > 16 GiB of TX and RX traffic using nvme.

I've also extended the config space size to 16 MiB, which is number
mentioned on wikipedia, which is my go to source for high quality
information.

Some of the previous ranges change attempts fixed the storage
corruption issues, but broke wifi pcie devices (which make use I/O
space, as opposed to my nvme).

With this change both nvme doesn't get corrupted, and pcie
wifi cards keep working... :)

Signed-off-by: Ondrej Jirman <megi@xff.cz>
---
 arch/arm64/boot/dts/rockchip/rk356x.dtsi | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/arch/arm64/boot/dts/rockchip/rk356x.dtsi b/arch/arm64/boot/dts/rockchip/rk356x.dtsi
index a8e74cdff..81799b2eb 100644
--- a/arch/arm64/boot/dts/rockchip/rk356x.dtsi
+++ b/arch/arm64/boot/dts/rockchip/rk356x.dtsi
@@ -787,11 +787,11 @@ pcie2x1: pcie@fe260000 {
 		phys = <&combphy2 PHY_TYPE_PCIE>;
 		phy-names = "pcie-phy";
 		power-domains = <&power RK3568_PD_PIPE>;
-		reg = <0x3 0xc0000000 0x0 0x400000>,
-		      <0x0 0xfe260000 0x0 0x10000>,
-		      <0x3 0x3f800000 0x0 0x800000>;
-		ranges = <0x1000000 0x0 0x7f700000 0x3 0x3f700000 0x0 0x00100000
-			  0x2000000 0x0 0x40000000 0x3 0x00000000 0x0 0x3f700000>;
+		reg = <0x3 0xc0000000 0x0 0x00400000>,
+		      <0x0 0xfe260000 0x0 0x00010000>,
+		      <0x3 0x00000000 0x0 0x01000000>;
+		ranges =  <0x01000000 0x0 0x01000000 0x3 0x01000000 0x0 0x00100000
+			   0x02000000 0x0 0x02000000 0x3 0x02000000 0x0 0x3e000000>;
 		reg-names = "dbi", "apb", "config";
 		resets = <&cru SRST_PCIE20_POWERUP>;
 		reset-names = "pipe";
-- 
2.35.3


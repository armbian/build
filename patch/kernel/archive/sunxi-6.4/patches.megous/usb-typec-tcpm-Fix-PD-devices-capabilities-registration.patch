From 8945ff019f054600fc499c3a1ba4a8dad4240f2f Mon Sep 17 00:00:00 2001
From: Ondrej Jirman <megi@xff.cz>
Date: Sat, 18 Feb 2023 00:38:44 +0100
Subject: [PATCH 381/469] usb: typec: tcpm: Fix PD devices/capabilities
 registration

Unregister caps before registering them. Store NULL to the struct
if registration fails, so that next attempt can succeed.

Fixes "sysfs: cannot create duplicate filename
'/devices/virtual/usb_power_delivery/pd1/source-capabilities'" error.

Signed-off-by: Ondrej Jirman <megi@xff.cz>
---
 drivers/usb/typec/tcpm/tcpm.c | 37 +++++++++++++++++++++++++++--------
 1 file changed, 29 insertions(+), 8 deletions(-)

diff --git a/drivers/usb/typec/tcpm/tcpm.c b/drivers/usb/typec/tcpm/tcpm.c
index 8d5a855a81ef..a5f34197b409 100644
--- a/drivers/usb/typec/tcpm/tcpm.c
+++ b/drivers/usb/typec/tcpm/tcpm.c
@@ -2402,15 +2402,22 @@ static int tcpm_register_source_caps(struct tcpm_port *port)
 	struct usb_power_delivery_desc desc = { port->negotiated_rev };
 	struct usb_power_delivery_capabilities_desc caps = { };
 	struct usb_power_delivery_capabilities *cap;
+	struct usb_power_delivery *partner_pd;
+
+	if (!port->partner_pd) {
+		partner_pd = usb_power_delivery_register(NULL, &desc);
+		if (IS_ERR(partner_pd))
+			return PTR_ERR(partner_pd);
 
-	if (!port->partner_pd)
-		port->partner_pd = usb_power_delivery_register(NULL, &desc);
-	if (IS_ERR(port->partner_pd))
-		return PTR_ERR(port->partner_pd);
+		port->partner_pd = partner_pd;
+	}
 
 	memcpy(caps.pdo, port->source_caps, sizeof(u32) * port->nr_source_caps);
 	caps.role = TYPEC_SOURCE;
 
+	usb_power_delivery_unregister_capabilities(port->partner_source_caps);
+	port->partner_source_caps = NULL;
+
 	cap = usb_power_delivery_register_capabilities(port->partner_pd, &caps);
 	if (IS_ERR(cap))
 		return PTR_ERR(cap);
@@ -2425,15 +2432,22 @@ static int tcpm_register_sink_caps(struct tcpm_port *port)
 	struct usb_power_delivery_desc desc = { port->negotiated_rev };
 	struct usb_power_delivery_capabilities_desc caps = { };
 	struct usb_power_delivery_capabilities *cap;
+	struct usb_power_delivery *partner_pd;
 
-	if (!port->partner_pd)
-		port->partner_pd = usb_power_delivery_register(NULL, &desc);
-	if (IS_ERR(port->partner_pd))
-		return PTR_ERR(port->partner_pd);
+	if (!port->partner_pd) {
+		partner_pd = usb_power_delivery_register(NULL, &desc);
+		if (IS_ERR(partner_pd))
+			return PTR_ERR(partner_pd);
+
+		port->partner_pd = partner_pd;
+	}
 
 	memcpy(caps.pdo, port->sink_caps, sizeof(u32) * port->nr_sink_caps);
 	caps.role = TYPEC_SINK;
 
+	usb_power_delivery_unregister_capabilities(port->partner_sink_caps);
+	port->partner_sink_caps = NULL;
+
 	cap = usb_power_delivery_register_capabilities(port->partner_pd, &caps);
 	if (IS_ERR(cap))
 		return PTR_ERR(cap);
@@ -6107,9 +6121,16 @@ static int tcpm_port_register_pd(struct tcpm_port *port)
 	port->pd = usb_power_delivery_register(port->dev, &desc);
 	if (IS_ERR(port->pd)) {
 		ret = PTR_ERR(port->pd);
+		port->pd = NULL;
 		goto err_unregister;
 	}
 
+	usb_power_delivery_unregister_capabilities(port->port_source_caps);
+	port->port_source_caps = NULL;
+
+	usb_power_delivery_unregister_capabilities(port->port_sink_caps);
+	port->port_sink_caps = NULL;
+
 	if (port->nr_src_pdo) {
 		memcpy_and_pad(caps.pdo, sizeof(caps.pdo), port->src_pdo,
 			       port->nr_src_pdo * sizeof(u32), 0);
-- 
2.34.1


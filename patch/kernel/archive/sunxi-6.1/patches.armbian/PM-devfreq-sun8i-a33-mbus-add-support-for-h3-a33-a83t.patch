From 219317169edefaf2cf7c9ba6f383d286003320ca Mon Sep 17 00:00:00 2001
From: Samuel Holland <samuel@sholland.org>
Date: Wed, 28 Dec 2022 22:30:58 -0600
Subject: [PATCH] PM / devfreq: sun8i-a33-mbus: Pass Hz to
 sun8i_a33_mbus_update_nominal_bw()

Both callers have the DDR frequency available in Hz, so deduplicate the
division by moving it inside sun8i_a33_mbus_update_nominal_bw(). This
also more closely matches the documented formula.

Signed-off-by: Samuel Holland <samuel@sholland.org>
---
 drivers/devfreq/sun8i-a33-mbus.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/devfreq/sun8i-a33-mbus.c b/drivers/devfreq/sun8i-a33-mbus.c
index 13d32213139fb0..e2bf65d52bb821 100644
--- a/drivers/devfreq/sun8i-a33-mbus.c
+++ b/drivers/devfreq/sun8i-a33-mbus.c
@@ -121,7 +121,7 @@ static void sun8i_a33_mbus_restart_pmu_counters(struct sun8i_a33_mbus *priv)
 }
 
 static void sun8i_a33_mbus_update_nominal_bw(struct sun8i_a33_mbus *priv,
-					     u32 ddr_freq_mhz)
+					     u32 ddr_freq)
 {
 	/*
 	 * Nominal bandwidth (KiB per PMU period):
@@ -130,7 +130,9 @@ static void sun8i_a33_mbus_update_nominal_bw(struct sun8i_a33_mbus *priv,
 	 *   ------------- * ------------ * --------
 	 *    microsecond     PMU period    transfer
 	 */
-	priv->nominal_bw = ddr_freq_mhz * pmu_period * priv->data_width / 1024;
+	priv->nominal_bw = ddr_freq / USEC_PER_SEC *
+			   pmu_period *
+			   priv->data_width / 1024;
 }
 
 static int sun8i_a33_mbus_set_dram_freq(struct sun8i_a33_mbus *priv,
@@ -207,7 +209,7 @@ static int sun8i_a33_mbus_set_dram_freq(struct sun8i_a33_mbus *priv,
 	writel_relaxed(pwrctl, priv->reg_dram + DRAM_PWRCTL);
 
 	sun8i_a33_mbus_restart_pmu_counters(priv);
-	sun8i_a33_mbus_update_nominal_bw(priv, ddr_freq_mhz);
+	sun8i_a33_mbus_update_nominal_bw(priv, freq);
 
 	return 0;
 }
@@ -307,7 +309,7 @@ static int sun8i_a33_mbus_hw_init(struct device *dev,
 	writel_relaxed(0xffffffff, priv->reg_mbus + MBUS_MDFSMRMR);
 
 	sun8i_a33_mbus_restart_pmu_counters(priv);
-	sun8i_a33_mbus_update_nominal_bw(priv, ddr_freq / USEC_PER_SEC);
+	sun8i_a33_mbus_update_nominal_bw(priv, ddr_freq);
 
 	return 0;
 }
From 2575de103d96f9fd50ebe21cfaaac907673082a5 Mon Sep 17 00:00:00 2001
From: Samuel Holland <samuel@sholland.org>
Date: Wed, 28 Dec 2022 22:35:12 -0600
Subject: [PATCH] PM / devfreq: sun8i-a33-mbus: Isolate MDFS-related code

A64 and H5 can use the MDFS hardware to atomically update the DRAM
controller frequency. However, the MDFS hardware in H3 is broken.
Instead, H3 will use firmware (running in SRAM) to reconfigure the
DRAM controller. To support this, separate the MDFS-related code inside
sun8i_a33_mbus_set_dram_freq() from the clock and PMU-related code.

Signed-off-by: Samuel Holland <samuel@sholland.org>
---
 drivers/devfreq/sun8i-a33-mbus.c | 33 ++++++++++++++++++--------------
 1 file changed, 19 insertions(+), 14 deletions(-)

diff --git a/drivers/devfreq/sun8i-a33-mbus.c b/drivers/devfreq/sun8i-a33-mbus.c
index e2bf65d52bb821..d094bcc2735541 100644
--- a/drivers/devfreq/sun8i-a33-mbus.c
+++ b/drivers/devfreq/sun8i-a33-mbus.c
@@ -145,11 +145,6 @@ static int sun8i_a33_mbus_set_dram_freq(struct sun8i_a33_mbus *priv,
 	u32 i, tREFI_32ck, tRFC_ck;
 	int ret;
 
-	/* The rate change is not effective until the MDFS process runs. */
-	ret = clk_set_rate(priv->clk_dram, freq);
-	if (ret)
-		return ret;
-
 	/* Disable automatic self-refesh and VTF before starting MDFS. */
 	pwrctl = readl_relaxed(priv->reg_dram + DRAM_PWRCTL) &
 		 ~DRAM_PWRCTL_SELFREF_EN;
@@ -208,9 +203,6 @@ static int sun8i_a33_mbus_set_dram_freq(struct sun8i_a33_mbus *priv,
 		pwrctl |= DRAM_PWRCTL_SELFREF_EN;
 	writel_relaxed(pwrctl, priv->reg_dram + DRAM_PWRCTL);
 
-	sun8i_a33_mbus_restart_pmu_counters(priv);
-	sun8i_a33_mbus_update_nominal_bw(priv, freq);
-
 	return 0;
 }
 
@@ -219,6 +211,7 @@ static int sun8i_a33_mbus_set_dram_target(struct device *dev,
 {
 	struct sun8i_a33_mbus *priv = dev_get_drvdata(dev);
 	struct devfreq *devfreq = priv->devfreq_dram;
+	unsigned long next_freq;
 	struct dev_pm_opp *opp;
 	int ret;
 
@@ -228,15 +221,27 @@ static int sun8i_a33_mbus_set_dram_target(struct device *dev,
 
 	dev_pm_opp_put(opp);
 
-	if (*freq == devfreq->previous_freq)
+	next_freq = *freq;
+	if (next_freq == devfreq->previous_freq)
 		return 0;
 
-	ret = sun8i_a33_mbus_set_dram_freq(priv, *freq);
-	if (ret) {
-		dev_warn(dev, "failed to set DRAM frequency: %d\n", ret);
-		*freq = devfreq->previous_freq;
-	}
+	/* The rate change is not effective until the MDFS process runs. */
+	ret = clk_set_rate(priv->clk_dram, next_freq);
+	if (ret)
+		goto fail;
+
+	ret = sun8i_a33_mbus_set_dram_freq(priv, next_freq);
+	if (ret)
+		goto fail;
+
+	sun8i_a33_mbus_restart_pmu_counters(priv);
+	sun8i_a33_mbus_update_nominal_bw(priv, next_freq);
+
+	return 0;
 
+fail:
+	dev_warn(dev, "failed to set DRAM frequency: %d\n", ret);
+	*freq = devfreq->previous_freq;
 	return ret;
 }
 
From 3c00df7e713bbf2adfd86ab504db1e097c7152ea Mon Sep 17 00:00:00 2001
From: Samuel Holland <samuel@sholland.org>
Date: Wed, 28 Dec 2022 22:47:23 -0600
Subject: [PATCH] PM / devfreq: sun8i-a33-mbus: Allow multiple set_dram_freq()
 methods

Allow the variant to specify a set_dram_freq() method. This is needed
for SoCs where the MDFS hardware is unavailable, like H3.

Signed-off-by: Samuel Holland <samuel@sholland.org>
---
 drivers/devfreq/sun8i-a33-mbus.c | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

diff --git a/drivers/devfreq/sun8i-a33-mbus.c b/drivers/devfreq/sun8i-a33-mbus.c
index d094bcc2735541..edd847e3ff1f99 100644
--- a/drivers/devfreq/sun8i-a33-mbus.c
+++ b/drivers/devfreq/sun8i-a33-mbus.c
@@ -69,7 +69,10 @@
 #define DRAM_DXnGCR0_DXODT_DISABLED	(0x2 << 4)
 #define DRAM_DXnGCR0_DXEN		(0x1 << 0)
 
+struct sun8i_a33_mbus;
+
 struct sun8i_a33_mbus_variant {
+	int (*set_dram_freq)(struct sun8i_a33_mbus *priv, unsigned long freq);
 	u32					min_dram_divider;
 	u32					max_dram_divider;
 	u32					odt_freq_mhz;
@@ -135,8 +138,8 @@ static void sun8i_a33_mbus_update_nominal_bw(struct sun8i_a33_mbus *priv,
 			   priv->data_width / 1024;
 }
 
-static int sun8i_a33_mbus_set_dram_freq(struct sun8i_a33_mbus *priv,
-					unsigned long freq)
+static int sun8i_a33_mbus_set_dram_freq_mdfs(struct sun8i_a33_mbus *priv,
+					     unsigned long freq)
 {
 	u32  ddr_freq_mhz = freq / USEC_PER_SEC; /* DDR */
 	u32 dram_freq_mhz =    ddr_freq_mhz / 2; /* SDR */
@@ -225,12 +228,12 @@ static int sun8i_a33_mbus_set_dram_target(struct device *dev,
 	if (next_freq == devfreq->previous_freq)
 		return 0;
 
-	/* The rate change is not effective until the MDFS process runs. */
+	/* The rate change is not effective until set_dram_freq() runs. */
 	ret = clk_set_rate(priv->clk_dram, next_freq);
 	if (ret)
 		goto fail;
 
-	ret = sun8i_a33_mbus_set_dram_freq(priv, next_freq);
+	ret = priv->variant->set_dram_freq(priv, next_freq);
 	if (ret)
 		goto fail;
 
@@ -474,7 +477,7 @@ static int sun8i_a33_mbus_remove(struct platform_device *pdev)
 
 	devfreq_remove_device(priv->devfreq_dram);
 
-	ret = sun8i_a33_mbus_set_dram_freq(priv, initial_freq);
+	ret = priv->variant->set_dram_freq(priv, initial_freq);
 	if (ret)
 		dev_warn(dev, "failed to restore DRAM frequency: %d\n", ret);
 
@@ -487,6 +490,7 @@ static int sun8i_a33_mbus_remove(struct platform_device *pdev)
 }
 
 static const struct sun8i_a33_mbus_variant sun50i_a64_mbus = {
+	.set_dram_freq		= sun8i_a33_mbus_set_dram_freq_mdfs,
 	.min_dram_divider	= 1,
 	.max_dram_divider	= 4,
 	.odt_freq_mhz		= 400,
From 6021b3c8e5f1332521c3a08303a9d2b4dc509a3a Mon Sep 17 00:00:00 2001
From: Samuel Holland <samuel@sholland.org>
Date: Wed, 28 Dec 2022 21:05:31 -0600
Subject: [PATCH] PM / devfreq: sun8i-a33-mbus: Implement set_dram_freq() via
 SMC

This allows the DRAM controller to be reconfigured from firmware, which
runs from SRAM and therefore can run while access to the DRAM controller
is blocked.

Signed-off-by: Samuel Holland <samuel@sholland.org>
---
 drivers/devfreq/sun8i-a33-mbus.c | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

diff --git a/drivers/devfreq/sun8i-a33-mbus.c b/drivers/devfreq/sun8i-a33-mbus.c
index edd847e3ff1f99..e65eb738dc7709 100644
--- a/drivers/devfreq/sun8i-a33-mbus.c
+++ b/drivers/devfreq/sun8i-a33-mbus.c
@@ -3,6 +3,7 @@
 // Copyright (C) 2020-2021 Samuel Holland <samuel@sholland.org>
 //
 
+#include <linux/arm-smccc.h>
 #include <linux/clk.h>
 #include <linux/devfreq.h>
 #include <linux/err.h>
@@ -209,6 +210,26 @@ static int sun8i_a33_mbus_set_dram_freq_mdfs(struct sun8i_a33_mbus *priv,
 	return 0;
 }
 
+static int sun8i_a33_mbus_set_dram_freq_smc(struct sun8i_a33_mbus *priv,
+					    unsigned long freq)
+{
+	u32  ddr_freq_mhz = freq / USEC_PER_SEC; /* DDR */
+	u32 dram_freq_mhz =    ddr_freq_mhz / 2; /* SDR */
+	struct arm_smccc_res res;
+	unsigned long flags = 0;
+
+	if (priv->odtmap && dram_freq_mhz > priv->variant->odt_freq_mhz)
+		flags |= BIT(0);
+	if (freq == priv->freq_table[0])
+		flags |= BIT(1);
+
+	arm_smccc_smc(ARM_SMCCC_CALL_VAL(ARM_SMCCC_FAST_CALL, ARM_SMCCC_SMC_32,
+					 ARM_SMCCC_OWNER_OEM, 0x33),
+		      dram_freq_mhz, flags, 0, 0, 0, 0, 0, &res);
+
+	return res.a0;
+}
+
 static int sun8i_a33_mbus_set_dram_target(struct device *dev,
 					  unsigned long *freq, u32 flags)
 {
From ac491adca1fe67d618f94d62f3539078324c8e1b Mon Sep 17 00:00:00 2001
From: Samuel Holland <samuel@sholland.org>
Date: Sat, 5 Feb 2022 13:58:41 -0600
Subject: [PATCH] PM / devfreq: sun8i-a33-mbus: Add H3 variant

Signed-off-by: Samuel Holland <samuel@sholland.org>
---
 drivers/devfreq/sun8i-a33-mbus.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/drivers/devfreq/sun8i-a33-mbus.c b/drivers/devfreq/sun8i-a33-mbus.c
index e65eb738dc7709..1a37a4559a7b6e 100644
--- a/drivers/devfreq/sun8i-a33-mbus.c
+++ b/drivers/devfreq/sun8i-a33-mbus.c
@@ -510,6 +510,13 @@ static int sun8i_a33_mbus_remove(struct platform_device *pdev)
 	return 0;
 }
 
+static const struct sun8i_a33_mbus_variant sun8i_h3_mbus = {
+	.set_dram_freq		= sun8i_a33_mbus_set_dram_freq_smc,
+	.min_dram_divider	= 1,
+	.max_dram_divider	= 4,
+	.odt_freq_mhz		= 400,
+};
+
 static const struct sun8i_a33_mbus_variant sun50i_a64_mbus = {
 	.set_dram_freq		= sun8i_a33_mbus_set_dram_freq_mdfs,
 	.min_dram_divider	= 1,
@@ -518,6 +525,7 @@ static const struct sun8i_a33_mbus_variant sun50i_a64_mbus = {
 };
 
 static const struct of_device_id sun8i_a33_mbus_of_match[] = {
+	{ .compatible = "allwinner,sun8i-h3-mbus", .data = &sun8i_h3_mbus },
 	{ .compatible = "allwinner,sun50i-a64-mbus", .data = &sun50i_a64_mbus },
 	{ .compatible = "allwinner,sun50i-h5-mbus", .data = &sun50i_a64_mbus },
 	{ },
From 7b5f54b606b6128eaf8b6c48e14a2622ccf97ee7 Mon Sep 17 00:00:00 2001
From: Samuel Holland <samuel@sholland.org>
Date: Sat, 5 Feb 2022 13:58:41 -0600
Subject: [PATCH] PM / devfreq: sun8i-a33-mbus: Add A33/A83T variant

Signed-off-by: Samuel Holland <samuel@sholland.org>
---
 drivers/devfreq/sun8i-a33-mbus.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/drivers/devfreq/sun8i-a33-mbus.c b/drivers/devfreq/sun8i-a33-mbus.c
index 1a37a4559a7b6e..2a9f128b8b6c7a 100644
--- a/drivers/devfreq/sun8i-a33-mbus.c
+++ b/drivers/devfreq/sun8i-a33-mbus.c
@@ -510,6 +510,13 @@ static int sun8i_a33_mbus_remove(struct platform_device *pdev)
 	return 0;
 }
 
+static const struct sun8i_a33_mbus_variant sun8i_a33_mbus = {
+	.set_dram_freq		= sun8i_a33_mbus_set_dram_freq_mdfs,
+	.min_dram_divider	= 2,
+	.max_dram_divider	= 16,
+	.odt_freq_mhz		= 400,
+};
+
 static const struct sun8i_a33_mbus_variant sun8i_h3_mbus = {
 	.set_dram_freq		= sun8i_a33_mbus_set_dram_freq_smc,
 	.min_dram_divider	= 1,
@@ -525,6 +532,8 @@ static const struct sun8i_a33_mbus_variant sun50i_a64_mbus = {
 };
 
 static const struct of_device_id sun8i_a33_mbus_of_match[] = {
+	{ .compatible = "allwinner,sun8i-a33-mbus", .data = &sun8i_a33_mbus },
+	{ .compatible = "allwinner,sun8i-a83t-mbus", .data = &sun8i_a33_mbus },
 	{ .compatible = "allwinner,sun8i-h3-mbus", .data = &sun8i_h3_mbus },
 	{ .compatible = "allwinner,sun50i-a64-mbus", .data = &sun50i_a64_mbus },
 	{ .compatible = "allwinner,sun50i-h5-mbus", .data = &sun50i_a64_mbus },
From f49e924dd55a5f9ca5b1060742dea5b16b3468ea Mon Sep 17 00:00:00 2001
From: Samuel Holland <samuel@sholland.org>
Date: Sun, 30 Jan 2022 12:28:24 -0600
Subject: [PATCH] PM / devfreq: sun8i-a33-mbus: Add PMU debugfs

Signed-off-by: Samuel Holland <samuel@sholland.org>
---
 drivers/devfreq/sun8i-a33-mbus.c | 55 ++++++++++++++++++++++++++++++++
 1 file changed, 55 insertions(+)

diff --git a/drivers/devfreq/sun8i-a33-mbus.c b/drivers/devfreq/sun8i-a33-mbus.c
index 2a9f128b8b6c7a..48a590f15dca46 100644
--- a/drivers/devfreq/sun8i-a33-mbus.c
+++ b/drivers/devfreq/sun8i-a33-mbus.c
@@ -5,6 +5,7 @@
 
 #include <linux/arm-smccc.h>
 #include <linux/clk.h>
+#include <linux/debugfs.h>
 #include <linux/devfreq.h>
 #include <linux/err.h>
 #include <linux/io.h>
@@ -72,8 +73,15 @@
 
 struct sun8i_a33_mbus;
 
+struct sun8i_a33_mbus_pmu_master {
+	u32		id;
+	const char	*name;
+};
+
 struct sun8i_a33_mbus_variant {
 	int (*set_dram_freq)(struct sun8i_a33_mbus *priv, unsigned long freq);
+	const struct sun8i_a33_mbus_pmu_master	*pmu_masters;
+	u32					num_pmu_masters;
 	u32					min_dram_divider;
 	u32					max_dram_divider;
 	u32					odt_freq_mhz;
@@ -343,6 +351,27 @@ static int sun8i_a33_mbus_hw_init(struct device *dev,
 	return 0;
 }
 
+static int sun8i_a33_mbus_show_usage(struct seq_file *s, void *data)
+{
+	struct sun8i_a33_mbus *priv = dev_get_drvdata(s->private);
+	const struct sun8i_a33_mbus_variant *variant = priv->variant;
+	u32 i;
+
+	seq_puts(s, " master             usage\n");
+	seq_puts(s, "--------------------------\n");
+	for (i = 0; i < variant->num_pmu_masters; ++i) {
+		u32 id = variant->pmu_masters[i].id;
+		seq_printf(s, " %-7s %10u KiB\n",
+			   variant->pmu_masters[i].name,
+			   readl_relaxed(priv->reg_mbus + MBUS_PMU_BWCR(id)));
+	}
+	seq_puts(s, "---------------------------\n");
+	seq_printf(s, " PEAK BW %10u KiB/s\n", sun8i_a33_mbus_get_peak_bw(priv));
+	seq_printf(s, " NOMINAL %10u KiB/s\n", priv->nominal_bw);
+
+	return 0;
+}
+
 static int __maybe_unused sun8i_a33_mbus_suspend(struct device *dev)
 {
 	struct sun8i_a33_mbus *priv = dev_get_drvdata(dev);
@@ -475,6 +504,9 @@ static int sun8i_a33_mbus_probe(struct platform_device *pdev)
 	 */
 	priv->devfreq_dram->suspend_freq = priv->freq_table[0];
 
+	debugfs_create_devm_seqfile(dev, "sun8i-mbus", NULL,
+				    sun8i_a33_mbus_show_usage);
+
 	return 0;
 
 err_remove_opps:
@@ -510,15 +542,36 @@ static int sun8i_a33_mbus_remove(struct platform_device *pdev)
 	return 0;
 }
 
+static const struct sun8i_a33_mbus_pmu_master sun8i_a33_mbus_pmu_masters[] = {
+	{ 0, "CPU" },
+	{ 1, "GPU" },
+	{ 2, "VE" },
+	{ 3, "DISPLAY" },
+	{ 4, "OTHER" },
+};
+
 static const struct sun8i_a33_mbus_variant sun8i_a33_mbus = {
 	.set_dram_freq		= sun8i_a33_mbus_set_dram_freq_mdfs,
+	.pmu_masters		= sun8i_a33_mbus_pmu_masters,
+	.num_pmu_masters	= ARRAY_SIZE(sun8i_a33_mbus_pmu_masters),
 	.min_dram_divider	= 2,
 	.max_dram_divider	= 16,
 	.odt_freq_mhz		= 400,
 };
 
+static const struct sun8i_a33_mbus_pmu_master sun8i_h3_mbus_pmu_masters[] = {
+	{ 0, "CPU" },
+	{ 1, "GPU" },
+	{ 2, "VE" },
+	{ 3, "DISPLAY" },
+	{ 6, "CSI" },
+	{ 4, "OTHER" },
+};
+
 static const struct sun8i_a33_mbus_variant sun8i_h3_mbus = {
 	.set_dram_freq		= sun8i_a33_mbus_set_dram_freq_smc,
+	.pmu_masters		= sun8i_h3_mbus_pmu_masters,
+	.num_pmu_masters	= ARRAY_SIZE(sun8i_h3_mbus_pmu_masters),
 	.min_dram_divider	= 1,
 	.max_dram_divider	= 4,
 	.odt_freq_mhz		= 400,
@@ -526,6 +579,8 @@ static const struct sun8i_a33_mbus_variant sun8i_h3_mbus = {
 
 static const struct sun8i_a33_mbus_variant sun50i_a64_mbus = {
 	.set_dram_freq		= sun8i_a33_mbus_set_dram_freq_mdfs,
+	.pmu_masters		= sun8i_h3_mbus_pmu_masters,
+	.num_pmu_masters	= ARRAY_SIZE(sun8i_h3_mbus_pmu_masters),
 	.min_dram_divider	= 1,
 	.max_dram_divider	= 4,
 	.odt_freq_mhz		= 400,

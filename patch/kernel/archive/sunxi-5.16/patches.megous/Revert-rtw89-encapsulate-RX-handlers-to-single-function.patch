From e79fa9f9fa6746f2f663e4fcca00a476a0aa5d4f Mon Sep 17 00:00:00 2001
From: Ondrej Jirman <megous@megous.com>
Date: Fri, 11 Feb 2022 15:47:37 +0100
Subject: [PATCH 487/562] Revert "rtw89: encapsulate RX handlers to single
 function"

This reverts commit a157b086e6dba68f4ee1760bb887edad03a04aa9.
---
 drivers/net/wireless/realtek/rtw89/core.c | 32 +++++++++++------------
 1 file changed, 15 insertions(+), 17 deletions(-)

diff --git a/drivers/net/wireless/realtek/rtw89/core.c b/drivers/net/wireless/realtek/rtw89/core.c
index 6474f777d71e..a0737eea9f81 100644
--- a/drivers/net/wireless/realtek/rtw89/core.c
+++ b/drivers/net/wireless/realtek/rtw89/core.c
@@ -1087,18 +1087,6 @@ static void rtw89_core_hw_to_sband_rate(struct ieee80211_rx_status *rx_status)
 	rx_status->rate_idx -= 4;
 }
 
-static void rtw89_core_rx_to_mac80211(struct rtw89_dev *rtwdev,
-				      struct rtw89_rx_phy_ppdu *phy_ppdu,
-				      struct rtw89_rx_desc_info *desc_info,
-				      struct sk_buff *skb_ppdu,
-				      struct ieee80211_rx_status *rx_status)
-{
-	rtw89_core_hw_to_sband_rate(rx_status);
-	rtw89_core_rx_stats(rtwdev, phy_ppdu, desc_info, skb_ppdu);
-	ieee80211_rx_napi(rtwdev->hw, NULL, skb_ppdu, &rtwdev->napi);
-	rtwdev->napi_budget_countdown--;
-}
-
 static void rtw89_core_rx_pending_skb(struct rtw89_dev *rtwdev,
 				      struct rtw89_rx_phy_ppdu *phy_ppdu,
 				      struct rtw89_rx_desc_info *desc_info,
@@ -1118,7 +1106,10 @@ static void rtw89_core_rx_pending_skb(struct rtw89_dev *rtwdev,
 		if (rtw89_core_rx_ppdu_match(rtwdev, desc_info, rx_status))
 			rtw89_chip_query_ppdu(rtwdev, phy_ppdu, rx_status);
 		rtw89_correct_cck_chan(rtwdev, rx_status);
-		rtw89_core_rx_to_mac80211(rtwdev, phy_ppdu, desc_info, skb_ppdu, rx_status);
+		rtw89_core_hw_to_sband_rate(rx_status);
+		rtw89_core_rx_stats(rtwdev, phy_ppdu, desc_info, skb_ppdu);
+		ieee80211_rx_napi(rtwdev->hw, NULL, skb_ppdu, &rtwdev->napi);
+		rtwdev->napi_budget_countdown--;
 	}
 }
 
@@ -1343,7 +1334,10 @@ static void rtw89_core_flush_ppdu_rx_queue(struct rtw89_dev *rtwdev,
 	skb_queue_walk_safe(&ppdu_sts->rx_queue[band], skb_ppdu, tmp) {
 		skb_unlink(skb_ppdu, &ppdu_sts->rx_queue[band]);
 		rx_status = IEEE80211_SKB_RXCB(skb_ppdu);
-		rtw89_core_rx_to_mac80211(rtwdev, NULL, desc_info, skb_ppdu, rx_status);
+		rtw89_core_hw_to_sband_rate(rx_status);
+		rtw89_core_rx_stats(rtwdev, NULL, desc_info, skb_ppdu);
+		ieee80211_rx_napi(rtwdev->hw, NULL, skb_ppdu, &rtwdev->napi);
+		rtwdev->napi_budget_countdown--;
 	}
 }
 
@@ -1370,10 +1364,14 @@ void rtw89_core_rx(struct rtw89_dev *rtwdev,
 	memset(rx_status, 0, sizeof(*rx_status));
 	rtw89_core_update_rx_status(rtwdev, desc_info, rx_status);
 	if (desc_info->long_rxdesc &&
-	    BIT(desc_info->frame_type) & PPDU_FILTER_BITMAP)
+	    BIT(desc_info->frame_type) & PPDU_FILTER_BITMAP) {
 		skb_queue_tail(&ppdu_sts->rx_queue[band], skb);
-	else
-		rtw89_core_rx_to_mac80211(rtwdev, NULL, desc_info, skb, rx_status);
+	} else {
+		rtw89_core_hw_to_sband_rate(rx_status);
+		rtw89_core_rx_stats(rtwdev, NULL, desc_info, skb);
+		ieee80211_rx_napi(rtwdev->hw, NULL, skb, &rtwdev->napi);
+		rtwdev->napi_budget_countdown--;
+	}
 }
 EXPORT_SYMBOL(rtw89_core_rx);
 
-- 
2.34.1


diff -ruN a/drivers/gpu/drm/panel/panel-simple.c b/drivers/gpu/drm/panel/panel-simple.c
--- a/drivers/gpu/drm/panel/panel-simple.c	2024-08-01 11:07:14.000000000 +0800
+++ b/drivers/gpu/drm/panel/panel-simple.c	2024-07-31 18:57:26.000000000 +0800
@@ -497,11 +497,12 @@
 	if (ktime_before(now_ktime, min_ktime))
 		panel_simple_msleep(ktime_to_ms(ktime_sub(min_ktime, now_ktime)) + 1);
 }
-
+extern void rockpi_mcu_screen_power_up(void);
+extern int rockpi_mcu_set_bright(int bright);
 static int panel_simple_regulator_enable(struct panel_simple *p)
 {
 	int err;
-
+	rockpi_mcu_screen_power_up();
 	if (p->power_invert) {
 		if (regulator_is_enabled(p->supply) > 0)
 			regulator_disable(p->supply);
@@ -510,14 +511,14 @@
 		if (err < 0)
 			return err;
 	}
-
+	rockpi_mcu_set_bright(0xFF);
 	return 0;
 }
 
 static int panel_simple_regulator_disable(struct panel_simple *p)
 {
 	int err;
-
+	rockpi_mcu_set_bright(0x00);
 	if (p->power_invert) {
 		if (!regulator_is_enabled(p->supply)) {
 			err = regulator_enable(p->supply);
@@ -5063,6 +5064,36 @@
 	.lanes = 4,
 };
 
+static const struct drm_display_mode btt_pitft_mode = {
+	.clock = 26101800 / 1000,
+	.hdisplay = 800,
+	.hsync_start = 800 + 59,
+	.hsync_end = 800 + 59 + 2,
+	.htotal = 800 + 59 + 2 + 52,
+	.vdisplay = 480,
+	.vsync_start = 480 + 7,
+	.vsync_end = 480 + 7 + 2,
+	.vtotal = 480 + 7 + 2 + 21,
+	.flags = DRM_MODE_FLAG_NVSYNC | DRM_MODE_FLAG_NHSYNC,
+};
+
+static const struct panel_desc_dsi btt_pitft = {
+	.desc = {
+		.modes = &btt_pitft_mode,
+		.num_modes = 1,
+		.bpc = 8,
+		.size = {
+			.width = 217,
+			.height = 136,
+		},
+		.connector_type = DRM_MODE_CONNECTOR_DSI,
+	},
+	.flags = MIPI_DSI_MODE_VIDEO |
+		 MIPI_DSI_MODE_VIDEO_BURST | MIPI_DSI_MODE_LPM,
+	.format = MIPI_DSI_FMT_RGB888,
+	.lanes = 1,
+};
+
 static const struct of_device_id dsi_of_match[] = {
 	{
 		.compatible = "simple-panel-dsi",
@@ -5089,6 +5120,9 @@
 		.compatible = "osddisplays,osd101t2045-53ts",
 		.data = &osd101t2045_53ts
 	}, {
+		.compatible = "btt-pitft",
+		.data = &btt_pitft
+	},  {
 		/* sentinel */
 	}
 };

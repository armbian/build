--- a/scripts/package/builddeb
+++ b/scripts/package/builddeb
@@ -119,10 +119,9 @@
 libc_headers_dir="$objtree/debian/headertmp"
 dtb_dir="$objtree/debian/dtbtmp"
 dbg_dir="$objtree/debian/dbgtmp"
-packagename=linux-image"$LOCALVERSION"
-fwpackagename=linux-firmware-image"$LOCALVERSION"
-kernel_headers_packagename=linux-headers"$LOCALVERSION"
-dtb_packagename=linux-dtb"$LOCALVERSION"
+packagename=linux-image-legacy"$LOCALVERSION"
+kernel_headers_packagename=linux-headers-legacy"$LOCALVERSION"
+dtb_packagename=linux-dtb-legacy"$LOCALVERSION"
 libc_headers_packagename=linux-libc-dev"$LOCALVERSION"
 dbg_packagename=$packagename-dbg
 debarch=
@@ -150,12 +149,11 @@
 BUILD_DEBUG="$(grep -s '^CONFIG_DEBUG_INFO=y' $KCONFIG_CONFIG || true)"
 
 # Setup the directory structure
-rm -rf "$tmpdir" "$fwdir" "$kernel_headers_dir" "$libc_headers_dir" "$dbg_dir" "$dtb_dir" $objtree/debian/files
+rm -rf "$tmpdir" "$kernel_headers_dir" "$libc_headers_dir" "$dbg_dir" "$dtb_dir" $objtree/debian/files
 mkdir -m 755 -p "$dtb_dir/DEBIAN"
 mkdir -p "$dtb_dir/boot/dtb-$version" "$dtb_dir/usr/share/doc/$dtb_packagename"
 mkdir -m 755 -p "$tmpdir/DEBIAN"
 mkdir -p "$tmpdir/lib" "$tmpdir/boot"
-mkdir -p "$fwdir/lib/firmware/$version/"
 mkdir -p "$kernel_headers_dir/lib/modules/$version/"
 
 # Build and install the kernel
@@ -425,22 +423,6 @@
  This is useful for people who need to build external modules
 EOF
 
-# Do we have firmware? Move it out of the way and build it into a package.
-if [ -e "$tmpdir/lib/firmware" ]; then
-	mv "$tmpdir/lib/firmware"/* "$fwdir/lib/firmware/$version/"
-	rmdir "$tmpdir/lib/firmware"
-
-	cat <<EOF >> debian/control
-
-Package: $fwpackagename
-Architecture: all
-Description: Linux kernel firmware, version $version
- This package contains firmware from the Linux kernel, version $version.
-EOF
-
-	create_package "$fwpackagename" "$fwdir"
-fi
-
 cat <<EOF >> debian/control
 
 Package: $dtb_packagename


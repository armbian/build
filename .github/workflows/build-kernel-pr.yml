name: Build Kernels at PR
#
# Generates kernels at PR if their code, patches or config was changed in any way. Packages are uploaded as Github action build artefakts
# Build starts if label is set to "Ready"
#

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, edited, synchronize]
    paths:
      - 'config/kernel/**'
      - 'config/sources/**'
      - 'patch/**'

jobs:

  Check:
    name: Checking
    if: ${{ github.repository_owner == 'Armbian' && contains( github.event.pull_request.labels.*.name, 'Ready for review :arrow_right:') }}
    uses: armbian/scripts/.github/workflows/check-for-changes.yml@master

    with:
      reference: ${{ github.event.pull_request.head.sha }}
      runner: small

  Build:
    needs: Check
    if: ${{ github.repository_owner == 'Armbian' && contains( github.event.pull_request.labels.*.name, 'Ready for review :arrow_right:') }}
    uses: armbian/scripts/.github/workflows/build-kernel.yml@master

    with:

      uploading: "false"
      runner: "fast"
      artifacts: "true"
      reference: ${{ github.event.pull_request.head.sha }}

    secrets:
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

#  Repo:
#    needs: [Check,Build]
#    #if: ${{ github.repository_owner == 'Armbian' && contains( github.event.pull_request.labels.*.name, 'Ready :arrow_right:') }}
#    uses: armbian/scripts/.github/workflows/repo.yml@master
    
#    secrets:
#      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
#      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
#      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
#      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
#      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
#      KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
#      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

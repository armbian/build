name: Build with Docker
on:
  
  # Trigger after Docker image was built
  workflow_run:
    workflows: ["Docker Image"]
    types:
      - completed
  
  # Trigger on pull reqests
  pull_request:
    types: [review_requested, ready_for_review]
  
  # Trigger manually  
  workflow_dispatch:

jobs:
  gradle:
    strategy:
      fail-fast: false
      matrix:
        board: [uefi-arm64,uefi-x86,virtual-qemu]
        release: [focal,buster,bullseye,hirsute,jammy]
        desktop: [xfce]

    if: ${{ github.repository_owner == 'Armbian' && github.event.workflow_run.conclusion == 'success' }} || github.event_name == 'workflow_dispatch'
    name: Variant
    runs-on: ubuntu-latest    
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: armbian/build
          path: build
          clean: true

      - name: Sync
        run: |

          mkdir -p build/userpatches
          sudo cp scripts/configs/* build/userpatches/
          
      - name: Pull Docker image
        run: |

          sudo docker pull ghcr.io/armbian/build:$(cat build/VERSION  | sed 's/trunk.*/trunk/')"-$(dpkg --print-architecture)"

      - name: Build test image
        run: |

          cd build

          export TERM=dumb
          sed -i "s/-it --rm/-i --rm/" userpatches/config-docker.conf          
          sed -i "s/COMPRESS_OUTPUTIMAGE=.*/COMPRESS_OUTPUTIMAGE=\"no\"/" userpatches/lib.config

          ./compile.sh docker \
          BETA=yes \
          EXPERT=yes \
          BOARD=${{ matrix.board }} \
          BRANCH=current \
          RELEASE=${{ matrix.release }} \
          BUILD_MINIMAL=no \
          BUILD_DESKTOP=yes \
          KERNEL_ONLY=no \
          KERNEL_CONFIGURE=prebuilt \
          COMPRESS_OUTPUTIMAGE=no \
          IGNORE_UPDATES=yes \
          DESKTOP_ENVIRONMENT_CONFIG_NAME="config_base" \
          DESKTOP_ENVIRONMENT=${{ matrix.desktop }} \
          SKIP_EXTERNAL_TOOLCHAINS=yes \
          DESKTOP_APPGROUPS_SELECTED=""

      - name: Upload artefacts
        uses: actions/upload-artifact@v2
        with:
          name: virtual-qemu
          path: build/output/images/*
          if-no-files-found: ignore
          retention-days: 10

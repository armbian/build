name: Docker build and run
on:
  # Trigger the workflow on push but only for the main branch
  #push:
  #  branches:
  #    - master
  # Trigger manually
  workflow_dispatch:

jobs:
  gradle:
    strategy:
      fail-fast: false
      matrix:
        release: [focal,buster,bullseye,hirsute,jammy]
        branch: [current]
    if: ${{ github.repository_owner == 'Armbian' }}
    name: Docker build and run
    #runs-on: ubuntu-latest
    runs-on: [self-hosted, Linux, test]
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: armbian/build
          path: build
          clean: true

      - name: Checkout support scripts
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: armbian/scripts
          path: scripts
          clean: true

      - name: Sync
        run: |

          mkdir -p build/userpatches
          sudo cp scripts/configs/* build/userpatches/


          
      - name: Pull Docker image
        run: |

          sudo docker pull ghcr.io/armbian/build:$(cat build/VERSION)

      - name: Install dependencies
        run: |

          sudo apt install -y qemu-utils qemu-system-arm
          
      - name: Build Qemu virtual image
        run: |

          cd build

          # we need to fix this once but fake toolchain will prevent downloading it each time
          mkdir -p cache/toolchain/gcc-linaro-7.4.1-2019.02-x86_64_aarch64-linux-gnu
          touch cache/toolchain/gcc-linaro-7.4.1-2019.02-x86_64_aarch64-linux-gnu/.download-complete
          mkdir -p cache/toolchain/gcc-linaro-7.4.1-2019.02-x86_64_arm-linux-gnueabi
          touch cache/toolchain/gcc-linaro-7.4.1-2019.02-x86_64_arm-linux-gnueabi/.download-complete
          mkdir -p cache/toolchain/gcc-linaro-aarch64-none-elf-4.8-2013.11_linux
          touch cache/toolchain/gcc-linaro-aarch64-none-elf-4.8-2013.11_linux/.download-complete
          mkdir -p cache/toolchain/gcc-linaro-arm-linux-gnueabihf-4.8-2014.04_linux
          touch cache/toolchain/gcc-linaro-arm-linux-gnueabihf-4.8-2014.04_linux/.download-complete
          mkdir -p cache/toolchain/gcc-linaro-arm-none-eabi-4.8-2014.04_linux
          touch cache/toolchain/gcc-linaro-arm-none-eabi-4.8-2014.04_linux/.download-complete
          mkdir -p cache/toolchain/gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu
          touch cache/toolchain/gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu/.download-complete
          mkdir -p cache/toolchain/gcc-arm-8.3-2019.03-x86_64-arm-linux-gnueabihf
          touch cache/toolchain/gcc-arm-8.3-2019.03-x86_64-arm-linux-gnueabihf/.download-complete
          mkdir -p cache/toolchain/gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu
          touch cache/toolchain/gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu/.download-complete
          mkdir -p cache/toolchain/gcc-arm-9.2-2019.12-x86_64-arm-none-linux-gnueabihf
          touch cache/toolchain/gcc-arm-9.2-2019.12-x86_64-arm-none-linux-gnueabihf/.download-complete

          sed -i "s/-it --rm/-i --rm/" userpatches/config-docker.conf
          sed -i "s/COMPRESS_OUTPUTIMAGE=.*/COMPRESS_OUTPUTIMAGE=\"no\"/" userpatches/lib.config
          ./compile.sh docker BETA=yes EXPERT=yes BOARD=virtual-qemu BRANCH=${{ matrix.branch }} RELEASE=${{ matrix.release }} BUILD_MINIMAL=no BUILD_DESKTOP=no KERNEL_ONLY=no KERNEL_CONFIGURE=prebuilt COMPRESS_OUTPUTIMAGE=no IGNORE_UPDATES=yes

      - name: Run virtual image
        run: |
          cd build
          TEMPDIR=$(mktemp -d)
          dpkg-deb -X output/debs-beta/linux-u-boot-virtual-qemu* ${TEMPDIR}
          source ${TEMPDIR}/usr/lib/u-boot/platform_install.sh
          cp ${TEMPDIR}${DIR}/u-boot.bin .
          qemu-img convert -f raw -O qcow2 output/images/Armbian*.img armbian.qcow2
          qemu-img resize armbian.qcow2 +4G
          smp=2
          rams=2000M
          bios=u-boot.bin
          sudo qemu-system-aarch64 -name ArmbianVirtualTest -m ${rams} -smp ${smp} -drive file=armbian.qcow2 -nographic -M virt -bios ${bios} -netdev user,id=user.0,hostfwd=udp::31783-:22,hostfwd=tcp::31783-:22 -device virtio-net,netdev=user.0 -machine gic-version=2

      - name: upload artefacts
        uses: actions/upload-artifact@v2
        with:
          name: virtual-qemu
          path: build/output/images/*

name: Build With Docker Image
on:
  
  # Trigger after Docker image was built
  workflow_run:
    workflows: ["Build Docker image"]
    types:
      - completed
  
  # Trigger on pull reqests
  pull_request:
    types: [review_requested, ready_for_review]
  
  # Trigger manually  
  workflow_dispatch:

jobs:
  gradle:
    strategy:
      fail-fast: false
      matrix:
        board: [uefi-arm64,uefi-x86]
        release: [focal,buster,bullseye,hirsute,jammy]
        branch: [edge]
    if: ${{ github.repository_owner == 'Armbian' }}
    name: Variant
    runs-on: ubuntu-latest    
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: armbian/build
          path: build
          clean: true

      - name: Checkout support scripts
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: armbian/scripts
          path: scripts
          clean: true

      - name: Sync
        run: |

          mkdir -p build/userpatches
          sudo cp scripts/configs/* build/userpatches/
          
      - name: Pull Docker image
        run: |

          sudo docker pull ghcr.io/armbian/build:$(cat build/VERSION)

      - name: Build Qemu virtual image
        run: |

          cd build

          export TERM=dumb
          sed -i "s/-it --rm/-i --rm/" userpatches/config-docker.conf          
          sed -i "s/COMPRESS_OUTPUTIMAGE=.*/COMPRESS_OUTPUTIMAGE=\"no\"/" userpatches/lib.config
          ./compile.sh docker \
          BETA=yes \
          SKIP_EXTERNAL_TOOLCHAINS="yes" \
          OFFLINE_WORK="yes" \
          EXPERT=yes \
          BOARD=${{ matrix.board }} \
          BRANCH=${{ matrix.branch }} \
          RELEASE=${{ matrix.release }} \
          BUILD_MINIMAL=no \
          BUILD_DESKTOP=no \
          KERNEL_ONLY=no \
          KERNEL_CONFIGURE=prebuilt \
          COMPRESS_OUTPUTIMAGE=xz \
          IGNORE_UPDATES=yes

      - name: Upload artefacts
        uses: actions/upload-artifact@v2
        with:
          name: virtual-qemu
          path: build/output/images/*

name: Docker Image
on:
  # Trigger the workflow on push but only for the main branch
  push:
    branches:
      - master
  # Trigger manually
  workflow_dispatch:

jobs:

  build-arm64:

    name: Build for ARM
    runs-on: aarch64
    if: ${{ github.repository_owner == 'Armbian' }}
    steps:

     - name: Checkout repository
       uses: actions/checkout@v2
       with:
         fetch-depth: 0
         repository: armbian/build
         path: build
         ref: master
         clean: false

     - name: Checkout support scripts
       uses: actions/checkout@v2
       with:
         fetch-depth: 0
         repository: armbian/scripts
         path: scripts
         clean: false

     - name: Sync
       run: |
         mkdir -p build/userpatches
         sudo cp scripts/configs/* build/userpatches/

     - name: Login to GitHub Container Registry
       uses: docker/login-action@v1
       with:
         registry: ghcr.io
         username: ${{ github.actor }}
         password: ${{ secrets.CR_PAT }}

     - name: Build Docker image

       run: |

         docker stop $(docker ps -a -q) 2>/dev/null || true 
         docker rm $(docker ps -a -q) 2>/dev/null || true         
         docker images -a  | awk '{print $3}' | xargs docker rmi --force  2>/dev/null || true 
         cd build
         sed -i "s/-it --rm/-i --rm/" config/templates/config-docker.conf
         touch .ignore_changes
         ./compile.sh docker BOARD=virtual-qemu BRANCH=current RELEASE=focal BUILD_MINIMAL=yes BUILD_DESKTOP=no KERNEL_ONLY=no KERNEL_CONFIGURE=no COMPRESS_OUTPUTIMAGE=no REPOSITORY_INSTALL="u-boot,kernel,armbian-config,armbian-firmware" JUST_INIT=yes

     - name: Push Docker image

       run: docker push ghcr.io/armbian/build:$(cat build/VERSION | sed 's/trunk.*/trunk/')"-$(dpkg --print-architecture)"


  build-amd64:

    name: Build for X86
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'Armbian' }}
    steps:

     - name: Checkout repository
       uses: actions/checkout@v2
       with:
         fetch-depth: 0
         repository: armbian/build
         path: build
         ref: master
         clean: false

     - name: Checkout support scripts
       uses: actions/checkout@v2
       with:
         fetch-depth: 0
         repository: armbian/scripts
         path: scripts
         clean: false

     - name: Sync
       run: |
         mkdir -p build/userpatches
         sudo cp scripts/configs/* build/userpatches/

     - name: Login to GitHub Container Registry
       uses: docker/login-action@v1
       with:
         registry: ghcr.io
         username: ${{ github.actor }}
         password: ${{ secrets.CR_PAT }}

     - name: Build Docker image

       run: |

         cd build
         sed -i "s/-it --rm/-i --rm/" config/templates/config-docker.conf
         touch .ignore_changes
         ./compile.sh docker BOARD=virtual-qemu BRANCH=current RELEASE=focal BUILD_MINIMAL=yes BUILD_DESKTOP=no KERNEL_ONLY=no KERNEL_CONFIGURE=no COMPRESS_OUTPUTIMAGE=no REPOSITORY_INSTALL="u-boot,kernel,armbian-config,armbian-firmware" JUST_INIT=yes

     - name: Push Docker image
     
       run: docker push ghcr.io/armbian/build:$(cat build/VERSION | sed 's/trunk.*/trunk/')"-$(dpkg --print-architecture)"

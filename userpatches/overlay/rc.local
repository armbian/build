#!/bin/bash

echo "[rc.local] - start at $(date '+%Y-%m-%d %H:%M:%S')"

# Example: Save the startup date to a file in /tmp
date > /tmp/rc_local_started.txt

# Function: echolog
# Description: Logs messages with a timestamp prefix. If no arguments are provided,
#              reads from stdin and logs each line. Outputs to console and appends to $LOGI file.
LOGI="/opt/web3pi/logs/web3pi.log"
echolog(){
    if [ $# -eq 0 ]
    then cat - | while read -r message
        do
                echo "$(date +"[%F %T %Z] -") $message" | tee -a $LOGI
            done
    else
        echo -n "$(date +'[%F %T %Z]') - " | tee -a $LOGI
        echo $* | tee -a $LOGI
    fi
}

echolog " "
echolog "RC.LOCAL START - RC.LOCAL START - RC.LOCAL START - RC.LOCAL START - RC.LOCAL START - RC.LOCAL START - RC.LOCAL START"
echolog " "
timedatectl | echolog

# Function: set_install_stage
# Description: A function that saves the installation stage to the file /root/.install_stage. The file stores a number as text. The beginning of the installation is marked by 0, and the higher the number, the further along the installation process is. A value of 100 indicates the installation is complete.
set_install_stage() {
  local number=$1
  echo $number > /root/.install_stage
}

# If the installation stage file does not exist, create it and initialize it with the value "0".
if [ ! -f "/root/.install_stage" ]; then
  echolog "/root/.install_stage not exist"
  touch /root/.install_stage
  set_install_stage "0" # initial value
  echolog "/root/.install_stage file created and initialized to 0"
fi

# Function: get_install_stage
# Description: A function that retrieves the installation stage from the file /root/.install_stage.
get_install_stage() {
    local file_path=$1
    if [ -f "/root/.install_stage" ]; then
        local number=$(cat "/root/.install_stage")
        echo $number
    else
        echolog "File /root/.install_stage does not exist."
        return 0
    fi
}

pingServerAdr="github.com"
ping_n=0
ping_max=10

ping -c 1 $pingServerAdr > /dev/null 2>&1
while [ $? -ne 0 ]; do
  echolog -e "\e[1A\e[K $(date): test connection [$ping_n/$ping_max] - ${pingServerAdr}"
  # \e[1A Moves the cursor one line up in the terminal.
  # \e[K Clears the line from the current cursor position to the end.
  sleep 6
  let "ping_n+=1"
  [[ ${ping_n} -gt ${ping_max} ]] && echolog "Stopping the installation, internet access is necessary" && exit 1
  ping -c 1 $pingServerAdr > /dev/null 2>&1
done

echolog "$(date): Connected - ${pingServerAdr}"  

if [ "$(get_install_stage)" -eq 0 ]; then
    echo "[rc.local] - Wykonywanie operacji tylko przy pierwszym uruchomieniu [rc.local]..."

    echolog "[rc.local] - Sync time with NTP server (chronyd -q)"
    chronyd -q
    timedatectl | echolog

    ## ACCOUNT CONFIGURATION ################################################################
    set_status "[install.sh] - Account configuration" "Configure account"

    # Create Ethereum account
    echolog "[install.sh] - Creating ethereum user"
    if ! id -u ethereum >/dev/null 2>&1; then
        adduser --disabled-password --gecos "" ethereum
    fi

    echo "ethereum:ethereum" | chpasswd
    for GRP in sudo netdev audio video dialout plugdev; do
        adduser ethereum $GRP
    done

    # Force password change on first login
    # chage -d 0 ethereum
    #----------------------------------------------------------------------------------------
    
    ## Directories ##########################################################################
    mkdir -p /opt/web3pi                                    # Create a directory for Web3 Pi
    chown ethereum:ethereum /opt/web3pi
    mkdir -p /opt/web3pi/logs                               # Create a directory for Web3 Pi logs
    chown ethereum:ethereum /opt/web3pi/logs
    mkdir /mnt/storage                                      # Create a directory for the storage mount point
    chown ethereum:ethereum /mnt/storage/
    mkdir /home/ethereum/secrets                            # Create a directory for secrets
    chown ethereum:ethereum /home/ethereum/secrets
    #----------------------------------------------------------------------------------------

    ## Create jwt.hex file ##################################################################
    echo "[rc.local] - Create jwt.hex file"
    sudo -u ethereum openssl rand -hex 32 | sudo -u ethereum tr -d "\n" | sudo -u ethereum tee /home/ethereum/secrets/jwt.hex
    #----------------------------------------------------------------------------------------

    # Zapisz znacznik, że operacje zostały wykonane
    touch "$INIT_FLAG_RC_LOCAL"
    set_install_stage 1
fi

if [ "$(get_install_stage)" -eq 100 ]; then
  echo "[rc.local] - Installation completed"
  sleep 2
elif [ "$(get_install_stage)" -ge 1 ]; then
  echo "[rc.local] - Run main installation script (.install.sh)"
  /opt/web3pi/.install.sh
fi

echo "[rc.local] - exit 0 at $(date '+%Y-%m-%d %H:%M:%S')"
exit 0
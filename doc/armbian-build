# paths
script_dir="$(dirname "$0")"

# Load The Bash procedure Objects
json_file="$script_dir/features.json"
json_data=$(cat "$json_file")


bash_ass_aray(){
    # Get all the outer keys (categories or features)
    keys=$(echo "$json_data" | jq -r 'keys[]')
   
    # Loop over each key
    for key in $keys; do

        echo "# $key"
        
        # Get all the inner keys (like BUILD_ONLY)
        inner_keys=$(echo "$json_data" | jq -r ".$key | keys[]")
        
        # Loop over each inner key
        for inner_key in $inner_keys; do
            # Assign the values to variables
            author=$(echo "$json_data" | jq -r ".$key.$inner_key.Author")
            src_reference=$(echo "$json_data" | jq -r ".$key.$inner_key.src_reference")
            desc=$(echo "$json_data" | jq -r ".$key.$inner_key.desc")
            example=$(echo "$json_data" | jq -r ".$key.$inner_key.\"example / [note] test case\"")
            status=$(echo "$json_data" | jq -r ".$key.$inner_key.status")
            doc_link=$(echo "$json_data" | jq -r ".$key.$inner_key.doc_link")

            cat << EOF 

    ["id,$inner_key"]="$inner_key"
    ["author,$inner_key"]="$author"
    ["src_reference,$inner_key"]="$src_reference"
    ["desc,$inner_key"]="$desc"
    ["example,$inner_key"]="$example"
    ["status,$inner_key"]="$status"
    ["doc_link,$inner_key"]="$doc_link"

EOF
        done
    done
}

markdown_table(){
    # Get all the outer keys (categories or features)
    keys=$(echo "$json_data" | jq -r 'keys[]')
   
    # Loop over each key
    for key in $keys; do

        echo "# $key"
        cat << EOF

| Feature |  desc | example | src_reference | status |
| :-----: | :---: | :---: | :-----: | :---------: |
EOF
        # Get all the inner keys (like BUILD_ONLY)
        inner_keys=$(echo "$json_data" | jq -r ".$key | keys[]")
        
        # Loop over each inner key

for inner_key in $inner_keys; do
    # Assign the values to variables
    author=$(echo "$json_data" | jq -r ".$key.$inner_key.Author")
    src_reference=$(echo "$json_data" | jq -r ".$key.$inner_key.src_reference")
    desc=$(echo "$json_data" | jq -r ".$key.$inner_key.desc")
    example=$(echo "$json_data" | jq -r ".$key.$inner_key.\"example / [note] test case\"")
    status=$(echo "$json_data" | jq -r ".$key.$inner_key.status")
    doc_link=$(echo "$json_data" | jq -r ".$key.$inner_key.doc_link")
cat << EOF 
| $inner_key | $desc | $example | [references]($src_reference) |  $status | 
EOF


done
    done
}

echo "This will take a min a sort out the formating
Try to keep the json file as simple as possible"

echo "#!/bin/bash"  > "$script_dir/array.sh"
bash_ass_aray >> "$script_dir/array.sh" 
clear ; 
markdown_table > "$script_dir/features.md"


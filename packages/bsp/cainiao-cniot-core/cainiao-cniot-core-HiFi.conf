SectionVerb {
	Value {
		TQ "HiFi"
	}

	# Note that if some audio paths are not pre-configured here,
	# allowing audio streams to be input to the device without returning errors,
	# it will cause PipeWire to fail in parsing ALSA UCM.
	EnableSequence [
		# FRDDR_A -> TDMOUT_A -> TOHDMITX -> HDMI
		cset "name='FRDDR_A SINK 1 SEL' 'OUT 0'"
		cset "name='FRDDR_A SRC 1 EN Switch' on"
		cset "name='TDMOUT_A SRC SEL' 'IN 0'"
		cset "name='TOHDMITX Switch' off" # Disable output
		cset "name='TOHDMITX I2S SRC' 'I2S A'"

		# FRDDR_B -> TDMOUT_B -> TOACODEC -> ACODEC -> Internal Speaker
		cset "name='FRDDR_B SINK 1 SEL' 'OUT 1'"
		cset "name='FRDDR_B SRC 1 EN Switch' on"
		cset "name='TDMOUT_B SRC SEL' 'IN 1'"
		cset "name='TOACODEC Lane Select' 0"
		cset "name='TOACODEC OUT EN Switch' off" # Disable output
		cset "name='TOACODEC SRC' 'I2S B'"
		cset "name='ACODEC Playback Volume' 255"
	]
}

SectionDevice."HDMI" {
	Comment "HDMI"

	Value {
		PlaybackPriority 200
		PlaybackPCM "hw:${CardId},0" # plughw won't work
	}

	EnableSequence [
		cset "name='TOHDMITX Switch' on"
	]

	DisableSequence [
		cset "name='TOHDMITX Switch' off"
	]
}

SectionDevice."Speaker" {
	Comment "Internal Speaker"

	Value {
		PlaybackPriority 100
		PlaybackPCM "hw:${CardId},1" # plughw won't work
		PlaybackMixerElem "ACODEC"
	}

	EnableSequence [
		cset "name='TOACODEC OUT EN Switch' on"
	]

	DisableSequence [
		cset "name='TOACODEC OUT EN Switch' off"
	]
}

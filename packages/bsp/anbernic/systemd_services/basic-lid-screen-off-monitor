#!/bin/bash

# RG34XXSP Lid Switch Monitor
# Turns screen off/on when lid is closed/opened
# Uses backlight control via sysfs

LID_DEVICE="/dev/input/by-path/platform-gpio-keys-lid-event"
BACKLIGHT_PATH="/sys/class/backlight/backlight"
BRIGHTNESS_FILE="$BACKLIGHT_PATH/brightness"
MAX_BRIGHTNESS_FILE="$BACKLIGHT_PATH/max_brightness"

log_message() {
    echo "$(date): $1" | systemd-cat -t rg34xxsp-lid-monitor
}

# Check if backlight control is available
if [ ! -f "$BRIGHTNESS_FILE" ]; then
    log_message "Warning: Backlight control not available"
fi

turn_screen_off() {
    log_message "Lid closed - turning screen off"
    if [ -f "$BRIGHTNESS_FILE" ]; then
        echo 0 > "$BRIGHTNESS_FILE"
    fi
}

turn_screen_on() {
    log_message "Lid opened - turning screen on"
    if [ -f "$BRIGHTNESS_FILE" ]; then
        echo 1500 > "$BRIGHTNESS_FILE"
    fi
}

# Wait for lid device to be available
while [ ! -e "$LID_DEVICE" ]; do
    log_message "Waiting for lid device $LID_DEVICE..."
    sleep 1
done

log_message "Starting lid switch monitor on $LID_DEVICE"

# Monitor lid switch using input events
stdbuf -oL hexdump -C "$LID_DEVICE" | while read line; do
    # Look for EV_SW (0x05) SW_LID (0x00) events
    # Lid closed: value = 1 (05 00 00 00 01 00 00 00)
    # Lid open: value = 0 (05 00 00 00 00 00 00 00)
    if echo "$line" | grep -q "05 00 00 00 01 00 00 00"; then
        turn_screen_off
    elif echo "$line" | grep -q "05 00 00 00 00 00 00 00"; then
        turn_screen_on
    fi
done
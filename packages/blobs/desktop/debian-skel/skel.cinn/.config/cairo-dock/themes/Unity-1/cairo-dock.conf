#3.1.99.rc1
######## This is the conf file of Cairo-Dock, released under the GPL.##########
######## It is parsed by cairo-dock to automatically generate an appropriate GUI,##########
######## so don't mess into it, except if you know what you're doing ! ;-)##########

[Position]

#F-[Position on the screen;gtk-fullscreen]
frame_pos=

#l-[bottom;top;right;left] Choose which border of the screen the dock will be placed on:
screen border=3

#e-[0.;1.;left;right] Relative alignment:
#{When set to 0 the dock will position itself relative to the left corner if horizontal and the top corner if vertical. When set to 1 it will position itself relative to the right corner if horizontal and the bottom corner if vertical. When set to 0.5, it will position itself relative to the middle of the screen's edge.}
alignment=0.5

#r- Multi-screens
num_screen=0

#F-[Offset from the screen's edge;gtk-leave-fullscreen]
frame_scr=

#I-[-1000;1000] Lateral offset:
#{Gap from the absolute position on the screen's edge, in pixels. You can also move the dock by holding the ALT or CTRL key and the left mouse button.}
x gap=0
#i-[-30;1000] Distance to the screen edge:
#{in pixels. You can also move the dock by holding the ALT or CTRL key and the left mouse button.}
y gap=0


[Accessibility]

#F-[Visibility of the main dock;gtk-find]
frame_visi=

#Y-[Always on top;0;0;Reserve space for the dock;0;0;Keep the dock below;2;2;Hide the dock when it overlaps the current window;1;3;Hide the dock whenever it overlaps any window;1;3;Keep the dock hidden;1;3;Pop-up on shortcut;4;1] Visibility:
#{Modes are sorted from the most intrusive to the less intrusive.
#When the dock is hidden or below a window, place the mouse on the screen's border to call it back.
#When the dock pops up on shortcut, it will appear at the position of your mouse. The rest of the time, it stays invisible, thus acting like a menu.}
visibility=4

#v
sep_visi=

#L-[None;Move down;Fade out;Semi transparent;Zoom out;Folding] Effect used to hide the dock:
hide effect=Fade out

#e-[0;1;high;low] Callback sensitivity:
#{The higher, the faster the dock will appear}
edge sensitivity=0

#Y-[Hit the screen's border;0;0;Hit where the dock is;0;0;Hit the screen's corner;0;0;Hit a zone;1;2] How to call the dock back:
callback=1

#j-[2;999] Size of the zone :
zone size=80;10;

#S- Image to display on the zone :
callback image=

#k- Keyboard shortcut to pop-up the dock:
#{When you press the shortcut, the dock will show itself at the potition of your mouse. The rest of the time, it stays invisible, thus acting like a menu.}
raise shortcut=

#F-[Additional parameters]
frame_extra=

max_authorized_width=0

#b- Automatically hide the dock when a window becomes full screen?
#{This is only usefull if you do not already use auto-hide and if your Window Manager allows the dock in front of fullscreen windows (which is rare).}
auto quick hide=false

#F-[Sub-docks' visibility;/usr/share/cairo-dock/icons/icon-subdock.png]
frame_sub=

#Y-[Appear on mouse over;1;1;Appear on click;0;0] Visibility:
#{they will appear either when you click or when you linger over the icon pointing on it.}
show_on_click=0

#i- Delay before displaying a sub-dock:
#{in ms.}
show delay=300

#i- Delay before leaving a sub-dock takes effect:
#{in ms.}
leaving delay=250

lock icons=false
lock all=false


[TaskBar]

#F-[Behaviour;gtk-properties]
frame1=

#B-[8] Show currently opened applications in the dock?
#{Cairo-Dock will then act as your taskbar. It is recommended to remove any other taskbars.}
show applications=true

#b- Mix launchers and applications
#{Allows launchers to act as applications when their programs are running and displays a marker on icons to indicate this. You can launch other occurences of the program with SHIFT+click.}
mix launcher appli=true

#b- Only show applications on current desktop
current desktop only=false

#b- Only show icons whose windows are minimised
hide visible=false

#Y-[At the beginning of the dock;0;0;Before the launchers;0;0;After the launchers;0;0;At the end of the dock;0;0;After a given icon;1;1] Place new icons
place icons=2

#N Place new icons after this one
relative icon=

#b Automatically add a separator
separate applis=true

#B- Group windows from the same application in a sub-dock ?
#{This allows you to group all the windows of a given application into a unique sub-dock, and to act on all of the windows at the same time.}
group by class=true

#s- 		Except the following classes:
#{Enter the class of the applications, separated by a semi-colon ';'}
group exception=


#F-[Representation;gtk-find]
frame3=

#B- Overwrite the X icon with the launchers' icon?
#{If not set, the icon provided by X for each application will be used. If set, the same icon as the corresponding launcher will be used for each application.}
overwrite xicon=true

#s- 		Except the following classes:
#{Enter the class of the applications, separated by a semi-colon ';'}
overwrite exception=

#Y-[Make the icon transparent;1;1;Show a window's thumbnail;0;0;Draw it bent backwards;0;0] How to draw minimised windows ?
#{A composite manager is required to display the thumbnail.
#OpenGL is required to draw the icon bent backwards.}
minimized=1

#e-[0;.6;Opaque;Transparent] Transparency of icons whose window is minimised:
visibility alpha=0.35

#a- Play a short animation of the icon when its window becomes active
animation on active window=wobbly

#i- Maximum number of caracters in application name:
#{"..." will be added at the end if the name is too long.}
max name length=20

#F-[Interaction;gtk-refresh]
frame2=

#l-[Nothing;Close;Minimize;Launch new;Lower] Action on middle-click on the related application
action on middle click=1

#b- Minimise the window when its icon is clicked, if it was already the active window ?
#{This is the default behaviour of most taskbars.}
minimize on click=true

#b- Present windows preview on click when several windows are grouped togather
#{Only if your Window Manager supports it.}
present class on click=true

#v- 
sep_att=

#B-[2] Highlight applications requiring your attention with a dialog bubble
demands attention with dialog=true

#i-[1;20] Duration of the dialog:
#{in seconds}
duration=2

#s- Force the following applications to demand your attention
#{It will notify you even if, for instance, you are watching a movie in full screen or you are on another desktop.
#}
force demands attention=

#a- Highlight applications demanding your attention with an animation
animation on demands attention=rotate


[System]

#X-[Animations speed;/usr/share/cairo-dock/icons/icon-movment.png]
frame_mov=

#B- Animate sub-docks when they appear
animate subdocks=true

#I-[100;600;fast;slow] Animation unfolding duration:
#{Icons will appear folded on themselves and will then unfold until they fill the whole dock. The smaller this value, the faster this will be.}
unfold duration=300

#v
sep_unfold=

#I-[4;40;fast;slow] Number of steps in the zoom animation (grow/shrink):
#{The more there are, the slower it will be}
grow nb steps=10
#I-[4;40;fast;slow] ...
shrink nb steps=8

#v
sep_unhide=

#I-[4;40;fast;slow] Number of steps in the auto-hide animation (move up/move down):
#{The more there are, the slower it will be}
move up nb steps=10
#I-[4;40;fast;slow] ...
move down nb steps=16

#X-[Refresh rate;gtk-execute]
frame_cpu=

#i-[5;40] Refresh rate when mouving cursor into the dock:
#{in Hz. This is to adjust behaviour relative to your CPU power.}
refresh frequency=35

#i-&[15;60] Animation frequency for the OpenGL backend:
#{in Hz. This is to adjust behaviour relative to your CPU power.}
opengl anim freq=33

#i-*[15;50] Animation frequency for the Cairo backend:
#{in Hz. This is to adjust behaviour relative to your CPU power.}
cairo anim freq=25

#b-* Reflections should be calculated in real-time?
#{The transparency gradation pattern will then be re-calculated in real time. May need more CPU power.}
dynamic reflection=false

#X-[Composition;gtk-clear]
frame_fake=
#b- Emulate composition with fake transparency?
#{Only use this if you don't run a composite manager like Compiz, xcompmgr, etc and have a black background around your dock. For aesthetic reasons, the dock will be kept under other windows.}
fake transparency=false

#X-[Connection to the Internet;gtk-network]
frame_conn=

#i-[1;20] Connection timeout :
#{Maximum time in seconds that you allow the connection to the server to take. This only limits the connection phase,  once the dock has connected this option is of no more use.}
conn timeout=7

#i-[10;300] Maximum time to download a file:
#{Maximum time in seconds that you allow the whole operation to last. Some themes can be up to a few MB.}
conn max time=120

#b- Force IPv4 ?
#{Use this option if you experience problems to connect.}
force ipv4=true

#B-[4] Are you behind a proxy ?
#{Use this option if you connect to the Internet through a proxy.}
conn use proxy=false

#s- Proxy name :
conn proxy=

#i- Port :
conn port=0

#s- User :
#{Let empty if you don't need to log-in to the proxy with a user/password.}
conn user=

#p- Password :
#{Let empty if you don't need to log-in to the proxy with a user/password.}
conn passwd=

modules=GMenu;switcher;logout;Animated icons;dustbin;shortcuts;AlsaMixer;Recent-Events;Messaging Menu;icon effects;musicPlayer;illusion;clock;systray;Clipper;Note-Taking;showDesktop;PowerManager;Remote-Control


[Background]

#y+[Image;Colour gradation] Fill the background with:
fill bg=1

#F+[Image;gtk-orientation-portrait]
#{Use a background image.}
frame2=

#S+ Image filename to use as a background :
#{Any format allowed; if empty, the colour gradation will be used as a fall back.}
background image=/home/fab/.config/cairo-dock/extras/buttons/cairo-dock-cancel.svg

#e+[0;1;Transparent;Opaque] Image's transparency :
image alpha=1

#b+ Repeat image as a pattern to fill background?
repeat image=false

#F+[Colour gradation;/usr/share/cairo-dock/icons/icon-gradation.png]
#{Use a colour gradation.}
frame3=

#C+ Bright colour:
stripes color bright=0;0;0;1;

#C+ Dark colour:
stripes color dark=0.42742046234836345;0.42742046234836345;0.42742046234836345;1;

#f+[-90;90] Angle of the gradation :
#{In degrees, in relation to the vertical}
stripes angle=-90

#i+ Repeat the gradation this number of times:
#{If not nul, it will form stripes.}
number of stripes=1

#f+[0;1] Percentage of the bright colour:
stripes width=1

#F+[Background when hidden;gtk-orientation-portrait]
frame4=

#C+ Default background color when the dock is hidden
#{Several applets can be visible even when the dock is hidden}
hidden bg color=0.80000000000000004;0.80000000000000004;0.80000000000000004;0.5;

#F
frame4_=

#b+ Stretch the dock to always fill the screen
extended=false

#F+[External Frame;/usr/share/cairo-dock/icons/icon-frame.png]
frame_frame=
#i+[0;30] Corner radius :
#{in pixels.}
corner radius=8

#i+[0;20] Linewidth of the external line :
#{in pixels.}
line width=1

#C+ Colour of the external line:
line color=0.59678034637979704;0.59678034637979704;0.59678034637979704;1;

#i+[0;20] Margin between the frame and the icons or their reflects :
#{in pixels.}
frame margin=3

#b+ Are the bottom left and right corners rounded?
rounded bottom corner=true


[Views]

#F+[Main Dock]
frame_main=

#n+ Choose the default view for main docks :/
main dock view=3D plane

#F+[Sub-Docks]
frame_sub=

#n+ Choose the default view for sub-docks :
#{You can overwrite this parameter for each sub-dock.}/
sub-dock view=Slide

#e+[0.5;1.5;smaller;larger] Ratio for the size of the sub-docks' icons :
#{You can specify a ratio for the size of the sub-docks' icons, in relation to the main docks' icons size}
relative icon size=0.80000000000000004


[Dialogs]

#F+[Bubble;/usr/share/cairo-dock/icons/icon-bubble.png]
frame_bubble=

#C+ Background colour of the bubble:
background color=0.25806057831692991;0.25806057831692991;0.25806057831692991;0.74509803921568629;

#v
sep_bul=

#t+ Shape of the bubble:
decorator=tooltip

#F+[Text;gtk-select-font]
frame_text=

#B+ Use a custom font for the text?
#{Otherwise the default's system one will be used.}
custom=false

#P+ Text font:
message police=Sans 11

#b+ Draw the outline of the text?
outlined=false

#c+ Text color:
text color=1;1;1;

#F+[Buttons;/usr/share/cairo-dock/icons/icon-buttons.png]
frame_button=

#j+[10;64] Size of buttons in the info-bubbles (width x height) :
#{in pixels.}
button size=36;36;

#S+ Name of an image to use for the yes/ok button :
#{If you don't provide any, a default image will be used.}
button_ok image=

#S+ Name of an image to use for the no/cancel button :
#{If you don't provide any, a default image will be used.}
button_cancel image=

#F+
fin_button=

#i+[16;96] Size of the icon displayed next to the text :
icon size=34


[Desklets]

#F+[Decorations;gtk-paste]
frame_deco=

#O+ Choose a default decoration for all desklets :
#{This can be customized for each desklet separately.
#Choose 'Custom decoration' to define your own decorations below}
decorations=clear

#v
sep_deco=

#S+ Background image :
#{It's an image that will be displayed below the drawings, like a frame for example. Leave empty to not use any.}
bg desklet=
#e+[0;1;Transparent;Opaque] Background transparency :
bg alpha=1
#i+[0;256] Left offset :
#{in pixels. Use this to adjust the left position of the drawings.}
left offset=0
#i+[0;256] Top offset :
#{in pixels. Use this to adjust the top position of the drawings.}
top offset=0
#i+[0;256] Right offset :
#{in pixels. Use this to adjust the right position of the drawings.}
right offset=0
#i+[0;256] Bottom offset :
#{in pixels. Use this to adjust the bottom position of the drawings.}
bottom offset=0
#S+ Foreground image :
#{It's an image that will be displayed above the drawings, like a reflection for example. Leave empty to not use any.}
fg desklet=
#e+[0;1;Transparent;Opaque] Foreground tansparency :
fg alpha=1

#F+[Buttons;gtk-close]
frame_button=

#i+[4;28] Buttons size :
button size=16

#S+ Name of an image to use for the 'rotate' button :
#{If you don't provide any, a default image will be used.}
rotate image=

#S+ Name of an image to use for the 'reattach' button :
#{If you don't provide any, a default image will be used.}
retach image=

#S+ Name of an image to use for the 'depth rotate' button :
#{If you don't provide any, a default image will be used.}
depth rotate image=

#S+ Name of an image to use for the 'rotate' button :
#{If you don't provide any, a default image will be used.}
no input image=


[Icons]

#F+[Icons' themes;gtk-select-color]
frame_theme=

#w+ Choose an icon theme :
default icon directory=_Custom Icons_

#S+ Image filename to use as a background for icons :
#{Any format allowed; leave this field empty if you don't want to use an image as background.}
icons bg=icon-bg.svg

#F+[Icons size;gtk-zoom-fit]
frame_size=

#j+[10;128] Icons' size at rest (width x height) :
launcher size=42;42;

#i+[0;50] Space between icons :
#{in pixels.}
icon gap=4

#F+[Zoom effect;/usr/share/cairo-dock/icons/icon-wave.png]
frame_shape=
#f+[1;5] Maximum zoom of the icons :
#{set to 1 if you don't want the icons to zoom when you hover over them.}
zoom max=1.6000000000000001

#i+[1;999] Width of the space in which the zoom will be effective :
#{in pixels. Outside of this space (centered on the mouse), there is no zoom.}
sinusoid width=220

#F+[Separators]
frame_sep=

#j+[4;128] Icon size at rest (width x height) :
separator size=16;15;

#b+ Force separator's image size to stay constant?
force size=false

#Y+[Use an image.;1;2;Flat separator;3;1;Physical separator;0;0] How to draw the separators?
#{Only the default, 3D-plane and curve views support flat and physical separators. Flat separators are rendered differently according to the view.}
separator type=1

#S+ Filename of an image to use for separators :
#{If you don't provide one, blanks will be used.}
separator image=

#b+ Make the separator's image revolve when dock is on top/on the left/on the right?
revolve separator image=true

#C+ Colour of flat separators :
separator color=0.76266117341878381;0.75339894712748912;0.75339894712748912;0.78812848096437016;

#X+[Reflections]
frame_refl=

#e+[0;1;light;strong] Reflective power of the plane :
#{It is its albedo (reflectivity); at 1 the icons reflect to the maximum, at 0 reflections are not used.}
albedo=0.65500000000000003

#e+[0;1;small;tall] Height of the reflection:
#{In percent of the icon's size. This parameter influence the total height of the dock.}
field depth=0.40000000000000002

#e+[0;1;Transparent;Opaque] Icons' transparency at rest :
#{It is their transparency when the dock is at rest; they will "materialize" progressively as the dock grows up. The closer to 0, the more transparent they will be.}
alpha at rest=1

#X+[Link the icons with a string]
frame_string=

#i+[0;20] Linewidth of the string, in pixels (0 to not use string) :
string width=0

#C+ Colour of the string (red, blue, green, alpha) :
string color=0;0;0.59987792782482641;0.40000000000000002;


[Indicators]

#X+[Indicator of the active window]
frame_window=

#Y+[Image;1;1;Frame;2;3] Type of indicator:
active indic type=1

#S+ Image file:
active indicator=

#C+ Colour of the frame :
#{Set transparency to 0 if you don't want to use an indicator.}
active color=0.40198367284657055;0.42072175173571374;0.51036850537880518;1;

#i+[0;20] Linewidth of the frame around the active window :
#{Set 0 to fill the frame.}
active line width=3

#i+[0;30] Corner radius of the frame around the active window :
active corner radius=8

#v
sep_active=

#b+ Draw indicator above the icon?
active frame position=true


#X+[Indicator of active launcher]
frame_launch=

#S+ Image file:
#{Indicators are drawn on launchers icons to show that they have already been launched. Leave blank to use the default one.}
indicator image=

#b- Display an indicator on application icons too ?
#{The indicator is drawn on active launchers, but you may want to display it on applications too.}
indic on appli=true

#v
sep_ind=

#e+[-0.4;1.2] Vertical offset :
#{Relatively to the icons' size. You can use this parameter to adjust the indicator's vertical position.
#If the indicator is linked to the icon, the offset will be upwards, otherwise downwards.}
indicator offset=0.995

#b+ Link the indicator with its icon?
#{If the indicator is linked to the icon, it will then be zoomed like the icon and the offset will be upwards.
#Otherwise it will be drawn directly on the dock and the offset will be downwards.}
indicator on icon=false

#e+[0.1;1.5;smaller;bigger] Indicator size ratio :
#{You can choose to make the indicator smaller or bigger than the icons. The bigger the value is, the bigger the indicator is. 1 means the indicator will have the same size as the icons.}
indicator ratio=1

#b+ Rotate the indicator with dock?
#{Use it to make the indicator follow the orientation of the dock (top/bottom/right/left).}
rotate indicator=true

#b+ Draw indicator above the icon?
indicator above=true


#X+[Indicator of grouped windows]
frame_class=

#Y[Draw an emblem;1;2;Draw the sub-dock's icons as a stack;0;0] How to show that several icons are grouped :
use class indic=1

#S+ Image file:
#{It only makes sense if you chose to group the applis of the same class together. Leave blank to use the default one.}
class indicator=active.png

#b+ Zoom the indicator with its icon?
zoom class=true


#X+[Progress bars]
frame_bar=

#C+ Start color
bar_color_start=0.53000000000000003;0.53000000000000003;0.53000000000000003;0.84999999999999998;

#C+ End color
bar_color_stop=0.87;0.87;0.87;0.84999999999999998;

#B+ Draw outline
bar_outline=true

#C+ Outline color
bar_color_outline=1;1;1;0.84999999999999998;

#i-[2;10] Bar thickness
bar_thickness=4


[Labels]

#F-[Label visibility;gtk-underline]
frame_label=

#Y+[No;0;0;On pointed icon;0;0;On all icons;1;1] Show labels:
show_labels=2

#f-[0.;50.] label's visibility threshold :
#{the bigger, the more the labels next to the selected icon will be transparent.}
alpha threshold=50

#b- Should the labels always be horizontal, even when dock is vertical?
always horizontal=true

#F+[Font;gtk-select-font]
frame_font=

#B+ Use a custom font for labels?
#{Otherwise the default's system one will be used.}
custom=false

#P+ Font used for labels :
police=Comic Sans MS 12

#b+ Draw the outline of the text?
text oulined=true

#F+[Background;gtk-orientation-portrait]
frame_bg=

#C+ Colour of the label's background :
#{If you set it to fully transparent, there will be no background for the text, but the margin around the text will still be in effect.}
text background color=0.34677653162432287;0.34677653162432287;0.34677653162432287;1;

#i+[0;20] Margin around the text (in pixels) :
text margin=4

#F+[Colour;gtk-select-color]
frame_col=

#c+ Start color :
#{It's the first color of the gradation.}
text color start=1;1;1;

#c+ Stop color :
#{It's the second color of the gradation. Set it to the same value as the first if you don't want to have any gradation.}
text color stop=1;1;1;

#b+ Pattern should be vertical?
#{If checked, the pattern will go from top to bottom, otherwise from left to right.}
vertical label pattern=true

#F+[Quick-info;stock_dialog-info]
#{Quick-info are short information drawn on the icons.}
frame_qi=

#B[-2] Use the same look as the labels?
qi same=true

#c+ Text color:
qi text color=1;1;1;

#C+ Background color:
qi bg color=0;0;0;0.80000000000000004;
